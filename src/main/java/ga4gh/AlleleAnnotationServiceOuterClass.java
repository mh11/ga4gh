// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ga4gh/allele_annotation_service.proto

package ga4gh;

public final class AlleleAnnotationServiceOuterClass {
  private AlleleAnnotationServiceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SearchVariantAnnotationsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.SearchVariantAnnotationsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. The ID of the variant annotation set to search over.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    java.lang.String getVariantAnnotationSetId();
    /**
     * <pre>
     * Required. The ID of the variant annotation set to search over.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getVariantAnnotationSetIdBytes();

    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * name. One of this field or `reference_id` is required.
     * </pre>
     *
     * <code>optional string reference_name = 2;</code>
     */
    java.lang.String getReferenceName();
    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * name. One of this field or `reference_id` is required.
     * </pre>
     *
     * <code>optional string reference_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getReferenceNameBytes();

    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * ID. One of this field or `reference_name` is required.
     * </pre>
     *
     * <code>optional string reference_id = 3;</code>
     */
    java.lang.String getReferenceId();
    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * ID. One of this field or `reference_name` is required.
     * </pre>
     *
     * <code>optional string reference_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getReferenceIdBytes();

    /**
     * <pre>
     * Required if reference_name or reference_id supplied. The beginning of the
     * window (0-based, inclusive) for which variants with overlapping reference
     * alleles should be returned. Genomic positions are non-negative integers
     * less than reference length. Requests spanning the join of circular
     * genomes are represented as two requests one on each side of the join
     * (position 0).
     * </pre>
     *
     * <code>optional int64 start = 4;</code>
     */
    long getStart();

    /**
     * <pre>
     * Required if reference_name or reference_id supplied. The end of the window
     * (0-based, exclusive) for which variants with overlapping reference
     * alleles should be returned.
     * </pre>
     *
     * <code>optional int64 end = 5;</code>
     */
    long getEnd();

    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    java.util.List<ga4gh.Metadata.OntologyTerm> 
        getEffectsList();
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    ga4gh.Metadata.OntologyTerm getEffects(int index);
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    int getEffectsCount();
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    java.util.List<? extends ga4gh.Metadata.OntologyTermOrBuilder> 
        getEffectsOrBuilderList();
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    ga4gh.Metadata.OntologyTermOrBuilder getEffectsOrBuilder(
        int index);

    /**
     * <pre>
     * Specifies the maximum number of results to return in a single page. If
     * unspecified, a system default will be used.
     * </pre>
     *
     * <code>optional int32 page_size = 7;</code>
     */
    int getPageSize();

    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 8;</code>
     */
    java.lang.String getPageToken();
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 8;</code>
     */
    com.google.protobuf.ByteString
        getPageTokenBytes();
  }
  /**
   * <pre>
   * This request maps to the body of `POST /variantannotations/search` as JSON.
   * </pre>
   *
   * Protobuf type {@code ga4gh.SearchVariantAnnotationsRequest}
   */
  public  static final class SearchVariantAnnotationsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.SearchVariantAnnotationsRequest)
      SearchVariantAnnotationsRequestOrBuilder {
    // Use SearchVariantAnnotationsRequest.newBuilder() to construct.
    private SearchVariantAnnotationsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SearchVariantAnnotationsRequest() {
      variantAnnotationSetId_ = "";
      referenceName_ = "";
      referenceId_ = "";
      start_ = 0L;
      end_ = 0L;
      effects_ = java.util.Collections.emptyList();
      pageSize_ = 0;
      pageToken_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SearchVariantAnnotationsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              variantAnnotationSetId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceId_ = s;
              break;
            }
            case 32: {

              start_ = input.readInt64();
              break;
            }
            case 40: {

              end_ = input.readInt64();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                effects_ = new java.util.ArrayList<ga4gh.Metadata.OntologyTerm>();
                mutable_bitField0_ |= 0x00000020;
              }
              effects_.add(input.readMessage(ga4gh.Metadata.OntologyTerm.parser(), extensionRegistry));
              break;
            }
            case 56: {

              pageSize_ = input.readInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              pageToken_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          effects_ = java.util.Collections.unmodifiableList(effects_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int VARIANT_ANNOTATION_SET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object variantAnnotationSetId_;
    /**
     * <pre>
     * Required. The ID of the variant annotation set to search over.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    public java.lang.String getVariantAnnotationSetId() {
      java.lang.Object ref = variantAnnotationSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantAnnotationSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. The ID of the variant annotation set to search over.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVariantAnnotationSetIdBytes() {
      java.lang.Object ref = variantAnnotationSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantAnnotationSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERENCE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object referenceName_;
    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * name. One of this field or `reference_id` is required.
     * </pre>
     *
     * <code>optional string reference_name = 2;</code>
     */
    public java.lang.String getReferenceName() {
      java.lang.Object ref = referenceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * name. One of this field or `reference_id` is required.
     * </pre>
     *
     * <code>optional string reference_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceNameBytes() {
      java.lang.Object ref = referenceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERENCE_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object referenceId_;
    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * ID. One of this field or `reference_name` is required.
     * </pre>
     *
     * <code>optional string reference_id = 3;</code>
     */
    public java.lang.String getReferenceId() {
      java.lang.Object ref = referenceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Only return variants with reference alleles on the reference with this
     * ID. One of this field or `reference_name` is required.
     * </pre>
     *
     * <code>optional string reference_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceIdBytes() {
      java.lang.Object ref = referenceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_FIELD_NUMBER = 4;
    private long start_;
    /**
     * <pre>
     * Required if reference_name or reference_id supplied. The beginning of the
     * window (0-based, inclusive) for which variants with overlapping reference
     * alleles should be returned. Genomic positions are non-negative integers
     * less than reference length. Requests spanning the join of circular
     * genomes are represented as two requests one on each side of the join
     * (position 0).
     * </pre>
     *
     * <code>optional int64 start = 4;</code>
     */
    public long getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 5;
    private long end_;
    /**
     * <pre>
     * Required if reference_name or reference_id supplied. The end of the window
     * (0-based, exclusive) for which variants with overlapping reference
     * alleles should be returned.
     * </pre>
     *
     * <code>optional int64 end = 5;</code>
     */
    public long getEnd() {
      return end_;
    }

    public static final int EFFECTS_FIELD_NUMBER = 6;
    private java.util.List<ga4gh.Metadata.OntologyTerm> effects_;
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    public java.util.List<ga4gh.Metadata.OntologyTerm> getEffectsList() {
      return effects_;
    }
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    public java.util.List<? extends ga4gh.Metadata.OntologyTermOrBuilder> 
        getEffectsOrBuilderList() {
      return effects_;
    }
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    public int getEffectsCount() {
      return effects_.size();
    }
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    public ga4gh.Metadata.OntologyTerm getEffects(int index) {
      return effects_.get(index);
    }
    /**
     * <pre>
     * This filter allows variant, transcript combinations to be extracted by
     * effect type(s). Only return variant annotations including any of these
     * effects and only return transcript effects including any of these
     * effects. Exact matching across all fields of the Sequence Ontology
     * OntologyTerm is required. (A transcript effect may have multiple SO
     * effects which will all be reported.) If empty, return all variant
     * annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
     */
    public ga4gh.Metadata.OntologyTermOrBuilder getEffectsOrBuilder(
        int index) {
      return effects_.get(index);
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 7;
    private int pageSize_;
    /**
     * <pre>
     * Specifies the maximum number of results to return in a single page. If
     * unspecified, a system default will be used.
     * </pre>
     *
     * <code>optional int32 page_size = 7;</code>
     */
    public int getPageSize() {
      return pageSize_;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 8;
    private volatile java.lang.Object pageToken_;
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 8;</code>
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 8;</code>
     */
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVariantAnnotationSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, variantAnnotationSetId_);
      }
      if (!getReferenceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, referenceName_);
      }
      if (!getReferenceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, referenceId_);
      }
      if (start_ != 0L) {
        output.writeInt64(4, start_);
      }
      if (end_ != 0L) {
        output.writeInt64(5, end_);
      }
      for (int i = 0; i < effects_.size(); i++) {
        output.writeMessage(6, effects_.get(i));
      }
      if (pageSize_ != 0) {
        output.writeInt32(7, pageSize_);
      }
      if (!getPageTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 8, pageToken_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVariantAnnotationSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, variantAnnotationSetId_);
      }
      if (!getReferenceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, referenceName_);
      }
      if (!getReferenceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, referenceId_);
      }
      if (start_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, start_);
      }
      if (end_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, end_);
      }
      for (int i = 0; i < effects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, effects_.get(i));
      }
      if (pageSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pageSize_);
      }
      if (!getPageTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(8, pageToken_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This request maps to the body of `POST /variantannotations/search` as JSON.
     * </pre>
     *
     * Protobuf type {@code ga4gh.SearchVariantAnnotationsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.SearchVariantAnnotationsRequest)
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEffectsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        variantAnnotationSetId_ = "";

        referenceName_ = "";

        referenceId_ = "";

        start_ = 0L;

        end_ = 0L;

        if (effectsBuilder_ == null) {
          effects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          effectsBuilder_.clear();
        }
        pageSize_ = 0;

        pageToken_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsRequest_descriptor;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest build() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest buildPartial() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest result = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.variantAnnotationSetId_ = variantAnnotationSetId_;
        result.referenceName_ = referenceName_;
        result.referenceId_ = referenceId_;
        result.start_ = start_;
        result.end_ = end_;
        if (effectsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            effects_ = java.util.Collections.unmodifiableList(effects_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.effects_ = effects_;
        } else {
          result.effects_ = effectsBuilder_.build();
        }
        result.pageSize_ = pageSize_;
        result.pageToken_ = pageToken_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest) {
          return mergeFrom((ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest other) {
        if (other == ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest.getDefaultInstance()) return this;
        if (!other.getVariantAnnotationSetId().isEmpty()) {
          variantAnnotationSetId_ = other.variantAnnotationSetId_;
          onChanged();
        }
        if (!other.getReferenceName().isEmpty()) {
          referenceName_ = other.referenceName_;
          onChanged();
        }
        if (!other.getReferenceId().isEmpty()) {
          referenceId_ = other.referenceId_;
          onChanged();
        }
        if (other.getStart() != 0L) {
          setStart(other.getStart());
        }
        if (other.getEnd() != 0L) {
          setEnd(other.getEnd());
        }
        if (effectsBuilder_ == null) {
          if (!other.effects_.isEmpty()) {
            if (effects_.isEmpty()) {
              effects_ = other.effects_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureEffectsIsMutable();
              effects_.addAll(other.effects_);
            }
            onChanged();
          }
        } else {
          if (!other.effects_.isEmpty()) {
            if (effectsBuilder_.isEmpty()) {
              effectsBuilder_.dispose();
              effectsBuilder_ = null;
              effects_ = other.effects_;
              bitField0_ = (bitField0_ & ~0x00000020);
              effectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEffectsFieldBuilder() : null;
            } else {
              effectsBuilder_.addAllMessages(other.effects_);
            }
          }
        }
        if (other.getPageSize() != 0) {
          setPageSize(other.getPageSize());
        }
        if (!other.getPageToken().isEmpty()) {
          pageToken_ = other.pageToken_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object variantAnnotationSetId_ = "";
      /**
       * <pre>
       * Required. The ID of the variant annotation set to search over.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public java.lang.String getVariantAnnotationSetId() {
        java.lang.Object ref = variantAnnotationSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantAnnotationSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. The ID of the variant annotation set to search over.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVariantAnnotationSetIdBytes() {
        java.lang.Object ref = variantAnnotationSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantAnnotationSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. The ID of the variant annotation set to search over.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public Builder setVariantAnnotationSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantAnnotationSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The ID of the variant annotation set to search over.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public Builder clearVariantAnnotationSetId() {
        
        variantAnnotationSetId_ = getDefaultInstance().getVariantAnnotationSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The ID of the variant annotation set to search over.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public Builder setVariantAnnotationSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantAnnotationSetId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object referenceName_ = "";
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * name. One of this field or `reference_id` is required.
       * </pre>
       *
       * <code>optional string reference_name = 2;</code>
       */
      public java.lang.String getReferenceName() {
        java.lang.Object ref = referenceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * name. One of this field or `reference_id` is required.
       * </pre>
       *
       * <code>optional string reference_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReferenceNameBytes() {
        java.lang.Object ref = referenceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * name. One of this field or `reference_id` is required.
       * </pre>
       *
       * <code>optional string reference_name = 2;</code>
       */
      public Builder setReferenceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * name. One of this field or `reference_id` is required.
       * </pre>
       *
       * <code>optional string reference_name = 2;</code>
       */
      public Builder clearReferenceName() {
        
        referenceName_ = getDefaultInstance().getReferenceName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * name. One of this field or `reference_id` is required.
       * </pre>
       *
       * <code>optional string reference_name = 2;</code>
       */
      public Builder setReferenceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object referenceId_ = "";
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * ID. One of this field or `reference_name` is required.
       * </pre>
       *
       * <code>optional string reference_id = 3;</code>
       */
      public java.lang.String getReferenceId() {
        java.lang.Object ref = referenceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * ID. One of this field or `reference_name` is required.
       * </pre>
       *
       * <code>optional string reference_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getReferenceIdBytes() {
        java.lang.Object ref = referenceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * ID. One of this field or `reference_name` is required.
       * </pre>
       *
       * <code>optional string reference_id = 3;</code>
       */
      public Builder setReferenceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * ID. One of this field or `reference_name` is required.
       * </pre>
       *
       * <code>optional string reference_id = 3;</code>
       */
      public Builder clearReferenceId() {
        
        referenceId_ = getDefaultInstance().getReferenceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only return variants with reference alleles on the reference with this
       * ID. One of this field or `reference_name` is required.
       * </pre>
       *
       * <code>optional string reference_id = 3;</code>
       */
      public Builder setReferenceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceId_ = value;
        onChanged();
        return this;
      }

      private long start_ ;
      /**
       * <pre>
       * Required if reference_name or reference_id supplied. The beginning of the
       * window (0-based, inclusive) for which variants with overlapping reference
       * alleles should be returned. Genomic positions are non-negative integers
       * less than reference length. Requests spanning the join of circular
       * genomes are represented as two requests one on each side of the join
       * (position 0).
       * </pre>
       *
       * <code>optional int64 start = 4;</code>
       */
      public long getStart() {
        return start_;
      }
      /**
       * <pre>
       * Required if reference_name or reference_id supplied. The beginning of the
       * window (0-based, inclusive) for which variants with overlapping reference
       * alleles should be returned. Genomic positions are non-negative integers
       * less than reference length. Requests spanning the join of circular
       * genomes are represented as two requests one on each side of the join
       * (position 0).
       * </pre>
       *
       * <code>optional int64 start = 4;</code>
       */
      public Builder setStart(long value) {
        
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required if reference_name or reference_id supplied. The beginning of the
       * window (0-based, inclusive) for which variants with overlapping reference
       * alleles should be returned. Genomic positions are non-negative integers
       * less than reference length. Requests spanning the join of circular
       * genomes are represented as two requests one on each side of the join
       * (position 0).
       * </pre>
       *
       * <code>optional int64 start = 4;</code>
       */
      public Builder clearStart() {
        
        start_ = 0L;
        onChanged();
        return this;
      }

      private long end_ ;
      /**
       * <pre>
       * Required if reference_name or reference_id supplied. The end of the window
       * (0-based, exclusive) for which variants with overlapping reference
       * alleles should be returned.
       * </pre>
       *
       * <code>optional int64 end = 5;</code>
       */
      public long getEnd() {
        return end_;
      }
      /**
       * <pre>
       * Required if reference_name or reference_id supplied. The end of the window
       * (0-based, exclusive) for which variants with overlapping reference
       * alleles should be returned.
       * </pre>
       *
       * <code>optional int64 end = 5;</code>
       */
      public Builder setEnd(long value) {
        
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required if reference_name or reference_id supplied. The end of the window
       * (0-based, exclusive) for which variants with overlapping reference
       * alleles should be returned.
       * </pre>
       *
       * <code>optional int64 end = 5;</code>
       */
      public Builder clearEnd() {
        
        end_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<ga4gh.Metadata.OntologyTerm> effects_ =
        java.util.Collections.emptyList();
      private void ensureEffectsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          effects_ = new java.util.ArrayList<ga4gh.Metadata.OntologyTerm>(effects_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Metadata.OntologyTerm, ga4gh.Metadata.OntologyTerm.Builder, ga4gh.Metadata.OntologyTermOrBuilder> effectsBuilder_;

      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public java.util.List<ga4gh.Metadata.OntologyTerm> getEffectsList() {
        if (effectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(effects_);
        } else {
          return effectsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public int getEffectsCount() {
        if (effectsBuilder_ == null) {
          return effects_.size();
        } else {
          return effectsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public ga4gh.Metadata.OntologyTerm getEffects(int index) {
        if (effectsBuilder_ == null) {
          return effects_.get(index);
        } else {
          return effectsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder setEffects(
          int index, ga4gh.Metadata.OntologyTerm value) {
        if (effectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectsIsMutable();
          effects_.set(index, value);
          onChanged();
        } else {
          effectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder setEffects(
          int index, ga4gh.Metadata.OntologyTerm.Builder builderForValue) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.set(index, builderForValue.build());
          onChanged();
        } else {
          effectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder addEffects(ga4gh.Metadata.OntologyTerm value) {
        if (effectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectsIsMutable();
          effects_.add(value);
          onChanged();
        } else {
          effectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder addEffects(
          int index, ga4gh.Metadata.OntologyTerm value) {
        if (effectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectsIsMutable();
          effects_.add(index, value);
          onChanged();
        } else {
          effectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder addEffects(
          ga4gh.Metadata.OntologyTerm.Builder builderForValue) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.add(builderForValue.build());
          onChanged();
        } else {
          effectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder addEffects(
          int index, ga4gh.Metadata.OntologyTerm.Builder builderForValue) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.add(index, builderForValue.build());
          onChanged();
        } else {
          effectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder addAllEffects(
          java.lang.Iterable<? extends ga4gh.Metadata.OntologyTerm> values) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, effects_);
          onChanged();
        } else {
          effectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder clearEffects() {
        if (effectsBuilder_ == null) {
          effects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          effectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public Builder removeEffects(int index) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.remove(index);
          onChanged();
        } else {
          effectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public ga4gh.Metadata.OntologyTerm.Builder getEffectsBuilder(
          int index) {
        return getEffectsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public ga4gh.Metadata.OntologyTermOrBuilder getEffectsOrBuilder(
          int index) {
        if (effectsBuilder_ == null) {
          return effects_.get(index);  } else {
          return effectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public java.util.List<? extends ga4gh.Metadata.OntologyTermOrBuilder> 
           getEffectsOrBuilderList() {
        if (effectsBuilder_ != null) {
          return effectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(effects_);
        }
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public ga4gh.Metadata.OntologyTerm.Builder addEffectsBuilder() {
        return getEffectsFieldBuilder().addBuilder(
            ga4gh.Metadata.OntologyTerm.getDefaultInstance());
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public ga4gh.Metadata.OntologyTerm.Builder addEffectsBuilder(
          int index) {
        return getEffectsFieldBuilder().addBuilder(
            index, ga4gh.Metadata.OntologyTerm.getDefaultInstance());
      }
      /**
       * <pre>
       * This filter allows variant, transcript combinations to be extracted by
       * effect type(s). Only return variant annotations including any of these
       * effects and only return transcript effects including any of these
       * effects. Exact matching across all fields of the Sequence Ontology
       * OntologyTerm is required. (A transcript effect may have multiple SO
       * effects which will all be reported.) If empty, return all variant
       * annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 6;</code>
       */
      public java.util.List<ga4gh.Metadata.OntologyTerm.Builder> 
           getEffectsBuilderList() {
        return getEffectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Metadata.OntologyTerm, ga4gh.Metadata.OntologyTerm.Builder, ga4gh.Metadata.OntologyTermOrBuilder> 
          getEffectsFieldBuilder() {
        if (effectsBuilder_ == null) {
          effectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.Metadata.OntologyTerm, ga4gh.Metadata.OntologyTerm.Builder, ga4gh.Metadata.OntologyTermOrBuilder>(
                  effects_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          effects_ = null;
        }
        return effectsBuilder_;
      }

      private int pageSize_ ;
      /**
       * <pre>
       * Specifies the maximum number of results to return in a single page. If
       * unspecified, a system default will be used.
       * </pre>
       *
       * <code>optional int32 page_size = 7;</code>
       */
      public int getPageSize() {
        return pageSize_;
      }
      /**
       * <pre>
       * Specifies the maximum number of results to return in a single page. If
       * unspecified, a system default will be used.
       * </pre>
       *
       * <code>optional int32 page_size = 7;</code>
       */
      public Builder setPageSize(int value) {
        
        pageSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the maximum number of results to return in a single page. If
       * unspecified, a system default will be used.
       * </pre>
       *
       * <code>optional int32 page_size = 7;</code>
       */
      public Builder clearPageSize() {
        
        pageSize_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pageToken_ = "";
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 8;</code>
       */
      public java.lang.String getPageToken() {
        java.lang.Object ref = pageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 8;</code>
       */
      public com.google.protobuf.ByteString
          getPageTokenBytes() {
        java.lang.Object ref = pageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 8;</code>
       */
      public Builder setPageToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pageToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 8;</code>
       */
      public Builder clearPageToken() {
        
        pageToken_ = getDefaultInstance().getPageToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 8;</code>
       */
      public Builder setPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pageToken_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.SearchVariantAnnotationsRequest)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationsRequest)
    private static final ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest();
    }

    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SearchVariantAnnotationsRequest>
        PARSER = new com.google.protobuf.AbstractParser<SearchVariantAnnotationsRequest>() {
      public SearchVariantAnnotationsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SearchVariantAnnotationsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SearchVariantAnnotationsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SearchVariantAnnotationsRequest> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SearchVariantAnnotationsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.SearchVariantAnnotationsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    java.util.List<ga4gh.AlleleAnnotations.VariantAnnotation> 
        getVariantAnnotationsList();
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    ga4gh.AlleleAnnotations.VariantAnnotation getVariantAnnotations(int index);
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    int getVariantAnnotationsCount();
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    java.util.List<? extends ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder> 
        getVariantAnnotationsOrBuilderList();
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder getVariantAnnotationsOrBuilder(
        int index);

    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    java.lang.String getNextPageToken();
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    com.google.protobuf.ByteString
        getNextPageTokenBytes();
  }
  /**
   * <pre>
   * This is the response from `POST /variantannotations/search` expressed as
   * JSON.
   * </pre>
   *
   * Protobuf type {@code ga4gh.SearchVariantAnnotationsResponse}
   */
  public  static final class SearchVariantAnnotationsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.SearchVariantAnnotationsResponse)
      SearchVariantAnnotationsResponseOrBuilder {
    // Use SearchVariantAnnotationsResponse.newBuilder() to construct.
    private SearchVariantAnnotationsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SearchVariantAnnotationsResponse() {
      variantAnnotations_ = java.util.Collections.emptyList();
      nextPageToken_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SearchVariantAnnotationsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                variantAnnotations_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.VariantAnnotation>();
                mutable_bitField0_ |= 0x00000001;
              }
              variantAnnotations_.add(input.readMessage(ga4gh.AlleleAnnotations.VariantAnnotation.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              nextPageToken_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          variantAnnotations_ = java.util.Collections.unmodifiableList(variantAnnotations_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse.Builder.class);
    }

    private int bitField0_;
    public static final int VARIANT_ANNOTATIONS_FIELD_NUMBER = 1;
    private java.util.List<ga4gh.AlleleAnnotations.VariantAnnotation> variantAnnotations_;
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    public java.util.List<ga4gh.AlleleAnnotations.VariantAnnotation> getVariantAnnotationsList() {
      return variantAnnotations_;
    }
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    public java.util.List<? extends ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder> 
        getVariantAnnotationsOrBuilderList() {
      return variantAnnotations_;
    }
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    public int getVariantAnnotationsCount() {
      return variantAnnotations_.size();
    }
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    public ga4gh.AlleleAnnotations.VariantAnnotation getVariantAnnotations(int index) {
      return variantAnnotations_.get(index);
    }
    /**
     * <pre>
     * The list of matching variant annotations.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
     */
    public ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder getVariantAnnotationsOrBuilder(
        int index) {
      return variantAnnotations_.get(index);
    }

    public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;
    private volatile java.lang.Object nextPageToken_;
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    public java.lang.String getNextPageToken() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextPageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNextPageTokenBytes() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < variantAnnotations_.size(); i++) {
        output.writeMessage(1, variantAnnotations_.get(i));
      }
      if (!getNextPageTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, nextPageToken_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < variantAnnotations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, variantAnnotations_.get(i));
      }
      if (!getNextPageTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, nextPageToken_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This is the response from `POST /variantannotations/search` expressed as
     * JSON.
     * </pre>
     *
     * Protobuf type {@code ga4gh.SearchVariantAnnotationsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.SearchVariantAnnotationsResponse)
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariantAnnotationsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (variantAnnotationsBuilder_ == null) {
          variantAnnotations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          variantAnnotationsBuilder_.clear();
        }
        nextPageToken_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationsResponse_descriptor;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse build() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse buildPartial() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse result = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (variantAnnotationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            variantAnnotations_ = java.util.Collections.unmodifiableList(variantAnnotations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.variantAnnotations_ = variantAnnotations_;
        } else {
          result.variantAnnotations_ = variantAnnotationsBuilder_.build();
        }
        result.nextPageToken_ = nextPageToken_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse) {
          return mergeFrom((ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse other) {
        if (other == ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse.getDefaultInstance()) return this;
        if (variantAnnotationsBuilder_ == null) {
          if (!other.variantAnnotations_.isEmpty()) {
            if (variantAnnotations_.isEmpty()) {
              variantAnnotations_ = other.variantAnnotations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVariantAnnotationsIsMutable();
              variantAnnotations_.addAll(other.variantAnnotations_);
            }
            onChanged();
          }
        } else {
          if (!other.variantAnnotations_.isEmpty()) {
            if (variantAnnotationsBuilder_.isEmpty()) {
              variantAnnotationsBuilder_.dispose();
              variantAnnotationsBuilder_ = null;
              variantAnnotations_ = other.variantAnnotations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              variantAnnotationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariantAnnotationsFieldBuilder() : null;
            } else {
              variantAnnotationsBuilder_.addAllMessages(other.variantAnnotations_);
            }
          }
        }
        if (!other.getNextPageToken().isEmpty()) {
          nextPageToken_ = other.nextPageToken_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<ga4gh.AlleleAnnotations.VariantAnnotation> variantAnnotations_ =
        java.util.Collections.emptyList();
      private void ensureVariantAnnotationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          variantAnnotations_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.VariantAnnotation>(variantAnnotations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.VariantAnnotation, ga4gh.AlleleAnnotations.VariantAnnotation.Builder, ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder> variantAnnotationsBuilder_;

      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.VariantAnnotation> getVariantAnnotationsList() {
        if (variantAnnotationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variantAnnotations_);
        } else {
          return variantAnnotationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public int getVariantAnnotationsCount() {
        if (variantAnnotationsBuilder_ == null) {
          return variantAnnotations_.size();
        } else {
          return variantAnnotationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotation getVariantAnnotations(int index) {
        if (variantAnnotationsBuilder_ == null) {
          return variantAnnotations_.get(index);
        } else {
          return variantAnnotationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder setVariantAnnotations(
          int index, ga4gh.AlleleAnnotations.VariantAnnotation value) {
        if (variantAnnotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantAnnotationsIsMutable();
          variantAnnotations_.set(index, value);
          onChanged();
        } else {
          variantAnnotationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder setVariantAnnotations(
          int index, ga4gh.AlleleAnnotations.VariantAnnotation.Builder builderForValue) {
        if (variantAnnotationsBuilder_ == null) {
          ensureVariantAnnotationsIsMutable();
          variantAnnotations_.set(index, builderForValue.build());
          onChanged();
        } else {
          variantAnnotationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder addVariantAnnotations(ga4gh.AlleleAnnotations.VariantAnnotation value) {
        if (variantAnnotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantAnnotationsIsMutable();
          variantAnnotations_.add(value);
          onChanged();
        } else {
          variantAnnotationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder addVariantAnnotations(
          int index, ga4gh.AlleleAnnotations.VariantAnnotation value) {
        if (variantAnnotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantAnnotationsIsMutable();
          variantAnnotations_.add(index, value);
          onChanged();
        } else {
          variantAnnotationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder addVariantAnnotations(
          ga4gh.AlleleAnnotations.VariantAnnotation.Builder builderForValue) {
        if (variantAnnotationsBuilder_ == null) {
          ensureVariantAnnotationsIsMutable();
          variantAnnotations_.add(builderForValue.build());
          onChanged();
        } else {
          variantAnnotationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder addVariantAnnotations(
          int index, ga4gh.AlleleAnnotations.VariantAnnotation.Builder builderForValue) {
        if (variantAnnotationsBuilder_ == null) {
          ensureVariantAnnotationsIsMutable();
          variantAnnotations_.add(index, builderForValue.build());
          onChanged();
        } else {
          variantAnnotationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder addAllVariantAnnotations(
          java.lang.Iterable<? extends ga4gh.AlleleAnnotations.VariantAnnotation> values) {
        if (variantAnnotationsBuilder_ == null) {
          ensureVariantAnnotationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, variantAnnotations_);
          onChanged();
        } else {
          variantAnnotationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder clearVariantAnnotations() {
        if (variantAnnotationsBuilder_ == null) {
          variantAnnotations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          variantAnnotationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public Builder removeVariantAnnotations(int index) {
        if (variantAnnotationsBuilder_ == null) {
          ensureVariantAnnotationsIsMutable();
          variantAnnotations_.remove(index);
          onChanged();
        } else {
          variantAnnotationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotation.Builder getVariantAnnotationsBuilder(
          int index) {
        return getVariantAnnotationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder getVariantAnnotationsOrBuilder(
          int index) {
        if (variantAnnotationsBuilder_ == null) {
          return variantAnnotations_.get(index);  } else {
          return variantAnnotationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public java.util.List<? extends ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder> 
           getVariantAnnotationsOrBuilderList() {
        if (variantAnnotationsBuilder_ != null) {
          return variantAnnotationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variantAnnotations_);
        }
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotation.Builder addVariantAnnotationsBuilder() {
        return getVariantAnnotationsFieldBuilder().addBuilder(
            ga4gh.AlleleAnnotations.VariantAnnotation.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotation.Builder addVariantAnnotationsBuilder(
          int index) {
        return getVariantAnnotationsFieldBuilder().addBuilder(
            index, ga4gh.AlleleAnnotations.VariantAnnotation.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of matching variant annotations.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotation variant_annotations = 1;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.VariantAnnotation.Builder> 
           getVariantAnnotationsBuilderList() {
        return getVariantAnnotationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.VariantAnnotation, ga4gh.AlleleAnnotations.VariantAnnotation.Builder, ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder> 
          getVariantAnnotationsFieldBuilder() {
        if (variantAnnotationsBuilder_ == null) {
          variantAnnotationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.AlleleAnnotations.VariantAnnotation, ga4gh.AlleleAnnotations.VariantAnnotation.Builder, ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder>(
                  variantAnnotations_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          variantAnnotations_ = null;
        }
        return variantAnnotationsBuilder_;
      }

      private java.lang.Object nextPageToken_ = "";
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public java.lang.String getNextPageToken() {
        java.lang.Object ref = nextPageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nextPageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNextPageTokenBytes() {
        java.lang.Object ref = nextPageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public Builder setNextPageToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nextPageToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public Builder clearNextPageToken() {
        
        nextPageToken_ = getDefaultInstance().getNextPageToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public Builder setNextPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nextPageToken_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.SearchVariantAnnotationsResponse)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationsResponse)
    private static final ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse();
    }

    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SearchVariantAnnotationsResponse>
        PARSER = new com.google.protobuf.AbstractParser<SearchVariantAnnotationsResponse>() {
      public SearchVariantAnnotationsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SearchVariantAnnotationsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SearchVariantAnnotationsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SearchVariantAnnotationsResponse> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SearchVariantAnnotationSetsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.SearchVariantAnnotationSetsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. The `VariantSet` to search.
     * </pre>
     *
     * <code>optional string variant_set_id = 1;</code>
     */
    java.lang.String getVariantSetId();
    /**
     * <pre>
     * Required. The `VariantSet` to search.
     * </pre>
     *
     * <code>optional string variant_set_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getVariantSetIdBytes();

    /**
     * <pre>
     * Specifies the maximum number of results to return in a single page. If
     * unspecified, a system default will be used.
     * </pre>
     *
     * <code>optional int32 page_size = 2;</code>
     */
    int getPageSize();

    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 3;</code>
     */
    java.lang.String getPageToken();
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 3;</code>
     */
    com.google.protobuf.ByteString
        getPageTokenBytes();
  }
  /**
   * <pre>
   * This request maps to the body of `POST /variantannotationsets/search` as
   * JSON.
   * </pre>
   *
   * Protobuf type {@code ga4gh.SearchVariantAnnotationSetsRequest}
   */
  public  static final class SearchVariantAnnotationSetsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.SearchVariantAnnotationSetsRequest)
      SearchVariantAnnotationSetsRequestOrBuilder {
    // Use SearchVariantAnnotationSetsRequest.newBuilder() to construct.
    private SearchVariantAnnotationSetsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SearchVariantAnnotationSetsRequest() {
      variantSetId_ = "";
      pageSize_ = 0;
      pageToken_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SearchVariantAnnotationSetsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              variantSetId_ = s;
              break;
            }
            case 16: {

              pageSize_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              pageToken_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest.Builder.class);
    }

    public static final int VARIANT_SET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object variantSetId_;
    /**
     * <pre>
     * Required. The `VariantSet` to search.
     * </pre>
     *
     * <code>optional string variant_set_id = 1;</code>
     */
    public java.lang.String getVariantSetId() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. The `VariantSet` to search.
     * </pre>
     *
     * <code>optional string variant_set_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVariantSetIdBytes() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 2;
    private int pageSize_;
    /**
     * <pre>
     * Specifies the maximum number of results to return in a single page. If
     * unspecified, a system default will be used.
     * </pre>
     *
     * <code>optional int32 page_size = 2;</code>
     */
    public int getPageSize() {
      return pageSize_;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 3;
    private volatile java.lang.Object pageToken_;
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 3;</code>
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `next_page_token` from the previous response.
     * </pre>
     *
     * <code>optional string page_token = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVariantSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, variantSetId_);
      }
      if (pageSize_ != 0) {
        output.writeInt32(2, pageSize_);
      }
      if (!getPageTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, pageToken_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVariantSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, variantSetId_);
      }
      if (pageSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pageSize_);
      }
      if (!getPageTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, pageToken_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This request maps to the body of `POST /variantannotationsets/search` as
     * JSON.
     * </pre>
     *
     * Protobuf type {@code ga4gh.SearchVariantAnnotationSetsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.SearchVariantAnnotationSetsRequest)
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        variantSetId_ = "";

        pageSize_ = 0;

        pageToken_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsRequest_descriptor;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest build() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest buildPartial() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest result = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest(this);
        result.variantSetId_ = variantSetId_;
        result.pageSize_ = pageSize_;
        result.pageToken_ = pageToken_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest) {
          return mergeFrom((ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest other) {
        if (other == ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest.getDefaultInstance()) return this;
        if (!other.getVariantSetId().isEmpty()) {
          variantSetId_ = other.variantSetId_;
          onChanged();
        }
        if (other.getPageSize() != 0) {
          setPageSize(other.getPageSize());
        }
        if (!other.getPageToken().isEmpty()) {
          pageToken_ = other.pageToken_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object variantSetId_ = "";
      /**
       * <pre>
       * Required. The `VariantSet` to search.
       * </pre>
       *
       * <code>optional string variant_set_id = 1;</code>
       */
      public java.lang.String getVariantSetId() {
        java.lang.Object ref = variantSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. The `VariantSet` to search.
       * </pre>
       *
       * <code>optional string variant_set_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVariantSetIdBytes() {
        java.lang.Object ref = variantSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. The `VariantSet` to search.
       * </pre>
       *
       * <code>optional string variant_set_id = 1;</code>
       */
      public Builder setVariantSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The `VariantSet` to search.
       * </pre>
       *
       * <code>optional string variant_set_id = 1;</code>
       */
      public Builder clearVariantSetId() {
        
        variantSetId_ = getDefaultInstance().getVariantSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The `VariantSet` to search.
       * </pre>
       *
       * <code>optional string variant_set_id = 1;</code>
       */
      public Builder setVariantSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantSetId_ = value;
        onChanged();
        return this;
      }

      private int pageSize_ ;
      /**
       * <pre>
       * Specifies the maximum number of results to return in a single page. If
       * unspecified, a system default will be used.
       * </pre>
       *
       * <code>optional int32 page_size = 2;</code>
       */
      public int getPageSize() {
        return pageSize_;
      }
      /**
       * <pre>
       * Specifies the maximum number of results to return in a single page. If
       * unspecified, a system default will be used.
       * </pre>
       *
       * <code>optional int32 page_size = 2;</code>
       */
      public Builder setPageSize(int value) {
        
        pageSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the maximum number of results to return in a single page. If
       * unspecified, a system default will be used.
       * </pre>
       *
       * <code>optional int32 page_size = 2;</code>
       */
      public Builder clearPageSize() {
        
        pageSize_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pageToken_ = "";
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 3;</code>
       */
      public java.lang.String getPageToken() {
        java.lang.Object ref = pageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPageTokenBytes() {
        java.lang.Object ref = pageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 3;</code>
       */
      public Builder setPageToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pageToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 3;</code>
       */
      public Builder clearPageToken() {
        
        pageToken_ = getDefaultInstance().getPageToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * To get the next page of results, set this parameter to the value of
       * `next_page_token` from the previous response.
       * </pre>
       *
       * <code>optional string page_token = 3;</code>
       */
      public Builder setPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pageToken_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.SearchVariantAnnotationSetsRequest)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationSetsRequest)
    private static final ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest();
    }

    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SearchVariantAnnotationSetsRequest>
        PARSER = new com.google.protobuf.AbstractParser<SearchVariantAnnotationSetsRequest>() {
      public SearchVariantAnnotationSetsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SearchVariantAnnotationSetsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SearchVariantAnnotationSetsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SearchVariantAnnotationSetsRequest> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SearchVariantAnnotationSetsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.SearchVariantAnnotationSetsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    java.util.List<ga4gh.AlleleAnnotations.VariantAnnotationSet> 
        getVariantAnnotationSetsList();
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    ga4gh.AlleleAnnotations.VariantAnnotationSet getVariantAnnotationSets(int index);
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    int getVariantAnnotationSetsCount();
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    java.util.List<? extends ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder> 
        getVariantAnnotationSetsOrBuilderList();
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder getVariantAnnotationSetsOrBuilder(
        int index);

    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    java.lang.String getNextPageToken();
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    com.google.protobuf.ByteString
        getNextPageTokenBytes();
  }
  /**
   * <pre>
   * This is the response from `POST /variantannotationsets/search` expressed as
   * JSON.
   * </pre>
   *
   * Protobuf type {@code ga4gh.SearchVariantAnnotationSetsResponse}
   */
  public  static final class SearchVariantAnnotationSetsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.SearchVariantAnnotationSetsResponse)
      SearchVariantAnnotationSetsResponseOrBuilder {
    // Use SearchVariantAnnotationSetsResponse.newBuilder() to construct.
    private SearchVariantAnnotationSetsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SearchVariantAnnotationSetsResponse() {
      variantAnnotationSets_ = java.util.Collections.emptyList();
      nextPageToken_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SearchVariantAnnotationSetsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                variantAnnotationSets_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.VariantAnnotationSet>();
                mutable_bitField0_ |= 0x00000001;
              }
              variantAnnotationSets_.add(input.readMessage(ga4gh.AlleleAnnotations.VariantAnnotationSet.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              nextPageToken_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          variantAnnotationSets_ = java.util.Collections.unmodifiableList(variantAnnotationSets_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse.Builder.class);
    }

    private int bitField0_;
    public static final int VARIANT_ANNOTATION_SETS_FIELD_NUMBER = 1;
    private java.util.List<ga4gh.AlleleAnnotations.VariantAnnotationSet> variantAnnotationSets_;
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    public java.util.List<ga4gh.AlleleAnnotations.VariantAnnotationSet> getVariantAnnotationSetsList() {
      return variantAnnotationSets_;
    }
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    public java.util.List<? extends ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder> 
        getVariantAnnotationSetsOrBuilderList() {
      return variantAnnotationSets_;
    }
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    public int getVariantAnnotationSetsCount() {
      return variantAnnotationSets_.size();
    }
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    public ga4gh.AlleleAnnotations.VariantAnnotationSet getVariantAnnotationSets(int index) {
      return variantAnnotationSets_.get(index);
    }
    /**
     * <pre>
     * The list of matching variant annotation sets.
     * </pre>
     *
     * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
     */
    public ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder getVariantAnnotationSetsOrBuilder(
        int index) {
      return variantAnnotationSets_.get(index);
    }

    public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;
    private volatile java.lang.Object nextPageToken_;
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    public java.lang.String getNextPageToken() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextPageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * Provide this value in a subsequent request to return the next page of
     * results. This field will be empty if there aren't any additional results.
     * </pre>
     *
     * <code>optional string next_page_token = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNextPageTokenBytes() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < variantAnnotationSets_.size(); i++) {
        output.writeMessage(1, variantAnnotationSets_.get(i));
      }
      if (!getNextPageTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, nextPageToken_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < variantAnnotationSets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, variantAnnotationSets_.get(i));
      }
      if (!getNextPageTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, nextPageToken_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This is the response from `POST /variantannotationsets/search` expressed as
     * JSON.
     * </pre>
     *
     * Protobuf type {@code ga4gh.SearchVariantAnnotationSetsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.SearchVariantAnnotationSetsResponse)
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse.class, ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariantAnnotationSetsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (variantAnnotationSetsBuilder_ == null) {
          variantAnnotationSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          variantAnnotationSetsBuilder_.clear();
        }
        nextPageToken_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_SearchVariantAnnotationSetsResponse_descriptor;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse build() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse buildPartial() {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse result = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (variantAnnotationSetsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            variantAnnotationSets_ = java.util.Collections.unmodifiableList(variantAnnotationSets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.variantAnnotationSets_ = variantAnnotationSets_;
        } else {
          result.variantAnnotationSets_ = variantAnnotationSetsBuilder_.build();
        }
        result.nextPageToken_ = nextPageToken_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse) {
          return mergeFrom((ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse other) {
        if (other == ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse.getDefaultInstance()) return this;
        if (variantAnnotationSetsBuilder_ == null) {
          if (!other.variantAnnotationSets_.isEmpty()) {
            if (variantAnnotationSets_.isEmpty()) {
              variantAnnotationSets_ = other.variantAnnotationSets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVariantAnnotationSetsIsMutable();
              variantAnnotationSets_.addAll(other.variantAnnotationSets_);
            }
            onChanged();
          }
        } else {
          if (!other.variantAnnotationSets_.isEmpty()) {
            if (variantAnnotationSetsBuilder_.isEmpty()) {
              variantAnnotationSetsBuilder_.dispose();
              variantAnnotationSetsBuilder_ = null;
              variantAnnotationSets_ = other.variantAnnotationSets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              variantAnnotationSetsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariantAnnotationSetsFieldBuilder() : null;
            } else {
              variantAnnotationSetsBuilder_.addAllMessages(other.variantAnnotationSets_);
            }
          }
        }
        if (!other.getNextPageToken().isEmpty()) {
          nextPageToken_ = other.nextPageToken_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<ga4gh.AlleleAnnotations.VariantAnnotationSet> variantAnnotationSets_ =
        java.util.Collections.emptyList();
      private void ensureVariantAnnotationSetsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          variantAnnotationSets_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.VariantAnnotationSet>(variantAnnotationSets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.VariantAnnotationSet, ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder, ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder> variantAnnotationSetsBuilder_;

      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.VariantAnnotationSet> getVariantAnnotationSetsList() {
        if (variantAnnotationSetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variantAnnotationSets_);
        } else {
          return variantAnnotationSetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public int getVariantAnnotationSetsCount() {
        if (variantAnnotationSetsBuilder_ == null) {
          return variantAnnotationSets_.size();
        } else {
          return variantAnnotationSetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotationSet getVariantAnnotationSets(int index) {
        if (variantAnnotationSetsBuilder_ == null) {
          return variantAnnotationSets_.get(index);
        } else {
          return variantAnnotationSetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder setVariantAnnotationSets(
          int index, ga4gh.AlleleAnnotations.VariantAnnotationSet value) {
        if (variantAnnotationSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantAnnotationSetsIsMutable();
          variantAnnotationSets_.set(index, value);
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder setVariantAnnotationSets(
          int index, ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder builderForValue) {
        if (variantAnnotationSetsBuilder_ == null) {
          ensureVariantAnnotationSetsIsMutable();
          variantAnnotationSets_.set(index, builderForValue.build());
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder addVariantAnnotationSets(ga4gh.AlleleAnnotations.VariantAnnotationSet value) {
        if (variantAnnotationSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantAnnotationSetsIsMutable();
          variantAnnotationSets_.add(value);
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder addVariantAnnotationSets(
          int index, ga4gh.AlleleAnnotations.VariantAnnotationSet value) {
        if (variantAnnotationSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantAnnotationSetsIsMutable();
          variantAnnotationSets_.add(index, value);
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder addVariantAnnotationSets(
          ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder builderForValue) {
        if (variantAnnotationSetsBuilder_ == null) {
          ensureVariantAnnotationSetsIsMutable();
          variantAnnotationSets_.add(builderForValue.build());
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder addVariantAnnotationSets(
          int index, ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder builderForValue) {
        if (variantAnnotationSetsBuilder_ == null) {
          ensureVariantAnnotationSetsIsMutable();
          variantAnnotationSets_.add(index, builderForValue.build());
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder addAllVariantAnnotationSets(
          java.lang.Iterable<? extends ga4gh.AlleleAnnotations.VariantAnnotationSet> values) {
        if (variantAnnotationSetsBuilder_ == null) {
          ensureVariantAnnotationSetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, variantAnnotationSets_);
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder clearVariantAnnotationSets() {
        if (variantAnnotationSetsBuilder_ == null) {
          variantAnnotationSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public Builder removeVariantAnnotationSets(int index) {
        if (variantAnnotationSetsBuilder_ == null) {
          ensureVariantAnnotationSetsIsMutable();
          variantAnnotationSets_.remove(index);
          onChanged();
        } else {
          variantAnnotationSetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder getVariantAnnotationSetsBuilder(
          int index) {
        return getVariantAnnotationSetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder getVariantAnnotationSetsOrBuilder(
          int index) {
        if (variantAnnotationSetsBuilder_ == null) {
          return variantAnnotationSets_.get(index);  } else {
          return variantAnnotationSetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public java.util.List<? extends ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder> 
           getVariantAnnotationSetsOrBuilderList() {
        if (variantAnnotationSetsBuilder_ != null) {
          return variantAnnotationSetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variantAnnotationSets_);
        }
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder addVariantAnnotationSetsBuilder() {
        return getVariantAnnotationSetsFieldBuilder().addBuilder(
            ga4gh.AlleleAnnotations.VariantAnnotationSet.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder addVariantAnnotationSetsBuilder(
          int index) {
        return getVariantAnnotationSetsFieldBuilder().addBuilder(
            index, ga4gh.AlleleAnnotations.VariantAnnotationSet.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of matching variant annotation sets.
       * </pre>
       *
       * <code>repeated .ga4gh.VariantAnnotationSet variant_annotation_sets = 1;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder> 
           getVariantAnnotationSetsBuilderList() {
        return getVariantAnnotationSetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.VariantAnnotationSet, ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder, ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder> 
          getVariantAnnotationSetsFieldBuilder() {
        if (variantAnnotationSetsBuilder_ == null) {
          variantAnnotationSetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.AlleleAnnotations.VariantAnnotationSet, ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder, ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder>(
                  variantAnnotationSets_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          variantAnnotationSets_ = null;
        }
        return variantAnnotationSetsBuilder_;
      }

      private java.lang.Object nextPageToken_ = "";
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public java.lang.String getNextPageToken() {
        java.lang.Object ref = nextPageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nextPageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNextPageTokenBytes() {
        java.lang.Object ref = nextPageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public Builder setNextPageToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nextPageToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public Builder clearNextPageToken() {
        
        nextPageToken_ = getDefaultInstance().getNextPageToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The continuation token, which is used to page through large result sets.
       * Provide this value in a subsequent request to return the next page of
       * results. This field will be empty if there aren't any additional results.
       * </pre>
       *
       * <code>optional string next_page_token = 2;</code>
       */
      public Builder setNextPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nextPageToken_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.SearchVariantAnnotationSetsResponse)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.SearchVariantAnnotationSetsResponse)
    private static final ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse();
    }

    public static ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SearchVariantAnnotationSetsResponse>
        PARSER = new com.google.protobuf.AbstractParser<SearchVariantAnnotationSetsResponse>() {
      public SearchVariantAnnotationSetsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SearchVariantAnnotationSetsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SearchVariantAnnotationSetsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SearchVariantAnnotationSetsResponse> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotationServiceOuterClass.SearchVariantAnnotationSetsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetVariantAnnotationSetRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.GetVariantAnnotationSetRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the `VariantAnnotationSet` to be retrieved.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    java.lang.String getVariantAnnotationSetId();
    /**
     * <pre>
     * The ID of the `VariantAnnotationSet` to be retrieved.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getVariantAnnotationSetIdBytes();
  }
  /**
   * <pre>
   * This request maps to the URL `GET /variantannotationsets/{id}`.
   * </pre>
   *
   * Protobuf type {@code ga4gh.GetVariantAnnotationSetRequest}
   */
  public  static final class GetVariantAnnotationSetRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.GetVariantAnnotationSetRequest)
      GetVariantAnnotationSetRequestOrBuilder {
    // Use GetVariantAnnotationSetRequest.newBuilder() to construct.
    private GetVariantAnnotationSetRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GetVariantAnnotationSetRequest() {
      variantAnnotationSetId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GetVariantAnnotationSetRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              variantAnnotationSetId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_GetVariantAnnotationSetRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_GetVariantAnnotationSetRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest.class, ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest.Builder.class);
    }

    public static final int VARIANT_ANNOTATION_SET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object variantAnnotationSetId_;
    /**
     * <pre>
     * The ID of the `VariantAnnotationSet` to be retrieved.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    public java.lang.String getVariantAnnotationSetId() {
      java.lang.Object ref = variantAnnotationSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantAnnotationSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the `VariantAnnotationSet` to be retrieved.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVariantAnnotationSetIdBytes() {
      java.lang.Object ref = variantAnnotationSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantAnnotationSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVariantAnnotationSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, variantAnnotationSetId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVariantAnnotationSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, variantAnnotationSetId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This request maps to the URL `GET /variantannotationsets/{id}`.
     * </pre>
     *
     * Protobuf type {@code ga4gh.GetVariantAnnotationSetRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.GetVariantAnnotationSetRequest)
        ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_GetVariantAnnotationSetRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_GetVariantAnnotationSetRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest.class, ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        variantAnnotationSetId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.internal_static_ga4gh_GetVariantAnnotationSetRequest_descriptor;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest build() {
        ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest buildPartial() {
        ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest result = new ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest(this);
        result.variantAnnotationSetId_ = variantAnnotationSetId_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest) {
          return mergeFrom((ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest other) {
        if (other == ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest.getDefaultInstance()) return this;
        if (!other.getVariantAnnotationSetId().isEmpty()) {
          variantAnnotationSetId_ = other.variantAnnotationSetId_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object variantAnnotationSetId_ = "";
      /**
       * <pre>
       * The ID of the `VariantAnnotationSet` to be retrieved.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public java.lang.String getVariantAnnotationSetId() {
        java.lang.Object ref = variantAnnotationSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantAnnotationSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the `VariantAnnotationSet` to be retrieved.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVariantAnnotationSetIdBytes() {
        java.lang.Object ref = variantAnnotationSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantAnnotationSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the `VariantAnnotationSet` to be retrieved.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public Builder setVariantAnnotationSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantAnnotationSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the `VariantAnnotationSet` to be retrieved.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public Builder clearVariantAnnotationSetId() {
        
        variantAnnotationSetId_ = getDefaultInstance().getVariantAnnotationSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the `VariantAnnotationSet` to be retrieved.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 1;</code>
       */
      public Builder setVariantAnnotationSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantAnnotationSetId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.GetVariantAnnotationSetRequest)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.GetVariantAnnotationSetRequest)
    private static final ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest();
    }

    public static ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetVariantAnnotationSetRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetVariantAnnotationSetRequest>() {
      public GetVariantAnnotationSetRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetVariantAnnotationSetRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetVariantAnnotationSetRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetVariantAnnotationSetRequest> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotationServiceOuterClass.GetVariantAnnotationSetRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_SearchVariantAnnotationsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_SearchVariantAnnotationsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_SearchVariantAnnotationsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_SearchVariantAnnotationsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_SearchVariantAnnotationSetsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_SearchVariantAnnotationSetsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_SearchVariantAnnotationSetsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_SearchVariantAnnotationSetsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_GetVariantAnnotationSetRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_GetVariantAnnotationSetRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%ga4gh/allele_annotation_service.proto\022" +
      "\005ga4gh\032\036ga4gh/allele_annotations.proto\032\024" +
      "ga4gh/metadata.proto\"\333\001\n\037SearchVariantAn" +
      "notationsRequest\022!\n\031variant_annotation_s" +
      "et_id\030\001 \001(\t\022\026\n\016reference_name\030\002 \001(\t\022\024\n\014r" +
      "eference_id\030\003 \001(\t\022\r\n\005start\030\004 \001(\003\022\013\n\003end\030" +
      "\005 \001(\003\022$\n\007effects\030\006 \003(\0132\023.ga4gh.OntologyT" +
      "erm\022\021\n\tpage_size\030\007 \001(\005\022\022\n\npage_token\030\010 \001" +
      "(\t\"r\n SearchVariantAnnotationsResponse\0225" +
      "\n\023variant_annotations\030\001 \003(\0132\030.ga4gh.Vari",
      "antAnnotation\022\027\n\017next_page_token\030\002 \001(\t\"c" +
      "\n\"SearchVariantAnnotationSetsRequest\022\026\n\016" +
      "variant_set_id\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022" +
      "\022\n\npage_token\030\003 \001(\t\"|\n#SearchVariantAnno" +
      "tationSetsResponse\022<\n\027variant_annotation" +
      "_sets\030\001 \003(\0132\033.ga4gh.VariantAnnotationSet" +
      "\022\027\n\017next_page_token\030\002 \001(\t\"C\n\036GetVariantA" +
      "nnotationSetRequest\022!\n\031variant_annotatio" +
      "n_set_id\030\001 \001(\t2\333\002\n\027AlleleAnnotationServi" +
      "ce\022k\n\030SearchVariantAnnotations\022&.ga4gh.S",
      "earchVariantAnnotationsRequest\032\'.ga4gh.S" +
      "earchVariantAnnotationsResponse\022t\n\033Searc" +
      "hVariantAnnotationSets\022).ga4gh.SearchVar" +
      "iantAnnotationSetsRequest\032*.ga4gh.Search" +
      "VariantAnnotationSetsResponse\022]\n\027GetVari" +
      "antAnnotationSet\022%.ga4gh.GetVariantAnnot" +
      "ationSetRequest\032\033.ga4gh.VariantAnnotatio" +
      "nSetb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ga4gh.AlleleAnnotations.getDescriptor(),
          ga4gh.Metadata.getDescriptor(),
        }, assigner);
    internal_static_ga4gh_SearchVariantAnnotationsRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ga4gh_SearchVariantAnnotationsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_SearchVariantAnnotationsRequest_descriptor,
        new java.lang.String[] { "VariantAnnotationSetId", "ReferenceName", "ReferenceId", "Start", "End", "Effects", "PageSize", "PageToken", });
    internal_static_ga4gh_SearchVariantAnnotationsResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ga4gh_SearchVariantAnnotationsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_SearchVariantAnnotationsResponse_descriptor,
        new java.lang.String[] { "VariantAnnotations", "NextPageToken", });
    internal_static_ga4gh_SearchVariantAnnotationSetsRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ga4gh_SearchVariantAnnotationSetsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_SearchVariantAnnotationSetsRequest_descriptor,
        new java.lang.String[] { "VariantSetId", "PageSize", "PageToken", });
    internal_static_ga4gh_SearchVariantAnnotationSetsResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ga4gh_SearchVariantAnnotationSetsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_SearchVariantAnnotationSetsResponse_descriptor,
        new java.lang.String[] { "VariantAnnotationSets", "NextPageToken", });
    internal_static_ga4gh_GetVariantAnnotationSetRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ga4gh_GetVariantAnnotationSetRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_GetVariantAnnotationSetRequest_descriptor,
        new java.lang.String[] { "VariantAnnotationSetId", });
    ga4gh.AlleleAnnotations.getDescriptor();
    ga4gh.Metadata.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
