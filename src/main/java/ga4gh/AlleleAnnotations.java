// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ga4gh/allele_annotations.proto

package ga4gh;

public final class AlleleAnnotations {
  private AlleleAnnotations() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AnalysisResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.AnalysisResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the analysis record for this result
     * </pre>
     *
     * <code>optional string analysis_id = 1;</code>
     */
    java.lang.String getAnalysisId();
    /**
     * <pre>
     * The ID of the analysis record for this result
     * </pre>
     *
     * <code>optional string analysis_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getAnalysisIdBytes();

    /**
     * <pre>
     * The text-based result for this analysis
     * </pre>
     *
     * <code>optional string result = 2;</code>
     */
    java.lang.String getResult();
    /**
     * <pre>
     * The text-based result for this analysis
     * </pre>
     *
     * <code>optional string result = 2;</code>
     */
    com.google.protobuf.ByteString
        getResultBytes();

    /**
     * <pre>
     * The numeric score for this analysis
     * </pre>
     *
     * <code>optional int32 score = 3;</code>
     */
    int getScore();
  }
  /**
   * <pre>
   * An AnalysisResult record holds the output of a prediction package such as
   * SIFT on a specific allele.
   * </pre>
   *
   * Protobuf type {@code ga4gh.AnalysisResult}
   */
  public  static final class AnalysisResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.AnalysisResult)
      AnalysisResultOrBuilder {
    // Use AnalysisResult.newBuilder() to construct.
    private AnalysisResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private AnalysisResult() {
      analysisId_ = "";
      result_ = "";
      score_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AnalysisResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              analysisId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              result_ = s;
              break;
            }
            case 24: {

              score_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_AnalysisResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_AnalysisResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotations.AnalysisResult.class, ga4gh.AlleleAnnotations.AnalysisResult.Builder.class);
    }

    public static final int ANALYSIS_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object analysisId_;
    /**
     * <pre>
     * The ID of the analysis record for this result
     * </pre>
     *
     * <code>optional string analysis_id = 1;</code>
     */
    public java.lang.String getAnalysisId() {
      java.lang.Object ref = analysisId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        analysisId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the analysis record for this result
     * </pre>
     *
     * <code>optional string analysis_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAnalysisIdBytes() {
      java.lang.Object ref = analysisId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        analysisId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private volatile java.lang.Object result_;
    /**
     * <pre>
     * The text-based result for this analysis
     * </pre>
     *
     * <code>optional string result = 2;</code>
     */
    public java.lang.String getResult() {
      java.lang.Object ref = result_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        result_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The text-based result for this analysis
     * </pre>
     *
     * <code>optional string result = 2;</code>
     */
    public com.google.protobuf.ByteString
        getResultBytes() {
      java.lang.Object ref = result_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        result_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <pre>
     * The numeric score for this analysis
     * </pre>
     *
     * <code>optional int32 score = 3;</code>
     */
    public int getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAnalysisIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, analysisId_);
      }
      if (!getResultBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, result_);
      }
      if (score_ != 0) {
        output.writeInt32(3, score_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAnalysisIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, analysisId_);
      }
      if (!getResultBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, result_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.AnalysisResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotations.AnalysisResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An AnalysisResult record holds the output of a prediction package such as
     * SIFT on a specific allele.
     * </pre>
     *
     * Protobuf type {@code ga4gh.AnalysisResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.AnalysisResult)
        ga4gh.AlleleAnnotations.AnalysisResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_AnalysisResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_AnalysisResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotations.AnalysisResult.class, ga4gh.AlleleAnnotations.AnalysisResult.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotations.AnalysisResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        analysisId_ = "";

        result_ = "";

        score_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_AnalysisResult_descriptor;
      }

      public ga4gh.AlleleAnnotations.AnalysisResult getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotations.AnalysisResult.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotations.AnalysisResult build() {
        ga4gh.AlleleAnnotations.AnalysisResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotations.AnalysisResult buildPartial() {
        ga4gh.AlleleAnnotations.AnalysisResult result = new ga4gh.AlleleAnnotations.AnalysisResult(this);
        result.analysisId_ = analysisId_;
        result.result_ = result_;
        result.score_ = score_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotations.AnalysisResult) {
          return mergeFrom((ga4gh.AlleleAnnotations.AnalysisResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotations.AnalysisResult other) {
        if (other == ga4gh.AlleleAnnotations.AnalysisResult.getDefaultInstance()) return this;
        if (!other.getAnalysisId().isEmpty()) {
          analysisId_ = other.analysisId_;
          onChanged();
        }
        if (!other.getResult().isEmpty()) {
          result_ = other.result_;
          onChanged();
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotations.AnalysisResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotations.AnalysisResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object analysisId_ = "";
      /**
       * <pre>
       * The ID of the analysis record for this result
       * </pre>
       *
       * <code>optional string analysis_id = 1;</code>
       */
      public java.lang.String getAnalysisId() {
        java.lang.Object ref = analysisId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          analysisId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the analysis record for this result
       * </pre>
       *
       * <code>optional string analysis_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAnalysisIdBytes() {
        java.lang.Object ref = analysisId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          analysisId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the analysis record for this result
       * </pre>
       *
       * <code>optional string analysis_id = 1;</code>
       */
      public Builder setAnalysisId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        analysisId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the analysis record for this result
       * </pre>
       *
       * <code>optional string analysis_id = 1;</code>
       */
      public Builder clearAnalysisId() {
        
        analysisId_ = getDefaultInstance().getAnalysisId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the analysis record for this result
       * </pre>
       *
       * <code>optional string analysis_id = 1;</code>
       */
      public Builder setAnalysisIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        analysisId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object result_ = "";
      /**
       * <pre>
       * The text-based result for this analysis
       * </pre>
       *
       * <code>optional string result = 2;</code>
       */
      public java.lang.String getResult() {
        java.lang.Object ref = result_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          result_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The text-based result for this analysis
       * </pre>
       *
       * <code>optional string result = 2;</code>
       */
      public com.google.protobuf.ByteString
          getResultBytes() {
        java.lang.Object ref = result_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          result_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The text-based result for this analysis
       * </pre>
       *
       * <code>optional string result = 2;</code>
       */
      public Builder setResult(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The text-based result for this analysis
       * </pre>
       *
       * <code>optional string result = 2;</code>
       */
      public Builder clearResult() {
        
        result_ = getDefaultInstance().getResult();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The text-based result for this analysis
       * </pre>
       *
       * <code>optional string result = 2;</code>
       */
      public Builder setResultBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        result_ = value;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       * The numeric score for this analysis
       * </pre>
       *
       * <code>optional int32 score = 3;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       * The numeric score for this analysis
       * </pre>
       *
       * <code>optional int32 score = 3;</code>
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The numeric score for this analysis
       * </pre>
       *
       * <code>optional int32 score = 3;</code>
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.AnalysisResult)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.AnalysisResult)
    private static final ga4gh.AlleleAnnotations.AnalysisResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotations.AnalysisResult();
    }

    public static ga4gh.AlleleAnnotations.AnalysisResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalysisResult>
        PARSER = new com.google.protobuf.AbstractParser<AnalysisResult>() {
      public AnalysisResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnalysisResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalysisResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalysisResult> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotations.AnalysisResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AlleleLocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.AlleleLocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Relative start position of the allele in this coordinate system
     * </pre>
     *
     * <code>optional int32 start = 1;</code>
     */
    int getStart();

    /**
     * <pre>
     * Relative end position of the allele in this coordinate system
     * </pre>
     *
     * <code>optional int32 end = 2;</code>
     */
    int getEnd();

    /**
     * <pre>
     * Reference sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string reference_sequence = 3;</code>
     */
    java.lang.String getReferenceSequence();
    /**
     * <pre>
     * Reference sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string reference_sequence = 3;</code>
     */
    com.google.protobuf.ByteString
        getReferenceSequenceBytes();

    /**
     * <pre>
     * Alternate sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string alternate_sequence = 4;</code>
     */
    java.lang.String getAlternateSequence();
    /**
     * <pre>
     * Alternate sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string alternate_sequence = 4;</code>
     */
    com.google.protobuf.ByteString
        getAlternateSequenceBytes();
  }
  /**
   * <pre>
   * An allele location record holds the location of an allele relative to a non -
   * genomic coordinate system such as a CDS or protein and holds the reference
   * and alternate sequence where appropriate
   * </pre>
   *
   * Protobuf type {@code ga4gh.AlleleLocation}
   */
  public  static final class AlleleLocation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.AlleleLocation)
      AlleleLocationOrBuilder {
    // Use AlleleLocation.newBuilder() to construct.
    private AlleleLocation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private AlleleLocation() {
      start_ = 0;
      end_ = 0;
      referenceSequence_ = "";
      alternateSequence_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AlleleLocation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              start_ = input.readInt32();
              break;
            }
            case 16: {

              end_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceSequence_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              alternateSequence_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_AlleleLocation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_AlleleLocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotations.AlleleLocation.class, ga4gh.AlleleAnnotations.AlleleLocation.Builder.class);
    }

    public static final int START_FIELD_NUMBER = 1;
    private int start_;
    /**
     * <pre>
     * Relative start position of the allele in this coordinate system
     * </pre>
     *
     * <code>optional int32 start = 1;</code>
     */
    public int getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 2;
    private int end_;
    /**
     * <pre>
     * Relative end position of the allele in this coordinate system
     * </pre>
     *
     * <code>optional int32 end = 2;</code>
     */
    public int getEnd() {
      return end_;
    }

    public static final int REFERENCE_SEQUENCE_FIELD_NUMBER = 3;
    private volatile java.lang.Object referenceSequence_;
    /**
     * <pre>
     * Reference sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string reference_sequence = 3;</code>
     */
    public java.lang.String getReferenceSequence() {
      java.lang.Object ref = referenceSequence_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceSequence_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Reference sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string reference_sequence = 3;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceSequenceBytes() {
      java.lang.Object ref = referenceSequence_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceSequence_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALTERNATE_SEQUENCE_FIELD_NUMBER = 4;
    private volatile java.lang.Object alternateSequence_;
    /**
     * <pre>
     * Alternate sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string alternate_sequence = 4;</code>
     */
    public java.lang.String getAlternateSequence() {
      java.lang.Object ref = alternateSequence_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        alternateSequence_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Alternate sequence in feature (this should be the codon at CDS level)
     * </pre>
     *
     * <code>optional string alternate_sequence = 4;</code>
     */
    public com.google.protobuf.ByteString
        getAlternateSequenceBytes() {
      java.lang.Object ref = alternateSequence_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alternateSequence_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (start_ != 0) {
        output.writeInt32(1, start_);
      }
      if (end_ != 0) {
        output.writeInt32(2, end_);
      }
      if (!getReferenceSequenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, referenceSequence_);
      }
      if (!getAlternateSequenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, alternateSequence_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (start_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, start_);
      }
      if (end_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, end_);
      }
      if (!getReferenceSequenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, referenceSequence_);
      }
      if (!getAlternateSequenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, alternateSequence_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.AlleleLocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotations.AlleleLocation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An allele location record holds the location of an allele relative to a non -
     * genomic coordinate system such as a CDS or protein and holds the reference
     * and alternate sequence where appropriate
     * </pre>
     *
     * Protobuf type {@code ga4gh.AlleleLocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.AlleleLocation)
        ga4gh.AlleleAnnotations.AlleleLocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_AlleleLocation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_AlleleLocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotations.AlleleLocation.class, ga4gh.AlleleAnnotations.AlleleLocation.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotations.AlleleLocation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        start_ = 0;

        end_ = 0;

        referenceSequence_ = "";

        alternateSequence_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_AlleleLocation_descriptor;
      }

      public ga4gh.AlleleAnnotations.AlleleLocation getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotations.AlleleLocation build() {
        ga4gh.AlleleAnnotations.AlleleLocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotations.AlleleLocation buildPartial() {
        ga4gh.AlleleAnnotations.AlleleLocation result = new ga4gh.AlleleAnnotations.AlleleLocation(this);
        result.start_ = start_;
        result.end_ = end_;
        result.referenceSequence_ = referenceSequence_;
        result.alternateSequence_ = alternateSequence_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotations.AlleleLocation) {
          return mergeFrom((ga4gh.AlleleAnnotations.AlleleLocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotations.AlleleLocation other) {
        if (other == ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance()) return this;
        if (other.getStart() != 0) {
          setStart(other.getStart());
        }
        if (other.getEnd() != 0) {
          setEnd(other.getEnd());
        }
        if (!other.getReferenceSequence().isEmpty()) {
          referenceSequence_ = other.referenceSequence_;
          onChanged();
        }
        if (!other.getAlternateSequence().isEmpty()) {
          alternateSequence_ = other.alternateSequence_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotations.AlleleLocation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotations.AlleleLocation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int start_ ;
      /**
       * <pre>
       * Relative start position of the allele in this coordinate system
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      public int getStart() {
        return start_;
      }
      /**
       * <pre>
       * Relative start position of the allele in this coordinate system
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      public Builder setStart(int value) {
        
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Relative start position of the allele in this coordinate system
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      public Builder clearStart() {
        
        start_ = 0;
        onChanged();
        return this;
      }

      private int end_ ;
      /**
       * <pre>
       * Relative end position of the allele in this coordinate system
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <pre>
       * Relative end position of the allele in this coordinate system
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      public Builder setEnd(int value) {
        
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Relative end position of the allele in this coordinate system
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      public Builder clearEnd() {
        
        end_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object referenceSequence_ = "";
      /**
       * <pre>
       * Reference sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string reference_sequence = 3;</code>
       */
      public java.lang.String getReferenceSequence() {
        java.lang.Object ref = referenceSequence_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceSequence_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Reference sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string reference_sequence = 3;</code>
       */
      public com.google.protobuf.ByteString
          getReferenceSequenceBytes() {
        java.lang.Object ref = referenceSequence_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceSequence_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Reference sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string reference_sequence = 3;</code>
       */
      public Builder setReferenceSequence(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceSequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reference sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string reference_sequence = 3;</code>
       */
      public Builder clearReferenceSequence() {
        
        referenceSequence_ = getDefaultInstance().getReferenceSequence();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reference sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string reference_sequence = 3;</code>
       */
      public Builder setReferenceSequenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceSequence_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object alternateSequence_ = "";
      /**
       * <pre>
       * Alternate sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string alternate_sequence = 4;</code>
       */
      public java.lang.String getAlternateSequence() {
        java.lang.Object ref = alternateSequence_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          alternateSequence_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Alternate sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string alternate_sequence = 4;</code>
       */
      public com.google.protobuf.ByteString
          getAlternateSequenceBytes() {
        java.lang.Object ref = alternateSequence_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alternateSequence_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Alternate sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string alternate_sequence = 4;</code>
       */
      public Builder setAlternateSequence(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        alternateSequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alternate sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string alternate_sequence = 4;</code>
       */
      public Builder clearAlternateSequence() {
        
        alternateSequence_ = getDefaultInstance().getAlternateSequence();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alternate sequence in feature (this should be the codon at CDS level)
       * </pre>
       *
       * <code>optional string alternate_sequence = 4;</code>
       */
      public Builder setAlternateSequenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        alternateSequence_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.AlleleLocation)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.AlleleLocation)
    private static final ga4gh.AlleleAnnotations.AlleleLocation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotations.AlleleLocation();
    }

    public static ga4gh.AlleleAnnotations.AlleleLocation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AlleleLocation>
        PARSER = new com.google.protobuf.AbstractParser<AlleleLocation>() {
      public AlleleLocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AlleleLocation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AlleleLocation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AlleleLocation> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotations.AlleleLocation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VariantAnnotationSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.VariantAnnotationSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the variant annotation set record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * The ID of the variant annotation set record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The ID of the variant set to which this annotation set belongs
     * </pre>
     *
     * <code>optional string variantSet_id = 2;</code>
     */
    java.lang.String getVariantSetId();
    /**
     * <pre>
     * The ID of the variant set to which this annotation set belongs
     * </pre>
     *
     * <code>optional string variantSet_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getVariantSetIdBytes();

    /**
     * <pre>
     * The variant annotation set name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The variant annotation set name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *  Analysis details. It is essential to supply versions for all software and
     * reference data used.
     * </pre>
     *
     * <code>optional .ga4gh.Analysis analysis = 4;</code>
     */
    boolean hasAnalysis();
    /**
     * <pre>
     *  Analysis details. It is essential to supply versions for all software and
     * reference data used.
     * </pre>
     *
     * <code>optional .ga4gh.Analysis analysis = 4;</code>
     */
    ga4gh.Metadata.Analysis getAnalysis();
    /**
     * <pre>
     *  Analysis details. It is essential to supply versions for all software and
     * reference data used.
     * </pre>
     *
     * <code>optional .ga4gh.Analysis analysis = 4;</code>
     */
    ga4gh.Metadata.AnalysisOrBuilder getAnalysisOrBuilder();
  }
  /**
   * Protobuf type {@code ga4gh.VariantAnnotationSet}
   */
  public  static final class VariantAnnotationSet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.VariantAnnotationSet)
      VariantAnnotationSetOrBuilder {
    // Use VariantAnnotationSet.newBuilder() to construct.
    private VariantAnnotationSet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VariantAnnotationSet() {
      id_ = "";
      variantSetId_ = "";
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VariantAnnotationSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              variantSetId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              ga4gh.Metadata.Analysis.Builder subBuilder = null;
              if (analysis_ != null) {
                subBuilder = analysis_.toBuilder();
              }
              analysis_ = input.readMessage(ga4gh.Metadata.Analysis.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(analysis_);
                analysis_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotationSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotationSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotations.VariantAnnotationSet.class, ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The ID of the variant annotation set record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the variant annotation set record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANTSET_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object variantSetId_;
    /**
     * <pre>
     * The ID of the variant set to which this annotation set belongs
     * </pre>
     *
     * <code>optional string variantSet_id = 2;</code>
     */
    public java.lang.String getVariantSetId() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the variant set to which this annotation set belongs
     * </pre>
     *
     * <code>optional string variantSet_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVariantSetIdBytes() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The variant annotation set name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The variant annotation set name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANALYSIS_FIELD_NUMBER = 4;
    private ga4gh.Metadata.Analysis analysis_;
    /**
     * <pre>
     *  Analysis details. It is essential to supply versions for all software and
     * reference data used.
     * </pre>
     *
     * <code>optional .ga4gh.Analysis analysis = 4;</code>
     */
    public boolean hasAnalysis() {
      return analysis_ != null;
    }
    /**
     * <pre>
     *  Analysis details. It is essential to supply versions for all software and
     * reference data used.
     * </pre>
     *
     * <code>optional .ga4gh.Analysis analysis = 4;</code>
     */
    public ga4gh.Metadata.Analysis getAnalysis() {
      return analysis_ == null ? ga4gh.Metadata.Analysis.getDefaultInstance() : analysis_;
    }
    /**
     * <pre>
     *  Analysis details. It is essential to supply versions for all software and
     * reference data used.
     * </pre>
     *
     * <code>optional .ga4gh.Analysis analysis = 4;</code>
     */
    public ga4gh.Metadata.AnalysisOrBuilder getAnalysisOrBuilder() {
      return getAnalysis();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!getVariantSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, variantSetId_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, name_);
      }
      if (analysis_ != null) {
        output.writeMessage(4, getAnalysis());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!getVariantSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, variantSetId_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, name_);
      }
      if (analysis_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAnalysis());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotationSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotations.VariantAnnotationSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ga4gh.VariantAnnotationSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.VariantAnnotationSet)
        ga4gh.AlleleAnnotations.VariantAnnotationSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotationSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotationSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotations.VariantAnnotationSet.class, ga4gh.AlleleAnnotations.VariantAnnotationSet.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotations.VariantAnnotationSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        variantSetId_ = "";

        name_ = "";

        if (analysisBuilder_ == null) {
          analysis_ = null;
        } else {
          analysis_ = null;
          analysisBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotationSet_descriptor;
      }

      public ga4gh.AlleleAnnotations.VariantAnnotationSet getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotations.VariantAnnotationSet.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotations.VariantAnnotationSet build() {
        ga4gh.AlleleAnnotations.VariantAnnotationSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotations.VariantAnnotationSet buildPartial() {
        ga4gh.AlleleAnnotations.VariantAnnotationSet result = new ga4gh.AlleleAnnotations.VariantAnnotationSet(this);
        result.id_ = id_;
        result.variantSetId_ = variantSetId_;
        result.name_ = name_;
        if (analysisBuilder_ == null) {
          result.analysis_ = analysis_;
        } else {
          result.analysis_ = analysisBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotations.VariantAnnotationSet) {
          return mergeFrom((ga4gh.AlleleAnnotations.VariantAnnotationSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotations.VariantAnnotationSet other) {
        if (other == ga4gh.AlleleAnnotations.VariantAnnotationSet.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getVariantSetId().isEmpty()) {
          variantSetId_ = other.variantSetId_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasAnalysis()) {
          mergeAnalysis(other.getAnalysis());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotations.VariantAnnotationSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotations.VariantAnnotationSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The ID of the variant annotation set record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the variant annotation set record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the variant annotation set record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the variant annotation set record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the variant annotation set record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object variantSetId_ = "";
      /**
       * <pre>
       * The ID of the variant set to which this annotation set belongs
       * </pre>
       *
       * <code>optional string variantSet_id = 2;</code>
       */
      public java.lang.String getVariantSetId() {
        java.lang.Object ref = variantSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the variant set to which this annotation set belongs
       * </pre>
       *
       * <code>optional string variantSet_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVariantSetIdBytes() {
        java.lang.Object ref = variantSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the variant set to which this annotation set belongs
       * </pre>
       *
       * <code>optional string variantSet_id = 2;</code>
       */
      public Builder setVariantSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the variant set to which this annotation set belongs
       * </pre>
       *
       * <code>optional string variantSet_id = 2;</code>
       */
      public Builder clearVariantSetId() {
        
        variantSetId_ = getDefaultInstance().getVariantSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the variant set to which this annotation set belongs
       * </pre>
       *
       * <code>optional string variantSet_id = 2;</code>
       */
      public Builder setVariantSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantSetId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The variant annotation set name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The variant annotation set name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The variant annotation set name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant annotation set name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant annotation set name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private ga4gh.Metadata.Analysis analysis_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.Metadata.Analysis, ga4gh.Metadata.Analysis.Builder, ga4gh.Metadata.AnalysisOrBuilder> analysisBuilder_;
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public boolean hasAnalysis() {
        return analysisBuilder_ != null || analysis_ != null;
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public ga4gh.Metadata.Analysis getAnalysis() {
        if (analysisBuilder_ == null) {
          return analysis_ == null ? ga4gh.Metadata.Analysis.getDefaultInstance() : analysis_;
        } else {
          return analysisBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public Builder setAnalysis(ga4gh.Metadata.Analysis value) {
        if (analysisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          analysis_ = value;
          onChanged();
        } else {
          analysisBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public Builder setAnalysis(
          ga4gh.Metadata.Analysis.Builder builderForValue) {
        if (analysisBuilder_ == null) {
          analysis_ = builderForValue.build();
          onChanged();
        } else {
          analysisBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public Builder mergeAnalysis(ga4gh.Metadata.Analysis value) {
        if (analysisBuilder_ == null) {
          if (analysis_ != null) {
            analysis_ =
              ga4gh.Metadata.Analysis.newBuilder(analysis_).mergeFrom(value).buildPartial();
          } else {
            analysis_ = value;
          }
          onChanged();
        } else {
          analysisBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public Builder clearAnalysis() {
        if (analysisBuilder_ == null) {
          analysis_ = null;
          onChanged();
        } else {
          analysis_ = null;
          analysisBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public ga4gh.Metadata.Analysis.Builder getAnalysisBuilder() {
        
        onChanged();
        return getAnalysisFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      public ga4gh.Metadata.AnalysisOrBuilder getAnalysisOrBuilder() {
        if (analysisBuilder_ != null) {
          return analysisBuilder_.getMessageOrBuilder();
        } else {
          return analysis_ == null ?
              ga4gh.Metadata.Analysis.getDefaultInstance() : analysis_;
        }
      }
      /**
       * <pre>
       *  Analysis details. It is essential to supply versions for all software and
       * reference data used.
       * </pre>
       *
       * <code>optional .ga4gh.Analysis analysis = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.Metadata.Analysis, ga4gh.Metadata.Analysis.Builder, ga4gh.Metadata.AnalysisOrBuilder> 
          getAnalysisFieldBuilder() {
        if (analysisBuilder_ == null) {
          analysisBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ga4gh.Metadata.Analysis, ga4gh.Metadata.Analysis.Builder, ga4gh.Metadata.AnalysisOrBuilder>(
                  getAnalysis(),
                  getParentForChildren(),
                  isClean());
          analysis_ = null;
        }
        return analysisBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.VariantAnnotationSet)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.VariantAnnotationSet)
    private static final ga4gh.AlleleAnnotations.VariantAnnotationSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotations.VariantAnnotationSet();
    }

    public static ga4gh.AlleleAnnotations.VariantAnnotationSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VariantAnnotationSet>
        PARSER = new com.google.protobuf.AbstractParser<VariantAnnotationSet>() {
      public VariantAnnotationSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VariantAnnotationSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VariantAnnotationSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VariantAnnotationSet> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotations.VariantAnnotationSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HGVSAnnotationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.HGVSAnnotation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string genomic = 1;</code>
     */
    java.lang.String getGenomic();
    /**
     * <code>optional string genomic = 1;</code>
     */
    com.google.protobuf.ByteString
        getGenomicBytes();

    /**
     * <code>optional string transcript = 2;</code>
     */
    java.lang.String getTranscript();
    /**
     * <code>optional string transcript = 2;</code>
     */
    com.google.protobuf.ByteString
        getTranscriptBytes();

    /**
     * <code>optional string protein = 3;</code>
     */
    java.lang.String getProtein();
    /**
     * <code>optional string protein = 3;</code>
     */
    com.google.protobuf.ByteString
        getProteinBytes();
  }
  /**
   * <pre>
   * A HGVSAnnotation record holds Human Genome Variation Society descriptions of
   * the sequence change with respect to genomic, transcript and protein
   * sequences. See: http:// www.hgvs.org/mutnomen/recs.html.
   * Descriptions should be provided at genomic level
   *  - Descriptions at transcript level should be provided when the allele
   *    lies within a transcript
   *  - Descriptions at protein level should be provided when the allele
   *    lies within the translated sequence or stop codon.
   * </pre>
   *
   * Protobuf type {@code ga4gh.HGVSAnnotation}
   */
  public  static final class HGVSAnnotation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.HGVSAnnotation)
      HGVSAnnotationOrBuilder {
    // Use HGVSAnnotation.newBuilder() to construct.
    private HGVSAnnotation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private HGVSAnnotation() {
      genomic_ = "";
      transcript_ = "";
      protein_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HGVSAnnotation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              genomic_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              transcript_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              protein_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_HGVSAnnotation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_HGVSAnnotation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotations.HGVSAnnotation.class, ga4gh.AlleleAnnotations.HGVSAnnotation.Builder.class);
    }

    public static final int GENOMIC_FIELD_NUMBER = 1;
    private volatile java.lang.Object genomic_;
    /**
     * <code>optional string genomic = 1;</code>
     */
    public java.lang.String getGenomic() {
      java.lang.Object ref = genomic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        genomic_ = s;
        return s;
      }
    }
    /**
     * <code>optional string genomic = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGenomicBytes() {
      java.lang.Object ref = genomic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        genomic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRANSCRIPT_FIELD_NUMBER = 2;
    private volatile java.lang.Object transcript_;
    /**
     * <code>optional string transcript = 2;</code>
     */
    public java.lang.String getTranscript() {
      java.lang.Object ref = transcript_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transcript_ = s;
        return s;
      }
    }
    /**
     * <code>optional string transcript = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTranscriptBytes() {
      java.lang.Object ref = transcript_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transcript_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROTEIN_FIELD_NUMBER = 3;
    private volatile java.lang.Object protein_;
    /**
     * <code>optional string protein = 3;</code>
     */
    public java.lang.String getProtein() {
      java.lang.Object ref = protein_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        protein_ = s;
        return s;
      }
    }
    /**
     * <code>optional string protein = 3;</code>
     */
    public com.google.protobuf.ByteString
        getProteinBytes() {
      java.lang.Object ref = protein_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protein_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getGenomicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, genomic_);
      }
      if (!getTranscriptBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, transcript_);
      }
      if (!getProteinBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, protein_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getGenomicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, genomic_);
      }
      if (!getTranscriptBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, transcript_);
      }
      if (!getProteinBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, protein_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.HGVSAnnotation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotations.HGVSAnnotation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A HGVSAnnotation record holds Human Genome Variation Society descriptions of
     * the sequence change with respect to genomic, transcript and protein
     * sequences. See: http:// www.hgvs.org/mutnomen/recs.html.
     * Descriptions should be provided at genomic level
     *  - Descriptions at transcript level should be provided when the allele
     *    lies within a transcript
     *  - Descriptions at protein level should be provided when the allele
     *    lies within the translated sequence or stop codon.
     * </pre>
     *
     * Protobuf type {@code ga4gh.HGVSAnnotation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.HGVSAnnotation)
        ga4gh.AlleleAnnotations.HGVSAnnotationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_HGVSAnnotation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_HGVSAnnotation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotations.HGVSAnnotation.class, ga4gh.AlleleAnnotations.HGVSAnnotation.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotations.HGVSAnnotation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        genomic_ = "";

        transcript_ = "";

        protein_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_HGVSAnnotation_descriptor;
      }

      public ga4gh.AlleleAnnotations.HGVSAnnotation getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotations.HGVSAnnotation.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotations.HGVSAnnotation build() {
        ga4gh.AlleleAnnotations.HGVSAnnotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotations.HGVSAnnotation buildPartial() {
        ga4gh.AlleleAnnotations.HGVSAnnotation result = new ga4gh.AlleleAnnotations.HGVSAnnotation(this);
        result.genomic_ = genomic_;
        result.transcript_ = transcript_;
        result.protein_ = protein_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotations.HGVSAnnotation) {
          return mergeFrom((ga4gh.AlleleAnnotations.HGVSAnnotation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotations.HGVSAnnotation other) {
        if (other == ga4gh.AlleleAnnotations.HGVSAnnotation.getDefaultInstance()) return this;
        if (!other.getGenomic().isEmpty()) {
          genomic_ = other.genomic_;
          onChanged();
        }
        if (!other.getTranscript().isEmpty()) {
          transcript_ = other.transcript_;
          onChanged();
        }
        if (!other.getProtein().isEmpty()) {
          protein_ = other.protein_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotations.HGVSAnnotation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotations.HGVSAnnotation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object genomic_ = "";
      /**
       * <code>optional string genomic = 1;</code>
       */
      public java.lang.String getGenomic() {
        java.lang.Object ref = genomic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          genomic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string genomic = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGenomicBytes() {
        java.lang.Object ref = genomic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          genomic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string genomic = 1;</code>
       */
      public Builder setGenomic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        genomic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string genomic = 1;</code>
       */
      public Builder clearGenomic() {
        
        genomic_ = getDefaultInstance().getGenomic();
        onChanged();
        return this;
      }
      /**
       * <code>optional string genomic = 1;</code>
       */
      public Builder setGenomicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        genomic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object transcript_ = "";
      /**
       * <code>optional string transcript = 2;</code>
       */
      public java.lang.String getTranscript() {
        java.lang.Object ref = transcript_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transcript_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string transcript = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTranscriptBytes() {
        java.lang.Object ref = transcript_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transcript_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string transcript = 2;</code>
       */
      public Builder setTranscript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        transcript_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string transcript = 2;</code>
       */
      public Builder clearTranscript() {
        
        transcript_ = getDefaultInstance().getTranscript();
        onChanged();
        return this;
      }
      /**
       * <code>optional string transcript = 2;</code>
       */
      public Builder setTranscriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        transcript_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object protein_ = "";
      /**
       * <code>optional string protein = 3;</code>
       */
      public java.lang.String getProtein() {
        java.lang.Object ref = protein_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          protein_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string protein = 3;</code>
       */
      public com.google.protobuf.ByteString
          getProteinBytes() {
        java.lang.Object ref = protein_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          protein_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string protein = 3;</code>
       */
      public Builder setProtein(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        protein_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string protein = 3;</code>
       */
      public Builder clearProtein() {
        
        protein_ = getDefaultInstance().getProtein();
        onChanged();
        return this;
      }
      /**
       * <code>optional string protein = 3;</code>
       */
      public Builder setProteinBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        protein_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.HGVSAnnotation)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.HGVSAnnotation)
    private static final ga4gh.AlleleAnnotations.HGVSAnnotation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotations.HGVSAnnotation();
    }

    public static ga4gh.AlleleAnnotations.HGVSAnnotation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HGVSAnnotation>
        PARSER = new com.google.protobuf.AbstractParser<HGVSAnnotation>() {
      public HGVSAnnotation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HGVSAnnotation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HGVSAnnotation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HGVSAnnotation> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotations.HGVSAnnotation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TranscriptEffectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.TranscriptEffect)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *  The ID of the transcript effect record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *  The ID of the transcript effect record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The id of the transcript feature the annotation is relative to.
     * </pre>
     *
     * <code>optional string feature_id = 2;</code>
     */
    java.lang.String getFeatureId();
    /**
     * <pre>
     * The id of the transcript feature the annotation is relative to.
     * </pre>
     *
     * <code>optional string feature_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getFeatureIdBytes();

    /**
     * <pre>
     * Alternate allele - a variant may have more than one alternate allele,
     * each of which will have distinct annotation.
     * </pre>
     *
     * <code>optional string alternate_bases = 3;</code>
     */
    java.lang.String getAlternateBases();
    /**
     * <pre>
     * Alternate allele - a variant may have more than one alternate allele,
     * each of which will have distinct annotation.
     * </pre>
     *
     * <code>optional string alternate_bases = 3;</code>
     */
    com.google.protobuf.ByteString
        getAlternateBasesBytes();

    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    java.util.List<ga4gh.Metadata.OntologyTerm> 
        getEffectsList();
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    ga4gh.Metadata.OntologyTerm getEffects(int index);
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    int getEffectsCount();
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    java.util.List<? extends ga4gh.Metadata.OntologyTermOrBuilder> 
        getEffectsOrBuilderList();
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    ga4gh.Metadata.OntologyTermOrBuilder getEffectsOrBuilder(
        int index);

    /**
     * <pre>
     * Human Genome Variation Society variant descriptions.
     * </pre>
     *
     * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
     */
    boolean hasHgvsAnnotation();
    /**
     * <pre>
     * Human Genome Variation Society variant descriptions.
     * </pre>
     *
     * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
     */
    ga4gh.AlleleAnnotations.HGVSAnnotation getHgvsAnnotation();
    /**
     * <pre>
     * Human Genome Variation Society variant descriptions.
     * </pre>
     *
     * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
     */
    ga4gh.AlleleAnnotations.HGVSAnnotationOrBuilder getHgvsAnnotationOrBuilder();

    /**
     * <pre>
     * Change relative to cDNA.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
     */
    boolean hasCdnaLocation();
    /**
     * <pre>
     * Change relative to cDNA.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
     */
    ga4gh.AlleleAnnotations.AlleleLocation getCdnaLocation();
    /**
     * <pre>
     * Change relative to cDNA.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
     */
    ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getCdnaLocationOrBuilder();

    /**
     * <pre>
     * Change relative to coding sequence.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
     */
    boolean hasCdsLocation();
    /**
     * <pre>
     * Change relative to coding sequence.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
     */
    ga4gh.AlleleAnnotations.AlleleLocation getCdsLocation();
    /**
     * <pre>
     * Change relative to coding sequence.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
     */
    ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getCdsLocationOrBuilder();

    /**
     * <pre>
     * Change relative to protein.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
     */
    boolean hasProteinLocation();
    /**
     * <pre>
     * Change relative to protein.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
     */
    ga4gh.AlleleAnnotations.AlleleLocation getProteinLocation();
    /**
     * <pre>
     * Change relative to protein.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
     */
    ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getProteinLocationOrBuilder();

    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    java.util.List<ga4gh.AlleleAnnotations.AnalysisResult> 
        getAnalysisResultsList();
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    ga4gh.AlleleAnnotations.AnalysisResult getAnalysisResults(int index);
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    int getAnalysisResultsCount();
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    java.util.List<? extends ga4gh.AlleleAnnotations.AnalysisResultOrBuilder> 
        getAnalysisResultsOrBuilderList();
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    ga4gh.AlleleAnnotations.AnalysisResultOrBuilder getAnalysisResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ga4gh.TranscriptEffect}
   */
  public  static final class TranscriptEffect extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.TranscriptEffect)
      TranscriptEffectOrBuilder {
    // Use TranscriptEffect.newBuilder() to construct.
    private TranscriptEffect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TranscriptEffect() {
      id_ = "";
      featureId_ = "";
      alternateBases_ = "";
      effects_ = java.util.Collections.emptyList();
      analysisResults_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TranscriptEffect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              featureId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              alternateBases_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                effects_ = new java.util.ArrayList<ga4gh.Metadata.OntologyTerm>();
                mutable_bitField0_ |= 0x00000008;
              }
              effects_.add(input.readMessage(ga4gh.Metadata.OntologyTerm.parser(), extensionRegistry));
              break;
            }
            case 42: {
              ga4gh.AlleleAnnotations.HGVSAnnotation.Builder subBuilder = null;
              if (hgvsAnnotation_ != null) {
                subBuilder = hgvsAnnotation_.toBuilder();
              }
              hgvsAnnotation_ = input.readMessage(ga4gh.AlleleAnnotations.HGVSAnnotation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hgvsAnnotation_);
                hgvsAnnotation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              ga4gh.AlleleAnnotations.AlleleLocation.Builder subBuilder = null;
              if (cdnaLocation_ != null) {
                subBuilder = cdnaLocation_.toBuilder();
              }
              cdnaLocation_ = input.readMessage(ga4gh.AlleleAnnotations.AlleleLocation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cdnaLocation_);
                cdnaLocation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              ga4gh.AlleleAnnotations.AlleleLocation.Builder subBuilder = null;
              if (cdsLocation_ != null) {
                subBuilder = cdsLocation_.toBuilder();
              }
              cdsLocation_ = input.readMessage(ga4gh.AlleleAnnotations.AlleleLocation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cdsLocation_);
                cdsLocation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              ga4gh.AlleleAnnotations.AlleleLocation.Builder subBuilder = null;
              if (proteinLocation_ != null) {
                subBuilder = proteinLocation_.toBuilder();
              }
              proteinLocation_ = input.readMessage(ga4gh.AlleleAnnotations.AlleleLocation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(proteinLocation_);
                proteinLocation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                analysisResults_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.AnalysisResult>();
                mutable_bitField0_ |= 0x00000100;
              }
              analysisResults_.add(input.readMessage(ga4gh.AlleleAnnotations.AnalysisResult.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          effects_ = java.util.Collections.unmodifiableList(effects_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          analysisResults_ = java.util.Collections.unmodifiableList(analysisResults_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_TranscriptEffect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_TranscriptEffect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotations.TranscriptEffect.class, ga4gh.AlleleAnnotations.TranscriptEffect.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *  The ID of the transcript effect record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *  The ID of the transcript effect record
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FEATURE_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object featureId_;
    /**
     * <pre>
     * The id of the transcript feature the annotation is relative to.
     * </pre>
     *
     * <code>optional string feature_id = 2;</code>
     */
    public java.lang.String getFeatureId() {
      java.lang.Object ref = featureId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        featureId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The id of the transcript feature the annotation is relative to.
     * </pre>
     *
     * <code>optional string feature_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFeatureIdBytes() {
      java.lang.Object ref = featureId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        featureId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALTERNATE_BASES_FIELD_NUMBER = 3;
    private volatile java.lang.Object alternateBases_;
    /**
     * <pre>
     * Alternate allele - a variant may have more than one alternate allele,
     * each of which will have distinct annotation.
     * </pre>
     *
     * <code>optional string alternate_bases = 3;</code>
     */
    public java.lang.String getAlternateBases() {
      java.lang.Object ref = alternateBases_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        alternateBases_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Alternate allele - a variant may have more than one alternate allele,
     * each of which will have distinct annotation.
     * </pre>
     *
     * <code>optional string alternate_bases = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAlternateBasesBytes() {
      java.lang.Object ref = alternateBases_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alternateBases_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EFFECTS_FIELD_NUMBER = 4;
    private java.util.List<ga4gh.Metadata.OntologyTerm> effects_;
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    public java.util.List<ga4gh.Metadata.OntologyTerm> getEffectsList() {
      return effects_;
    }
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    public java.util.List<? extends ga4gh.Metadata.OntologyTermOrBuilder> 
        getEffectsOrBuilderList() {
      return effects_;
    }
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    public int getEffectsCount() {
      return effects_.size();
    }
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    public ga4gh.Metadata.OntologyTerm getEffects(int index) {
      return effects_.get(index);
    }
    /**
     * <pre>
     * Effect of variant on this feature.
     * </pre>
     *
     * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
     */
    public ga4gh.Metadata.OntologyTermOrBuilder getEffectsOrBuilder(
        int index) {
      return effects_.get(index);
    }

    public static final int HGVS_ANNOTATION_FIELD_NUMBER = 5;
    private ga4gh.AlleleAnnotations.HGVSAnnotation hgvsAnnotation_;
    /**
     * <pre>
     * Human Genome Variation Society variant descriptions.
     * </pre>
     *
     * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
     */
    public boolean hasHgvsAnnotation() {
      return hgvsAnnotation_ != null;
    }
    /**
     * <pre>
     * Human Genome Variation Society variant descriptions.
     * </pre>
     *
     * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
     */
    public ga4gh.AlleleAnnotations.HGVSAnnotation getHgvsAnnotation() {
      return hgvsAnnotation_ == null ? ga4gh.AlleleAnnotations.HGVSAnnotation.getDefaultInstance() : hgvsAnnotation_;
    }
    /**
     * <pre>
     * Human Genome Variation Society variant descriptions.
     * </pre>
     *
     * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
     */
    public ga4gh.AlleleAnnotations.HGVSAnnotationOrBuilder getHgvsAnnotationOrBuilder() {
      return getHgvsAnnotation();
    }

    public static final int CDNA_LOCATION_FIELD_NUMBER = 6;
    private ga4gh.AlleleAnnotations.AlleleLocation cdnaLocation_;
    /**
     * <pre>
     * Change relative to cDNA.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
     */
    public boolean hasCdnaLocation() {
      return cdnaLocation_ != null;
    }
    /**
     * <pre>
     * Change relative to cDNA.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
     */
    public ga4gh.AlleleAnnotations.AlleleLocation getCdnaLocation() {
      return cdnaLocation_ == null ? ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : cdnaLocation_;
    }
    /**
     * <pre>
     * Change relative to cDNA.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
     */
    public ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getCdnaLocationOrBuilder() {
      return getCdnaLocation();
    }

    public static final int CDS_LOCATION_FIELD_NUMBER = 7;
    private ga4gh.AlleleAnnotations.AlleleLocation cdsLocation_;
    /**
     * <pre>
     * Change relative to coding sequence.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
     */
    public boolean hasCdsLocation() {
      return cdsLocation_ != null;
    }
    /**
     * <pre>
     * Change relative to coding sequence.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
     */
    public ga4gh.AlleleAnnotations.AlleleLocation getCdsLocation() {
      return cdsLocation_ == null ? ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : cdsLocation_;
    }
    /**
     * <pre>
     * Change relative to coding sequence.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
     */
    public ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getCdsLocationOrBuilder() {
      return getCdsLocation();
    }

    public static final int PROTEIN_LOCATION_FIELD_NUMBER = 8;
    private ga4gh.AlleleAnnotations.AlleleLocation proteinLocation_;
    /**
     * <pre>
     * Change relative to protein.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
     */
    public boolean hasProteinLocation() {
      return proteinLocation_ != null;
    }
    /**
     * <pre>
     * Change relative to protein.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
     */
    public ga4gh.AlleleAnnotations.AlleleLocation getProteinLocation() {
      return proteinLocation_ == null ? ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : proteinLocation_;
    }
    /**
     * <pre>
     * Change relative to protein.
     * </pre>
     *
     * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
     */
    public ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getProteinLocationOrBuilder() {
      return getProteinLocation();
    }

    public static final int ANALYSIS_RESULTS_FIELD_NUMBER = 9;
    private java.util.List<ga4gh.AlleleAnnotations.AnalysisResult> analysisResults_;
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    public java.util.List<ga4gh.AlleleAnnotations.AnalysisResult> getAnalysisResultsList() {
      return analysisResults_;
    }
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    public java.util.List<? extends ga4gh.AlleleAnnotations.AnalysisResultOrBuilder> 
        getAnalysisResultsOrBuilderList() {
      return analysisResults_;
    }
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    public int getAnalysisResultsCount() {
      return analysisResults_.size();
    }
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    public ga4gh.AlleleAnnotations.AnalysisResult getAnalysisResults(int index) {
      return analysisResults_.get(index);
    }
    /**
     * <pre>
     * Output from prediction packages such as SIFT.
     * </pre>
     *
     * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
     */
    public ga4gh.AlleleAnnotations.AnalysisResultOrBuilder getAnalysisResultsOrBuilder(
        int index) {
      return analysisResults_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!getFeatureIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, featureId_);
      }
      if (!getAlternateBasesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, alternateBases_);
      }
      for (int i = 0; i < effects_.size(); i++) {
        output.writeMessage(4, effects_.get(i));
      }
      if (hgvsAnnotation_ != null) {
        output.writeMessage(5, getHgvsAnnotation());
      }
      if (cdnaLocation_ != null) {
        output.writeMessage(6, getCdnaLocation());
      }
      if (cdsLocation_ != null) {
        output.writeMessage(7, getCdsLocation());
      }
      if (proteinLocation_ != null) {
        output.writeMessage(8, getProteinLocation());
      }
      for (int i = 0; i < analysisResults_.size(); i++) {
        output.writeMessage(9, analysisResults_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!getFeatureIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, featureId_);
      }
      if (!getAlternateBasesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, alternateBases_);
      }
      for (int i = 0; i < effects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, effects_.get(i));
      }
      if (hgvsAnnotation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHgvsAnnotation());
      }
      if (cdnaLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getCdnaLocation());
      }
      if (cdsLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCdsLocation());
      }
      if (proteinLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getProteinLocation());
      }
      for (int i = 0; i < analysisResults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, analysisResults_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.TranscriptEffect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotations.TranscriptEffect prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ga4gh.TranscriptEffect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.TranscriptEffect)
        ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_TranscriptEffect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_TranscriptEffect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotations.TranscriptEffect.class, ga4gh.AlleleAnnotations.TranscriptEffect.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotations.TranscriptEffect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEffectsFieldBuilder();
          getAnalysisResultsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        featureId_ = "";

        alternateBases_ = "";

        if (effectsBuilder_ == null) {
          effects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          effectsBuilder_.clear();
        }
        if (hgvsAnnotationBuilder_ == null) {
          hgvsAnnotation_ = null;
        } else {
          hgvsAnnotation_ = null;
          hgvsAnnotationBuilder_ = null;
        }
        if (cdnaLocationBuilder_ == null) {
          cdnaLocation_ = null;
        } else {
          cdnaLocation_ = null;
          cdnaLocationBuilder_ = null;
        }
        if (cdsLocationBuilder_ == null) {
          cdsLocation_ = null;
        } else {
          cdsLocation_ = null;
          cdsLocationBuilder_ = null;
        }
        if (proteinLocationBuilder_ == null) {
          proteinLocation_ = null;
        } else {
          proteinLocation_ = null;
          proteinLocationBuilder_ = null;
        }
        if (analysisResultsBuilder_ == null) {
          analysisResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          analysisResultsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_TranscriptEffect_descriptor;
      }

      public ga4gh.AlleleAnnotations.TranscriptEffect getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotations.TranscriptEffect.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotations.TranscriptEffect build() {
        ga4gh.AlleleAnnotations.TranscriptEffect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotations.TranscriptEffect buildPartial() {
        ga4gh.AlleleAnnotations.TranscriptEffect result = new ga4gh.AlleleAnnotations.TranscriptEffect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.featureId_ = featureId_;
        result.alternateBases_ = alternateBases_;
        if (effectsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            effects_ = java.util.Collections.unmodifiableList(effects_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.effects_ = effects_;
        } else {
          result.effects_ = effectsBuilder_.build();
        }
        if (hgvsAnnotationBuilder_ == null) {
          result.hgvsAnnotation_ = hgvsAnnotation_;
        } else {
          result.hgvsAnnotation_ = hgvsAnnotationBuilder_.build();
        }
        if (cdnaLocationBuilder_ == null) {
          result.cdnaLocation_ = cdnaLocation_;
        } else {
          result.cdnaLocation_ = cdnaLocationBuilder_.build();
        }
        if (cdsLocationBuilder_ == null) {
          result.cdsLocation_ = cdsLocation_;
        } else {
          result.cdsLocation_ = cdsLocationBuilder_.build();
        }
        if (proteinLocationBuilder_ == null) {
          result.proteinLocation_ = proteinLocation_;
        } else {
          result.proteinLocation_ = proteinLocationBuilder_.build();
        }
        if (analysisResultsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            analysisResults_ = java.util.Collections.unmodifiableList(analysisResults_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.analysisResults_ = analysisResults_;
        } else {
          result.analysisResults_ = analysisResultsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotations.TranscriptEffect) {
          return mergeFrom((ga4gh.AlleleAnnotations.TranscriptEffect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotations.TranscriptEffect other) {
        if (other == ga4gh.AlleleAnnotations.TranscriptEffect.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getFeatureId().isEmpty()) {
          featureId_ = other.featureId_;
          onChanged();
        }
        if (!other.getAlternateBases().isEmpty()) {
          alternateBases_ = other.alternateBases_;
          onChanged();
        }
        if (effectsBuilder_ == null) {
          if (!other.effects_.isEmpty()) {
            if (effects_.isEmpty()) {
              effects_ = other.effects_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureEffectsIsMutable();
              effects_.addAll(other.effects_);
            }
            onChanged();
          }
        } else {
          if (!other.effects_.isEmpty()) {
            if (effectsBuilder_.isEmpty()) {
              effectsBuilder_.dispose();
              effectsBuilder_ = null;
              effects_ = other.effects_;
              bitField0_ = (bitField0_ & ~0x00000008);
              effectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEffectsFieldBuilder() : null;
            } else {
              effectsBuilder_.addAllMessages(other.effects_);
            }
          }
        }
        if (other.hasHgvsAnnotation()) {
          mergeHgvsAnnotation(other.getHgvsAnnotation());
        }
        if (other.hasCdnaLocation()) {
          mergeCdnaLocation(other.getCdnaLocation());
        }
        if (other.hasCdsLocation()) {
          mergeCdsLocation(other.getCdsLocation());
        }
        if (other.hasProteinLocation()) {
          mergeProteinLocation(other.getProteinLocation());
        }
        if (analysisResultsBuilder_ == null) {
          if (!other.analysisResults_.isEmpty()) {
            if (analysisResults_.isEmpty()) {
              analysisResults_ = other.analysisResults_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureAnalysisResultsIsMutable();
              analysisResults_.addAll(other.analysisResults_);
            }
            onChanged();
          }
        } else {
          if (!other.analysisResults_.isEmpty()) {
            if (analysisResultsBuilder_.isEmpty()) {
              analysisResultsBuilder_.dispose();
              analysisResultsBuilder_ = null;
              analysisResults_ = other.analysisResults_;
              bitField0_ = (bitField0_ & ~0x00000100);
              analysisResultsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAnalysisResultsFieldBuilder() : null;
            } else {
              analysisResultsBuilder_.addAllMessages(other.analysisResults_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotations.TranscriptEffect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotations.TranscriptEffect) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *  The ID of the transcript effect record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *  The ID of the transcript effect record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *  The ID of the transcript effect record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  The ID of the transcript effect record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  The ID of the transcript effect record
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object featureId_ = "";
      /**
       * <pre>
       * The id of the transcript feature the annotation is relative to.
       * </pre>
       *
       * <code>optional string feature_id = 2;</code>
       */
      public java.lang.String getFeatureId() {
        java.lang.Object ref = featureId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          featureId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The id of the transcript feature the annotation is relative to.
       * </pre>
       *
       * <code>optional string feature_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFeatureIdBytes() {
        java.lang.Object ref = featureId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          featureId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The id of the transcript feature the annotation is relative to.
       * </pre>
       *
       * <code>optional string feature_id = 2;</code>
       */
      public Builder setFeatureId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        featureId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the transcript feature the annotation is relative to.
       * </pre>
       *
       * <code>optional string feature_id = 2;</code>
       */
      public Builder clearFeatureId() {
        
        featureId_ = getDefaultInstance().getFeatureId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the transcript feature the annotation is relative to.
       * </pre>
       *
       * <code>optional string feature_id = 2;</code>
       */
      public Builder setFeatureIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        featureId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object alternateBases_ = "";
      /**
       * <pre>
       * Alternate allele - a variant may have more than one alternate allele,
       * each of which will have distinct annotation.
       * </pre>
       *
       * <code>optional string alternate_bases = 3;</code>
       */
      public java.lang.String getAlternateBases() {
        java.lang.Object ref = alternateBases_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          alternateBases_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Alternate allele - a variant may have more than one alternate allele,
       * each of which will have distinct annotation.
       * </pre>
       *
       * <code>optional string alternate_bases = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAlternateBasesBytes() {
        java.lang.Object ref = alternateBases_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alternateBases_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Alternate allele - a variant may have more than one alternate allele,
       * each of which will have distinct annotation.
       * </pre>
       *
       * <code>optional string alternate_bases = 3;</code>
       */
      public Builder setAlternateBases(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        alternateBases_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alternate allele - a variant may have more than one alternate allele,
       * each of which will have distinct annotation.
       * </pre>
       *
       * <code>optional string alternate_bases = 3;</code>
       */
      public Builder clearAlternateBases() {
        
        alternateBases_ = getDefaultInstance().getAlternateBases();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alternate allele - a variant may have more than one alternate allele,
       * each of which will have distinct annotation.
       * </pre>
       *
       * <code>optional string alternate_bases = 3;</code>
       */
      public Builder setAlternateBasesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        alternateBases_ = value;
        onChanged();
        return this;
      }

      private java.util.List<ga4gh.Metadata.OntologyTerm> effects_ =
        java.util.Collections.emptyList();
      private void ensureEffectsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          effects_ = new java.util.ArrayList<ga4gh.Metadata.OntologyTerm>(effects_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Metadata.OntologyTerm, ga4gh.Metadata.OntologyTerm.Builder, ga4gh.Metadata.OntologyTermOrBuilder> effectsBuilder_;

      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public java.util.List<ga4gh.Metadata.OntologyTerm> getEffectsList() {
        if (effectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(effects_);
        } else {
          return effectsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public int getEffectsCount() {
        if (effectsBuilder_ == null) {
          return effects_.size();
        } else {
          return effectsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public ga4gh.Metadata.OntologyTerm getEffects(int index) {
        if (effectsBuilder_ == null) {
          return effects_.get(index);
        } else {
          return effectsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder setEffects(
          int index, ga4gh.Metadata.OntologyTerm value) {
        if (effectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectsIsMutable();
          effects_.set(index, value);
          onChanged();
        } else {
          effectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder setEffects(
          int index, ga4gh.Metadata.OntologyTerm.Builder builderForValue) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.set(index, builderForValue.build());
          onChanged();
        } else {
          effectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder addEffects(ga4gh.Metadata.OntologyTerm value) {
        if (effectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectsIsMutable();
          effects_.add(value);
          onChanged();
        } else {
          effectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder addEffects(
          int index, ga4gh.Metadata.OntologyTerm value) {
        if (effectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectsIsMutable();
          effects_.add(index, value);
          onChanged();
        } else {
          effectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder addEffects(
          ga4gh.Metadata.OntologyTerm.Builder builderForValue) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.add(builderForValue.build());
          onChanged();
        } else {
          effectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder addEffects(
          int index, ga4gh.Metadata.OntologyTerm.Builder builderForValue) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.add(index, builderForValue.build());
          onChanged();
        } else {
          effectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder addAllEffects(
          java.lang.Iterable<? extends ga4gh.Metadata.OntologyTerm> values) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, effects_);
          onChanged();
        } else {
          effectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder clearEffects() {
        if (effectsBuilder_ == null) {
          effects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          effectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public Builder removeEffects(int index) {
        if (effectsBuilder_ == null) {
          ensureEffectsIsMutable();
          effects_.remove(index);
          onChanged();
        } else {
          effectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public ga4gh.Metadata.OntologyTerm.Builder getEffectsBuilder(
          int index) {
        return getEffectsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public ga4gh.Metadata.OntologyTermOrBuilder getEffectsOrBuilder(
          int index) {
        if (effectsBuilder_ == null) {
          return effects_.get(index);  } else {
          return effectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public java.util.List<? extends ga4gh.Metadata.OntologyTermOrBuilder> 
           getEffectsOrBuilderList() {
        if (effectsBuilder_ != null) {
          return effectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(effects_);
        }
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public ga4gh.Metadata.OntologyTerm.Builder addEffectsBuilder() {
        return getEffectsFieldBuilder().addBuilder(
            ga4gh.Metadata.OntologyTerm.getDefaultInstance());
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public ga4gh.Metadata.OntologyTerm.Builder addEffectsBuilder(
          int index) {
        return getEffectsFieldBuilder().addBuilder(
            index, ga4gh.Metadata.OntologyTerm.getDefaultInstance());
      }
      /**
       * <pre>
       * Effect of variant on this feature.
       * </pre>
       *
       * <code>repeated .ga4gh.OntologyTerm effects = 4;</code>
       */
      public java.util.List<ga4gh.Metadata.OntologyTerm.Builder> 
           getEffectsBuilderList() {
        return getEffectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Metadata.OntologyTerm, ga4gh.Metadata.OntologyTerm.Builder, ga4gh.Metadata.OntologyTermOrBuilder> 
          getEffectsFieldBuilder() {
        if (effectsBuilder_ == null) {
          effectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.Metadata.OntologyTerm, ga4gh.Metadata.OntologyTerm.Builder, ga4gh.Metadata.OntologyTermOrBuilder>(
                  effects_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          effects_ = null;
        }
        return effectsBuilder_;
      }

      private ga4gh.AlleleAnnotations.HGVSAnnotation hgvsAnnotation_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.HGVSAnnotation, ga4gh.AlleleAnnotations.HGVSAnnotation.Builder, ga4gh.AlleleAnnotations.HGVSAnnotationOrBuilder> hgvsAnnotationBuilder_;
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public boolean hasHgvsAnnotation() {
        return hgvsAnnotationBuilder_ != null || hgvsAnnotation_ != null;
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public ga4gh.AlleleAnnotations.HGVSAnnotation getHgvsAnnotation() {
        if (hgvsAnnotationBuilder_ == null) {
          return hgvsAnnotation_ == null ? ga4gh.AlleleAnnotations.HGVSAnnotation.getDefaultInstance() : hgvsAnnotation_;
        } else {
          return hgvsAnnotationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public Builder setHgvsAnnotation(ga4gh.AlleleAnnotations.HGVSAnnotation value) {
        if (hgvsAnnotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hgvsAnnotation_ = value;
          onChanged();
        } else {
          hgvsAnnotationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public Builder setHgvsAnnotation(
          ga4gh.AlleleAnnotations.HGVSAnnotation.Builder builderForValue) {
        if (hgvsAnnotationBuilder_ == null) {
          hgvsAnnotation_ = builderForValue.build();
          onChanged();
        } else {
          hgvsAnnotationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public Builder mergeHgvsAnnotation(ga4gh.AlleleAnnotations.HGVSAnnotation value) {
        if (hgvsAnnotationBuilder_ == null) {
          if (hgvsAnnotation_ != null) {
            hgvsAnnotation_ =
              ga4gh.AlleleAnnotations.HGVSAnnotation.newBuilder(hgvsAnnotation_).mergeFrom(value).buildPartial();
          } else {
            hgvsAnnotation_ = value;
          }
          onChanged();
        } else {
          hgvsAnnotationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public Builder clearHgvsAnnotation() {
        if (hgvsAnnotationBuilder_ == null) {
          hgvsAnnotation_ = null;
          onChanged();
        } else {
          hgvsAnnotation_ = null;
          hgvsAnnotationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public ga4gh.AlleleAnnotations.HGVSAnnotation.Builder getHgvsAnnotationBuilder() {
        
        onChanged();
        return getHgvsAnnotationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      public ga4gh.AlleleAnnotations.HGVSAnnotationOrBuilder getHgvsAnnotationOrBuilder() {
        if (hgvsAnnotationBuilder_ != null) {
          return hgvsAnnotationBuilder_.getMessageOrBuilder();
        } else {
          return hgvsAnnotation_ == null ?
              ga4gh.AlleleAnnotations.HGVSAnnotation.getDefaultInstance() : hgvsAnnotation_;
        }
      }
      /**
       * <pre>
       * Human Genome Variation Society variant descriptions.
       * </pre>
       *
       * <code>optional .ga4gh.HGVSAnnotation hgvs_annotation = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.HGVSAnnotation, ga4gh.AlleleAnnotations.HGVSAnnotation.Builder, ga4gh.AlleleAnnotations.HGVSAnnotationOrBuilder> 
          getHgvsAnnotationFieldBuilder() {
        if (hgvsAnnotationBuilder_ == null) {
          hgvsAnnotationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ga4gh.AlleleAnnotations.HGVSAnnotation, ga4gh.AlleleAnnotations.HGVSAnnotation.Builder, ga4gh.AlleleAnnotations.HGVSAnnotationOrBuilder>(
                  getHgvsAnnotation(),
                  getParentForChildren(),
                  isClean());
          hgvsAnnotation_ = null;
        }
        return hgvsAnnotationBuilder_;
      }

      private ga4gh.AlleleAnnotations.AlleleLocation cdnaLocation_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder> cdnaLocationBuilder_;
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public boolean hasCdnaLocation() {
        return cdnaLocationBuilder_ != null || cdnaLocation_ != null;
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocation getCdnaLocation() {
        if (cdnaLocationBuilder_ == null) {
          return cdnaLocation_ == null ? ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : cdnaLocation_;
        } else {
          return cdnaLocationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public Builder setCdnaLocation(ga4gh.AlleleAnnotations.AlleleLocation value) {
        if (cdnaLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cdnaLocation_ = value;
          onChanged();
        } else {
          cdnaLocationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public Builder setCdnaLocation(
          ga4gh.AlleleAnnotations.AlleleLocation.Builder builderForValue) {
        if (cdnaLocationBuilder_ == null) {
          cdnaLocation_ = builderForValue.build();
          onChanged();
        } else {
          cdnaLocationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public Builder mergeCdnaLocation(ga4gh.AlleleAnnotations.AlleleLocation value) {
        if (cdnaLocationBuilder_ == null) {
          if (cdnaLocation_ != null) {
            cdnaLocation_ =
              ga4gh.AlleleAnnotations.AlleleLocation.newBuilder(cdnaLocation_).mergeFrom(value).buildPartial();
          } else {
            cdnaLocation_ = value;
          }
          onChanged();
        } else {
          cdnaLocationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public Builder clearCdnaLocation() {
        if (cdnaLocationBuilder_ == null) {
          cdnaLocation_ = null;
          onChanged();
        } else {
          cdnaLocation_ = null;
          cdnaLocationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocation.Builder getCdnaLocationBuilder() {
        
        onChanged();
        return getCdnaLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getCdnaLocationOrBuilder() {
        if (cdnaLocationBuilder_ != null) {
          return cdnaLocationBuilder_.getMessageOrBuilder();
        } else {
          return cdnaLocation_ == null ?
              ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : cdnaLocation_;
        }
      }
      /**
       * <pre>
       * Change relative to cDNA.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cdna_location = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder> 
          getCdnaLocationFieldBuilder() {
        if (cdnaLocationBuilder_ == null) {
          cdnaLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder>(
                  getCdnaLocation(),
                  getParentForChildren(),
                  isClean());
          cdnaLocation_ = null;
        }
        return cdnaLocationBuilder_;
      }

      private ga4gh.AlleleAnnotations.AlleleLocation cdsLocation_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder> cdsLocationBuilder_;
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public boolean hasCdsLocation() {
        return cdsLocationBuilder_ != null || cdsLocation_ != null;
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocation getCdsLocation() {
        if (cdsLocationBuilder_ == null) {
          return cdsLocation_ == null ? ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : cdsLocation_;
        } else {
          return cdsLocationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public Builder setCdsLocation(ga4gh.AlleleAnnotations.AlleleLocation value) {
        if (cdsLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cdsLocation_ = value;
          onChanged();
        } else {
          cdsLocationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public Builder setCdsLocation(
          ga4gh.AlleleAnnotations.AlleleLocation.Builder builderForValue) {
        if (cdsLocationBuilder_ == null) {
          cdsLocation_ = builderForValue.build();
          onChanged();
        } else {
          cdsLocationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public Builder mergeCdsLocation(ga4gh.AlleleAnnotations.AlleleLocation value) {
        if (cdsLocationBuilder_ == null) {
          if (cdsLocation_ != null) {
            cdsLocation_ =
              ga4gh.AlleleAnnotations.AlleleLocation.newBuilder(cdsLocation_).mergeFrom(value).buildPartial();
          } else {
            cdsLocation_ = value;
          }
          onChanged();
        } else {
          cdsLocationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public Builder clearCdsLocation() {
        if (cdsLocationBuilder_ == null) {
          cdsLocation_ = null;
          onChanged();
        } else {
          cdsLocation_ = null;
          cdsLocationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocation.Builder getCdsLocationBuilder() {
        
        onChanged();
        return getCdsLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getCdsLocationOrBuilder() {
        if (cdsLocationBuilder_ != null) {
          return cdsLocationBuilder_.getMessageOrBuilder();
        } else {
          return cdsLocation_ == null ?
              ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : cdsLocation_;
        }
      }
      /**
       * <pre>
       * Change relative to coding sequence.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation cds_location = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder> 
          getCdsLocationFieldBuilder() {
        if (cdsLocationBuilder_ == null) {
          cdsLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder>(
                  getCdsLocation(),
                  getParentForChildren(),
                  isClean());
          cdsLocation_ = null;
        }
        return cdsLocationBuilder_;
      }

      private ga4gh.AlleleAnnotations.AlleleLocation proteinLocation_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder> proteinLocationBuilder_;
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public boolean hasProteinLocation() {
        return proteinLocationBuilder_ != null || proteinLocation_ != null;
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocation getProteinLocation() {
        if (proteinLocationBuilder_ == null) {
          return proteinLocation_ == null ? ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : proteinLocation_;
        } else {
          return proteinLocationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public Builder setProteinLocation(ga4gh.AlleleAnnotations.AlleleLocation value) {
        if (proteinLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proteinLocation_ = value;
          onChanged();
        } else {
          proteinLocationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public Builder setProteinLocation(
          ga4gh.AlleleAnnotations.AlleleLocation.Builder builderForValue) {
        if (proteinLocationBuilder_ == null) {
          proteinLocation_ = builderForValue.build();
          onChanged();
        } else {
          proteinLocationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public Builder mergeProteinLocation(ga4gh.AlleleAnnotations.AlleleLocation value) {
        if (proteinLocationBuilder_ == null) {
          if (proteinLocation_ != null) {
            proteinLocation_ =
              ga4gh.AlleleAnnotations.AlleleLocation.newBuilder(proteinLocation_).mergeFrom(value).buildPartial();
          } else {
            proteinLocation_ = value;
          }
          onChanged();
        } else {
          proteinLocationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public Builder clearProteinLocation() {
        if (proteinLocationBuilder_ == null) {
          proteinLocation_ = null;
          onChanged();
        } else {
          proteinLocation_ = null;
          proteinLocationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocation.Builder getProteinLocationBuilder() {
        
        onChanged();
        return getProteinLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      public ga4gh.AlleleAnnotations.AlleleLocationOrBuilder getProteinLocationOrBuilder() {
        if (proteinLocationBuilder_ != null) {
          return proteinLocationBuilder_.getMessageOrBuilder();
        } else {
          return proteinLocation_ == null ?
              ga4gh.AlleleAnnotations.AlleleLocation.getDefaultInstance() : proteinLocation_;
        }
      }
      /**
       * <pre>
       * Change relative to protein.
       * </pre>
       *
       * <code>optional .ga4gh.AlleleLocation protein_location = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder> 
          getProteinLocationFieldBuilder() {
        if (proteinLocationBuilder_ == null) {
          proteinLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ga4gh.AlleleAnnotations.AlleleLocation, ga4gh.AlleleAnnotations.AlleleLocation.Builder, ga4gh.AlleleAnnotations.AlleleLocationOrBuilder>(
                  getProteinLocation(),
                  getParentForChildren(),
                  isClean());
          proteinLocation_ = null;
        }
        return proteinLocationBuilder_;
      }

      private java.util.List<ga4gh.AlleleAnnotations.AnalysisResult> analysisResults_ =
        java.util.Collections.emptyList();
      private void ensureAnalysisResultsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          analysisResults_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.AnalysisResult>(analysisResults_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.AnalysisResult, ga4gh.AlleleAnnotations.AnalysisResult.Builder, ga4gh.AlleleAnnotations.AnalysisResultOrBuilder> analysisResultsBuilder_;

      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.AnalysisResult> getAnalysisResultsList() {
        if (analysisResultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(analysisResults_);
        } else {
          return analysisResultsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public int getAnalysisResultsCount() {
        if (analysisResultsBuilder_ == null) {
          return analysisResults_.size();
        } else {
          return analysisResultsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public ga4gh.AlleleAnnotations.AnalysisResult getAnalysisResults(int index) {
        if (analysisResultsBuilder_ == null) {
          return analysisResults_.get(index);
        } else {
          return analysisResultsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder setAnalysisResults(
          int index, ga4gh.AlleleAnnotations.AnalysisResult value) {
        if (analysisResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnalysisResultsIsMutable();
          analysisResults_.set(index, value);
          onChanged();
        } else {
          analysisResultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder setAnalysisResults(
          int index, ga4gh.AlleleAnnotations.AnalysisResult.Builder builderForValue) {
        if (analysisResultsBuilder_ == null) {
          ensureAnalysisResultsIsMutable();
          analysisResults_.set(index, builderForValue.build());
          onChanged();
        } else {
          analysisResultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder addAnalysisResults(ga4gh.AlleleAnnotations.AnalysisResult value) {
        if (analysisResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnalysisResultsIsMutable();
          analysisResults_.add(value);
          onChanged();
        } else {
          analysisResultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder addAnalysisResults(
          int index, ga4gh.AlleleAnnotations.AnalysisResult value) {
        if (analysisResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnalysisResultsIsMutable();
          analysisResults_.add(index, value);
          onChanged();
        } else {
          analysisResultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder addAnalysisResults(
          ga4gh.AlleleAnnotations.AnalysisResult.Builder builderForValue) {
        if (analysisResultsBuilder_ == null) {
          ensureAnalysisResultsIsMutable();
          analysisResults_.add(builderForValue.build());
          onChanged();
        } else {
          analysisResultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder addAnalysisResults(
          int index, ga4gh.AlleleAnnotations.AnalysisResult.Builder builderForValue) {
        if (analysisResultsBuilder_ == null) {
          ensureAnalysisResultsIsMutable();
          analysisResults_.add(index, builderForValue.build());
          onChanged();
        } else {
          analysisResultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder addAllAnalysisResults(
          java.lang.Iterable<? extends ga4gh.AlleleAnnotations.AnalysisResult> values) {
        if (analysisResultsBuilder_ == null) {
          ensureAnalysisResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, analysisResults_);
          onChanged();
        } else {
          analysisResultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder clearAnalysisResults() {
        if (analysisResultsBuilder_ == null) {
          analysisResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          analysisResultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public Builder removeAnalysisResults(int index) {
        if (analysisResultsBuilder_ == null) {
          ensureAnalysisResultsIsMutable();
          analysisResults_.remove(index);
          onChanged();
        } else {
          analysisResultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public ga4gh.AlleleAnnotations.AnalysisResult.Builder getAnalysisResultsBuilder(
          int index) {
        return getAnalysisResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public ga4gh.AlleleAnnotations.AnalysisResultOrBuilder getAnalysisResultsOrBuilder(
          int index) {
        if (analysisResultsBuilder_ == null) {
          return analysisResults_.get(index);  } else {
          return analysisResultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public java.util.List<? extends ga4gh.AlleleAnnotations.AnalysisResultOrBuilder> 
           getAnalysisResultsOrBuilderList() {
        if (analysisResultsBuilder_ != null) {
          return analysisResultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(analysisResults_);
        }
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public ga4gh.AlleleAnnotations.AnalysisResult.Builder addAnalysisResultsBuilder() {
        return getAnalysisResultsFieldBuilder().addBuilder(
            ga4gh.AlleleAnnotations.AnalysisResult.getDefaultInstance());
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public ga4gh.AlleleAnnotations.AnalysisResult.Builder addAnalysisResultsBuilder(
          int index) {
        return getAnalysisResultsFieldBuilder().addBuilder(
            index, ga4gh.AlleleAnnotations.AnalysisResult.getDefaultInstance());
      }
      /**
       * <pre>
       * Output from prediction packages such as SIFT.
       * </pre>
       *
       * <code>repeated .ga4gh.AnalysisResult analysis_results = 9;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.AnalysisResult.Builder> 
           getAnalysisResultsBuilderList() {
        return getAnalysisResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.AnalysisResult, ga4gh.AlleleAnnotations.AnalysisResult.Builder, ga4gh.AlleleAnnotations.AnalysisResultOrBuilder> 
          getAnalysisResultsFieldBuilder() {
        if (analysisResultsBuilder_ == null) {
          analysisResultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.AlleleAnnotations.AnalysisResult, ga4gh.AlleleAnnotations.AnalysisResult.Builder, ga4gh.AlleleAnnotations.AnalysisResultOrBuilder>(
                  analysisResults_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          analysisResults_ = null;
        }
        return analysisResultsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.TranscriptEffect)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.TranscriptEffect)
    private static final ga4gh.AlleleAnnotations.TranscriptEffect DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotations.TranscriptEffect();
    }

    public static ga4gh.AlleleAnnotations.TranscriptEffect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TranscriptEffect>
        PARSER = new com.google.protobuf.AbstractParser<TranscriptEffect>() {
      public TranscriptEffect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TranscriptEffect(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TranscriptEffect> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TranscriptEffect> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotations.TranscriptEffect getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VariantAnnotationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.VariantAnnotation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of this VariantAnnotation.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * The ID of this VariantAnnotation.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string variant_id = 2;</code>
     */
    java.lang.String getVariantId();
    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string variant_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getVariantIdBytes();

    /**
     * <pre>
     * The ID of the variant annotation set this record belongs to.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 3;</code>
     */
    java.lang.String getVariantAnnotationSetId();
    /**
     * <pre>
     * The ID of the variant annotation set this record belongs to.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getVariantAnnotationSetIdBytes();

    /**
     * <pre>
     * The time at which this record was created, in ISO 8601 format.
     * </pre>
     *
     * <code>optional string create_date_time = 4;</code>
     */
    java.lang.String getCreateDateTime();
    /**
     * <pre>
     * The time at which this record was created, in ISO 8601 format.
     * </pre>
     *
     * <code>optional string create_date_time = 4;</code>
     */
    com.google.protobuf.ByteString
        getCreateDateTimeBytes();

    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    java.util.List<ga4gh.AlleleAnnotations.TranscriptEffect> 
        getTranscriptEffectsList();
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    ga4gh.AlleleAnnotations.TranscriptEffect getTranscriptEffects(int index);
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    int getTranscriptEffectsCount();
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    java.util.List<? extends ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder> 
        getTranscriptEffectsOrBuilderList();
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder getTranscriptEffectsOrBuilder(
        int index);

    /**
     * <pre>
     * Additional annotation data in key-value pairs.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ListValue>
    getInfo();
  }
  /**
   * <pre>
   * A `VariantAnnotation` record represents the result of comparing a variant to
   * a set of reference data.
   * </pre>
   *
   * Protobuf type {@code ga4gh.VariantAnnotation}
   */
  public  static final class VariantAnnotation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.VariantAnnotation)
      VariantAnnotationOrBuilder {
    // Use VariantAnnotation.newBuilder() to construct.
    private VariantAnnotation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VariantAnnotation() {
      id_ = "";
      variantId_ = "";
      variantAnnotationSetId_ = "";
      createDateTime_ = "";
      transcriptEffects_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VariantAnnotation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              variantId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              variantAnnotationSetId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              createDateTime_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                transcriptEffects_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.TranscriptEffect>();
                mutable_bitField0_ |= 0x00000010;
              }
              transcriptEffects_.add(input.readMessage(ga4gh.AlleleAnnotations.TranscriptEffect.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                info_ = com.google.protobuf.MapField.newMapField(
                    InfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
              info = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              info_.getMutableMap().put(info.getKey(), info.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          transcriptEffects_ = java.util.Collections.unmodifiableList(transcriptEffects_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.AlleleAnnotations.VariantAnnotation.class, ga4gh.AlleleAnnotations.VariantAnnotation.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The ID of this VariantAnnotation.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of this VariantAnnotation.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANT_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object variantId_;
    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string variant_id = 2;</code>
     */
    public java.lang.String getVariantId() {
      java.lang.Object ref = variantId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string variant_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVariantIdBytes() {
      java.lang.Object ref = variantId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANT_ANNOTATION_SET_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object variantAnnotationSetId_;
    /**
     * <pre>
     * The ID of the variant annotation set this record belongs to.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 3;</code>
     */
    public java.lang.String getVariantAnnotationSetId() {
      java.lang.Object ref = variantAnnotationSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantAnnotationSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the variant annotation set this record belongs to.
     * </pre>
     *
     * <code>optional string variant_annotation_set_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getVariantAnnotationSetIdBytes() {
      java.lang.Object ref = variantAnnotationSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantAnnotationSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATE_DATE_TIME_FIELD_NUMBER = 4;
    private volatile java.lang.Object createDateTime_;
    /**
     * <pre>
     * The time at which this record was created, in ISO 8601 format.
     * </pre>
     *
     * <code>optional string create_date_time = 4;</code>
     */
    public java.lang.String getCreateDateTime() {
      java.lang.Object ref = createDateTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createDateTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The time at which this record was created, in ISO 8601 format.
     * </pre>
     *
     * <code>optional string create_date_time = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCreateDateTimeBytes() {
      java.lang.Object ref = createDateTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createDateTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRANSCRIPT_EFFECTS_FIELD_NUMBER = 5;
    private java.util.List<ga4gh.AlleleAnnotations.TranscriptEffect> transcriptEffects_;
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    public java.util.List<ga4gh.AlleleAnnotations.TranscriptEffect> getTranscriptEffectsList() {
      return transcriptEffects_;
    }
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    public java.util.List<? extends ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder> 
        getTranscriptEffectsOrBuilderList() {
      return transcriptEffects_;
    }
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    public int getTranscriptEffectsCount() {
      return transcriptEffects_.size();
    }
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    public ga4gh.AlleleAnnotations.TranscriptEffect getTranscriptEffects(int index) {
      return transcriptEffects_.get(index);
    }
    /**
     * <pre>
     * The transcript effect annotation for the alleles of this variant. Each
     * one represents the effect of a single allele on a single transcript.
     * </pre>
     *
     * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
     */
    public ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder getTranscriptEffectsOrBuilder(
        int index) {
      return transcriptEffects_.get(index);
    }

    public static final int INFO_FIELD_NUMBER = 6;
    private static final class InfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ListValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ListValue>newDefaultInstance(
                  ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotation_InfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.ListValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ListValue> info_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
    internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      return info_;
    }
    /**
     * <pre>
     * Additional annotation data in key-value pairs.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
      return internalGetInfo().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!getVariantIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, variantId_);
      }
      if (!getVariantAnnotationSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, variantAnnotationSetId_);
      }
      if (!getCreateDateTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, createDateTime_);
      }
      for (int i = 0; i < transcriptEffects_.size(); i++) {
        output.writeMessage(5, transcriptEffects_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(6, info);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!getVariantIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, variantId_);
      }
      if (!getVariantAnnotationSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, variantAnnotationSetId_);
      }
      if (!getCreateDateTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, createDateTime_);
      }
      for (int i = 0; i < transcriptEffects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, transcriptEffects_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, info);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.AlleleAnnotations.VariantAnnotation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.AlleleAnnotations.VariantAnnotation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A `VariantAnnotation` record represents the result of comparing a variant to
     * a set of reference data.
     * </pre>
     *
     * Protobuf type {@code ga4gh.VariantAnnotation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.VariantAnnotation)
        ga4gh.AlleleAnnotations.VariantAnnotationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.AlleleAnnotations.VariantAnnotation.class, ga4gh.AlleleAnnotations.VariantAnnotation.Builder.class);
      }

      // Construct using ga4gh.AlleleAnnotations.VariantAnnotation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTranscriptEffectsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        variantId_ = "";

        variantAnnotationSetId_ = "";

        createDateTime_ = "";

        if (transcriptEffectsBuilder_ == null) {
          transcriptEffects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          transcriptEffectsBuilder_.clear();
        }
        internalGetMutableInfo().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.AlleleAnnotations.internal_static_ga4gh_VariantAnnotation_descriptor;
      }

      public ga4gh.AlleleAnnotations.VariantAnnotation getDefaultInstanceForType() {
        return ga4gh.AlleleAnnotations.VariantAnnotation.getDefaultInstance();
      }

      public ga4gh.AlleleAnnotations.VariantAnnotation build() {
        ga4gh.AlleleAnnotations.VariantAnnotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.AlleleAnnotations.VariantAnnotation buildPartial() {
        ga4gh.AlleleAnnotations.VariantAnnotation result = new ga4gh.AlleleAnnotations.VariantAnnotation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.variantId_ = variantId_;
        result.variantAnnotationSetId_ = variantAnnotationSetId_;
        result.createDateTime_ = createDateTime_;
        if (transcriptEffectsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            transcriptEffects_ = java.util.Collections.unmodifiableList(transcriptEffects_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.transcriptEffects_ = transcriptEffects_;
        } else {
          result.transcriptEffects_ = transcriptEffectsBuilder_.build();
        }
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.AlleleAnnotations.VariantAnnotation) {
          return mergeFrom((ga4gh.AlleleAnnotations.VariantAnnotation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.AlleleAnnotations.VariantAnnotation other) {
        if (other == ga4gh.AlleleAnnotations.VariantAnnotation.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getVariantId().isEmpty()) {
          variantId_ = other.variantId_;
          onChanged();
        }
        if (!other.getVariantAnnotationSetId().isEmpty()) {
          variantAnnotationSetId_ = other.variantAnnotationSetId_;
          onChanged();
        }
        if (!other.getCreateDateTime().isEmpty()) {
          createDateTime_ = other.createDateTime_;
          onChanged();
        }
        if (transcriptEffectsBuilder_ == null) {
          if (!other.transcriptEffects_.isEmpty()) {
            if (transcriptEffects_.isEmpty()) {
              transcriptEffects_ = other.transcriptEffects_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTranscriptEffectsIsMutable();
              transcriptEffects_.addAll(other.transcriptEffects_);
            }
            onChanged();
          }
        } else {
          if (!other.transcriptEffects_.isEmpty()) {
            if (transcriptEffectsBuilder_.isEmpty()) {
              transcriptEffectsBuilder_.dispose();
              transcriptEffectsBuilder_ = null;
              transcriptEffects_ = other.transcriptEffects_;
              bitField0_ = (bitField0_ & ~0x00000010);
              transcriptEffectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTranscriptEffectsFieldBuilder() : null;
            } else {
              transcriptEffectsBuilder_.addAllMessages(other.transcriptEffects_);
            }
          }
        }
        internalGetMutableInfo().mergeFrom(
            other.internalGetInfo());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.AlleleAnnotations.VariantAnnotation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.AlleleAnnotations.VariantAnnotation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The ID of this VariantAnnotation.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of this VariantAnnotation.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of this VariantAnnotation.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of this VariantAnnotation.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of this VariantAnnotation.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object variantId_ = "";
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string variant_id = 2;</code>
       */
      public java.lang.String getVariantId() {
        java.lang.Object ref = variantId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string variant_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVariantIdBytes() {
        java.lang.Object ref = variantId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string variant_id = 2;</code>
       */
      public Builder setVariantId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string variant_id = 2;</code>
       */
      public Builder clearVariantId() {
        
        variantId_ = getDefaultInstance().getVariantId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string variant_id = 2;</code>
       */
      public Builder setVariantIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object variantAnnotationSetId_ = "";
      /**
       * <pre>
       * The ID of the variant annotation set this record belongs to.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 3;</code>
       */
      public java.lang.String getVariantAnnotationSetId() {
        java.lang.Object ref = variantAnnotationSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantAnnotationSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the variant annotation set this record belongs to.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVariantAnnotationSetIdBytes() {
        java.lang.Object ref = variantAnnotationSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantAnnotationSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the variant annotation set this record belongs to.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 3;</code>
       */
      public Builder setVariantAnnotationSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantAnnotationSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the variant annotation set this record belongs to.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 3;</code>
       */
      public Builder clearVariantAnnotationSetId() {
        
        variantAnnotationSetId_ = getDefaultInstance().getVariantAnnotationSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the variant annotation set this record belongs to.
       * </pre>
       *
       * <code>optional string variant_annotation_set_id = 3;</code>
       */
      public Builder setVariantAnnotationSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantAnnotationSetId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object createDateTime_ = "";
      /**
       * <pre>
       * The time at which this record was created, in ISO 8601 format.
       * </pre>
       *
       * <code>optional string create_date_time = 4;</code>
       */
      public java.lang.String getCreateDateTime() {
        java.lang.Object ref = createDateTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createDateTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The time at which this record was created, in ISO 8601 format.
       * </pre>
       *
       * <code>optional string create_date_time = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCreateDateTimeBytes() {
        java.lang.Object ref = createDateTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createDateTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The time at which this record was created, in ISO 8601 format.
       * </pre>
       *
       * <code>optional string create_date_time = 4;</code>
       */
      public Builder setCreateDateTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createDateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time at which this record was created, in ISO 8601 format.
       * </pre>
       *
       * <code>optional string create_date_time = 4;</code>
       */
      public Builder clearCreateDateTime() {
        
        createDateTime_ = getDefaultInstance().getCreateDateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time at which this record was created, in ISO 8601 format.
       * </pre>
       *
       * <code>optional string create_date_time = 4;</code>
       */
      public Builder setCreateDateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createDateTime_ = value;
        onChanged();
        return this;
      }

      private java.util.List<ga4gh.AlleleAnnotations.TranscriptEffect> transcriptEffects_ =
        java.util.Collections.emptyList();
      private void ensureTranscriptEffectsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          transcriptEffects_ = new java.util.ArrayList<ga4gh.AlleleAnnotations.TranscriptEffect>(transcriptEffects_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.TranscriptEffect, ga4gh.AlleleAnnotations.TranscriptEffect.Builder, ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder> transcriptEffectsBuilder_;

      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.TranscriptEffect> getTranscriptEffectsList() {
        if (transcriptEffectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transcriptEffects_);
        } else {
          return transcriptEffectsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public int getTranscriptEffectsCount() {
        if (transcriptEffectsBuilder_ == null) {
          return transcriptEffects_.size();
        } else {
          return transcriptEffectsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public ga4gh.AlleleAnnotations.TranscriptEffect getTranscriptEffects(int index) {
        if (transcriptEffectsBuilder_ == null) {
          return transcriptEffects_.get(index);
        } else {
          return transcriptEffectsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder setTranscriptEffects(
          int index, ga4gh.AlleleAnnotations.TranscriptEffect value) {
        if (transcriptEffectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTranscriptEffectsIsMutable();
          transcriptEffects_.set(index, value);
          onChanged();
        } else {
          transcriptEffectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder setTranscriptEffects(
          int index, ga4gh.AlleleAnnotations.TranscriptEffect.Builder builderForValue) {
        if (transcriptEffectsBuilder_ == null) {
          ensureTranscriptEffectsIsMutable();
          transcriptEffects_.set(index, builderForValue.build());
          onChanged();
        } else {
          transcriptEffectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder addTranscriptEffects(ga4gh.AlleleAnnotations.TranscriptEffect value) {
        if (transcriptEffectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTranscriptEffectsIsMutable();
          transcriptEffects_.add(value);
          onChanged();
        } else {
          transcriptEffectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder addTranscriptEffects(
          int index, ga4gh.AlleleAnnotations.TranscriptEffect value) {
        if (transcriptEffectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTranscriptEffectsIsMutable();
          transcriptEffects_.add(index, value);
          onChanged();
        } else {
          transcriptEffectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder addTranscriptEffects(
          ga4gh.AlleleAnnotations.TranscriptEffect.Builder builderForValue) {
        if (transcriptEffectsBuilder_ == null) {
          ensureTranscriptEffectsIsMutable();
          transcriptEffects_.add(builderForValue.build());
          onChanged();
        } else {
          transcriptEffectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder addTranscriptEffects(
          int index, ga4gh.AlleleAnnotations.TranscriptEffect.Builder builderForValue) {
        if (transcriptEffectsBuilder_ == null) {
          ensureTranscriptEffectsIsMutable();
          transcriptEffects_.add(index, builderForValue.build());
          onChanged();
        } else {
          transcriptEffectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder addAllTranscriptEffects(
          java.lang.Iterable<? extends ga4gh.AlleleAnnotations.TranscriptEffect> values) {
        if (transcriptEffectsBuilder_ == null) {
          ensureTranscriptEffectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, transcriptEffects_);
          onChanged();
        } else {
          transcriptEffectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder clearTranscriptEffects() {
        if (transcriptEffectsBuilder_ == null) {
          transcriptEffects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          transcriptEffectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public Builder removeTranscriptEffects(int index) {
        if (transcriptEffectsBuilder_ == null) {
          ensureTranscriptEffectsIsMutable();
          transcriptEffects_.remove(index);
          onChanged();
        } else {
          transcriptEffectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public ga4gh.AlleleAnnotations.TranscriptEffect.Builder getTranscriptEffectsBuilder(
          int index) {
        return getTranscriptEffectsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder getTranscriptEffectsOrBuilder(
          int index) {
        if (transcriptEffectsBuilder_ == null) {
          return transcriptEffects_.get(index);  } else {
          return transcriptEffectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public java.util.List<? extends ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder> 
           getTranscriptEffectsOrBuilderList() {
        if (transcriptEffectsBuilder_ != null) {
          return transcriptEffectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transcriptEffects_);
        }
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public ga4gh.AlleleAnnotations.TranscriptEffect.Builder addTranscriptEffectsBuilder() {
        return getTranscriptEffectsFieldBuilder().addBuilder(
            ga4gh.AlleleAnnotations.TranscriptEffect.getDefaultInstance());
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public ga4gh.AlleleAnnotations.TranscriptEffect.Builder addTranscriptEffectsBuilder(
          int index) {
        return getTranscriptEffectsFieldBuilder().addBuilder(
            index, ga4gh.AlleleAnnotations.TranscriptEffect.getDefaultInstance());
      }
      /**
       * <pre>
       * The transcript effect annotation for the alleles of this variant. Each
       * one represents the effect of a single allele on a single transcript.
       * </pre>
       *
       * <code>repeated .ga4gh.TranscriptEffect transcript_effects = 5;</code>
       */
      public java.util.List<ga4gh.AlleleAnnotations.TranscriptEffect.Builder> 
           getTranscriptEffectsBuilderList() {
        return getTranscriptEffectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.AlleleAnnotations.TranscriptEffect, ga4gh.AlleleAnnotations.TranscriptEffect.Builder, ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder> 
          getTranscriptEffectsFieldBuilder() {
        if (transcriptEffectsBuilder_ == null) {
          transcriptEffectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.AlleleAnnotations.TranscriptEffect, ga4gh.AlleleAnnotations.TranscriptEffect.Builder, ga4gh.AlleleAnnotations.TranscriptEffectOrBuilder>(
                  transcriptEffects_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          transcriptEffects_ = null;
        }
        return transcriptEffectsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ListValue> info_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetInfo() {
        if (info_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        return info_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetMutableInfo() {
        onChanged();;
        if (info_ == null) {
          info_ = com.google.protobuf.MapField.newMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        if (!info_.isMutable()) {
          info_ = info_.copy();
        }
        return info_;
      }
      /**
       * <pre>
       * Additional annotation data in key-value pairs.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
        return internalGetInfo().getMap();
      }
      /**
       * <pre>
       * Additional annotation data in key-value pairs.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue>
      getMutableInfo() {
        return internalGetMutableInfo().getMutableMap();
      }
      /**
       * <pre>
       * Additional annotation data in key-value pairs.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
       */
      public Builder putAllInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ListValue> values) {
        getMutableInfo().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.VariantAnnotation)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.VariantAnnotation)
    private static final ga4gh.AlleleAnnotations.VariantAnnotation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.AlleleAnnotations.VariantAnnotation();
    }

    public static ga4gh.AlleleAnnotations.VariantAnnotation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VariantAnnotation>
        PARSER = new com.google.protobuf.AbstractParser<VariantAnnotation>() {
      public VariantAnnotation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VariantAnnotation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VariantAnnotation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VariantAnnotation> getParserForType() {
      return PARSER;
    }

    public ga4gh.AlleleAnnotations.VariantAnnotation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_AnalysisResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_AnalysisResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_AlleleLocation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_AlleleLocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_VariantAnnotationSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_VariantAnnotationSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_HGVSAnnotation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_HGVSAnnotation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_TranscriptEffect_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_TranscriptEffect_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_VariantAnnotation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_VariantAnnotation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_VariantAnnotation_InfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_VariantAnnotation_InfoEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036ga4gh/allele_annotations.proto\022\005ga4gh\032" +
      "\024ga4gh/metadata.proto\032\034google/protobuf/s" +
      "truct.proto\"D\n\016AnalysisResult\022\023\n\013analysi" +
      "s_id\030\001 \001(\t\022\016\n\006result\030\002 \001(\t\022\r\n\005score\030\003 \001(" +
      "\005\"d\n\016AlleleLocation\022\r\n\005start\030\001 \001(\005\022\013\n\003en" +
      "d\030\002 \001(\005\022\032\n\022reference_sequence\030\003 \001(\t\022\032\n\022a" +
      "lternate_sequence\030\004 \001(\t\"j\n\024VariantAnnota" +
      "tionSet\022\n\n\002id\030\001 \001(\t\022\025\n\rvariantSet_id\030\002 \001" +
      "(\t\022\014\n\004name\030\003 \001(\t\022!\n\010analysis\030\004 \001(\0132\017.ga4" +
      "gh.Analysis\"F\n\016HGVSAnnotation\022\017\n\007genomic",
      "\030\001 \001(\t\022\022\n\ntranscript\030\002 \001(\t\022\017\n\007protein\030\003 " +
      "\001(\t\"\336\002\n\020TranscriptEffect\022\n\n\002id\030\001 \001(\t\022\022\n\n" +
      "feature_id\030\002 \001(\t\022\027\n\017alternate_bases\030\003 \001(" +
      "\t\022$\n\007effects\030\004 \003(\0132\023.ga4gh.OntologyTerm\022" +
      ".\n\017hgvs_annotation\030\005 \001(\0132\025.ga4gh.HGVSAnn" +
      "otation\022,\n\rcdna_location\030\006 \001(\0132\025.ga4gh.A" +
      "lleleLocation\022+\n\014cds_location\030\007 \001(\0132\025.ga" +
      "4gh.AlleleLocation\022/\n\020protein_location\030\010" +
      " \001(\0132\025.ga4gh.AlleleLocation\022/\n\020analysis_" +
      "results\030\t \003(\0132\025.ga4gh.AnalysisResult\"\240\002\n",
      "\021VariantAnnotation\022\n\n\002id\030\001 \001(\t\022\022\n\nvarian" +
      "t_id\030\002 \001(\t\022!\n\031variant_annotation_set_id\030" +
      "\003 \001(\t\022\030\n\020create_date_time\030\004 \001(\t\0223\n\022trans" +
      "cript_effects\030\005 \003(\0132\027.ga4gh.TranscriptEf" +
      "fect\0220\n\004info\030\006 \003(\0132\".ga4gh.VariantAnnota" +
      "tion.InfoEntry\032G\n\tInfoEntry\022\013\n\003key\030\001 \001(\t" +
      "\022)\n\005value\030\002 \001(\0132\032.google.protobuf.ListVa" +
      "lue:\0028\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ga4gh.Metadata.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
        }, assigner);
    internal_static_ga4gh_AnalysisResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ga4gh_AnalysisResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_AnalysisResult_descriptor,
        new java.lang.String[] { "AnalysisId", "Result", "Score", });
    internal_static_ga4gh_AlleleLocation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ga4gh_AlleleLocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_AlleleLocation_descriptor,
        new java.lang.String[] { "Start", "End", "ReferenceSequence", "AlternateSequence", });
    internal_static_ga4gh_VariantAnnotationSet_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ga4gh_VariantAnnotationSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_VariantAnnotationSet_descriptor,
        new java.lang.String[] { "Id", "VariantSetId", "Name", "Analysis", });
    internal_static_ga4gh_HGVSAnnotation_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ga4gh_HGVSAnnotation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_HGVSAnnotation_descriptor,
        new java.lang.String[] { "Genomic", "Transcript", "Protein", });
    internal_static_ga4gh_TranscriptEffect_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ga4gh_TranscriptEffect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_TranscriptEffect_descriptor,
        new java.lang.String[] { "Id", "FeatureId", "AlternateBases", "Effects", "HgvsAnnotation", "CdnaLocation", "CdsLocation", "ProteinLocation", "AnalysisResults", });
    internal_static_ga4gh_VariantAnnotation_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_ga4gh_VariantAnnotation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_VariantAnnotation_descriptor,
        new java.lang.String[] { "Id", "VariantId", "VariantAnnotationSetId", "CreateDateTime", "TranscriptEffects", "Info", });
    internal_static_ga4gh_VariantAnnotation_InfoEntry_descriptor =
      internal_static_ga4gh_VariantAnnotation_descriptor.getNestedTypes().get(0);
    internal_static_ga4gh_VariantAnnotation_InfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_VariantAnnotation_InfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    ga4gh.Metadata.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
