// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ga4gh/variants.proto

package ga4gh;

public final class Variants {
  private Variants() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VariantSetMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.VariantSetMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The top-level key.
     * </pre>
     *
     * <code>optional string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <pre>
     * The top-level key.
     * </pre>
     *
     * <code>optional string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * The value field for simple metadata.
     * </pre>
     *
     * <code>optional string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <pre>
     * The value field for simple metadata.
     * </pre>
     *
     * <code>optional string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     * User-provided ID field, not enforced by this API.
     * Two or more pieces of structured metadata with identical
     * id and key fields are considered equivalent.
     * FIXME: If it's not enforced, then why can't it be null?
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * User-provided ID field, not enforced by this API.
     * Two or more pieces of structured metadata with identical
     * id and key fields are considered equivalent.
     * FIXME: If it's not enforced, then why can't it be null?
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The type of data.
     * </pre>
     *
     * <code>optional string type = 4;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type of data.
     * </pre>
     *
     * <code>optional string type = 4;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The number of values that can be included in a field described by this
     * metadata.
     * </pre>
     *
     * <code>optional string number = 5;</code>
     */
    java.lang.String getNumber();
    /**
     * <pre>
     * The number of values that can be included in a field described by this
     * metadata.
     * </pre>
     *
     * <code>optional string number = 5;</code>
     */
    com.google.protobuf.ByteString
        getNumberBytes();

    /**
     * <pre>
     * A textual description of this metadata.
     * </pre>
     *
     * <code>optional string description = 6;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * A textual description of this metadata.
     * </pre>
     *
     * <code>optional string description = 6;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Remaining structured metadata key-value pairs.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ListValue>
    getInfo();
  }
  /**
   * <pre>
   * This metadata represents VCF header information.
   * </pre>
   *
   * Protobuf type {@code ga4gh.VariantSetMetadata}
   */
  public  static final class VariantSetMetadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.VariantSetMetadata)
      VariantSetMetadataOrBuilder {
    // Use VariantSetMetadata.newBuilder() to construct.
    private VariantSetMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VariantSetMetadata() {
      key_ = "";
      value_ = "";
      id_ = "";
      type_ = "";
      number_ = "";
      description_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VariantSetMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              number_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                info_ = com.google.protobuf.MapField.newMapField(
                    InfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
              info = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              info_.getMutableMap().put(info.getKey(), info.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.Variants.internal_static_ga4gh_VariantSetMetadata_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.Variants.internal_static_ga4gh_VariantSetMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.Variants.VariantSetMetadata.class, ga4gh.Variants.VariantSetMetadata.Builder.class);
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <pre>
     * The top-level key.
     * </pre>
     *
     * <code>optional string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The top-level key.
     * </pre>
     *
     * <code>optional string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <pre>
     * The value field for simple metadata.
     * </pre>
     *
     * <code>optional string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The value field for simple metadata.
     * </pre>
     *
     * <code>optional string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * User-provided ID field, not enforced by this API.
     * Two or more pieces of structured metadata with identical
     * id and key fields are considered equivalent.
     * FIXME: If it's not enforced, then why can't it be null?
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * User-provided ID field, not enforced by this API.
     * Two or more pieces of structured metadata with identical
     * id and key fields are considered equivalent.
     * FIXME: If it's not enforced, then why can't it be null?
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type of data.
     * </pre>
     *
     * <code>optional string type = 4;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type of data.
     * </pre>
     *
     * <code>optional string type = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUMBER_FIELD_NUMBER = 5;
    private volatile java.lang.Object number_;
    /**
     * <pre>
     * The number of values that can be included in a field described by this
     * metadata.
     * </pre>
     *
     * <code>optional string number = 5;</code>
     */
    public java.lang.String getNumber() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        number_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The number of values that can be included in a field described by this
     * metadata.
     * </pre>
     *
     * <code>optional string number = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNumberBytes() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        number_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 6;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * A textual description of this metadata.
     * </pre>
     *
     * <code>optional string description = 6;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A textual description of this metadata.
     * </pre>
     *
     * <code>optional string description = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INFO_FIELD_NUMBER = 7;
    private static final class InfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ListValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ListValue>newDefaultInstance(
                  ga4gh.Variants.internal_static_ga4gh_VariantSetMetadata_InfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.ListValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ListValue> info_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
    internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      return info_;
    }
    /**
     * <pre>
     * Remaining structured metadata key-value pairs.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
      return internalGetInfo().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, value_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, type_);
      }
      if (!getNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, number_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, description_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(7, info);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, value_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, type_);
      }
      if (!getNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, number_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, description_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, info);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.Variants.VariantSetMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.VariantSetMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSetMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.VariantSetMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSetMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.VariantSetMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSetMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.VariantSetMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSetMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.VariantSetMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.Variants.VariantSetMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This metadata represents VCF header information.
     * </pre>
     *
     * Protobuf type {@code ga4gh.VariantSetMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.VariantSetMetadata)
        ga4gh.Variants.VariantSetMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.Variants.internal_static_ga4gh_VariantSetMetadata_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.Variants.internal_static_ga4gh_VariantSetMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.Variants.VariantSetMetadata.class, ga4gh.Variants.VariantSetMetadata.Builder.class);
      }

      // Construct using ga4gh.Variants.VariantSetMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = "";

        id_ = "";

        type_ = "";

        number_ = "";

        description_ = "";

        internalGetMutableInfo().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.Variants.internal_static_ga4gh_VariantSetMetadata_descriptor;
      }

      public ga4gh.Variants.VariantSetMetadata getDefaultInstanceForType() {
        return ga4gh.Variants.VariantSetMetadata.getDefaultInstance();
      }

      public ga4gh.Variants.VariantSetMetadata build() {
        ga4gh.Variants.VariantSetMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.Variants.VariantSetMetadata buildPartial() {
        ga4gh.Variants.VariantSetMetadata result = new ga4gh.Variants.VariantSetMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.key_ = key_;
        result.value_ = value_;
        result.id_ = id_;
        result.type_ = type_;
        result.number_ = number_;
        result.description_ = description_;
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.Variants.VariantSetMetadata) {
          return mergeFrom((ga4gh.Variants.VariantSetMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.Variants.VariantSetMetadata other) {
        if (other == ga4gh.Variants.VariantSetMetadata.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getNumber().isEmpty()) {
          number_ = other.number_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        internalGetMutableInfo().mergeFrom(
            other.internalGetInfo());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.Variants.VariantSetMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.Variants.VariantSetMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <pre>
       * The top-level key.
       * </pre>
       *
       * <code>optional string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The top-level key.
       * </pre>
       *
       * <code>optional string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The top-level key.
       * </pre>
       *
       * <code>optional string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The top-level key.
       * </pre>
       *
       * <code>optional string key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The top-level key.
       * </pre>
       *
       * <code>optional string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <pre>
       * The value field for simple metadata.
       * </pre>
       *
       * <code>optional string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The value field for simple metadata.
       * </pre>
       *
       * <code>optional string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The value field for simple metadata.
       * </pre>
       *
       * <code>optional string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value field for simple metadata.
       * </pre>
       *
       * <code>optional string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value field for simple metadata.
       * </pre>
       *
       * <code>optional string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * User-provided ID field, not enforced by this API.
       * Two or more pieces of structured metadata with identical
       * id and key fields are considered equivalent.
       * FIXME: If it's not enforced, then why can't it be null?
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User-provided ID field, not enforced by this API.
       * Two or more pieces of structured metadata with identical
       * id and key fields are considered equivalent.
       * FIXME: If it's not enforced, then why can't it be null?
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User-provided ID field, not enforced by this API.
       * Two or more pieces of structured metadata with identical
       * id and key fields are considered equivalent.
       * FIXME: If it's not enforced, then why can't it be null?
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User-provided ID field, not enforced by this API.
       * Two or more pieces of structured metadata with identical
       * id and key fields are considered equivalent.
       * FIXME: If it's not enforced, then why can't it be null?
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User-provided ID field, not enforced by this API.
       * Two or more pieces of structured metadata with identical
       * id and key fields are considered equivalent.
       * FIXME: If it's not enforced, then why can't it be null?
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type of data.
       * </pre>
       *
       * <code>optional string type = 4;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type of data.
       * </pre>
       *
       * <code>optional string type = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type of data.
       * </pre>
       *
       * <code>optional string type = 4;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of data.
       * </pre>
       *
       * <code>optional string type = 4;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of data.
       * </pre>
       *
       * <code>optional string type = 4;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object number_ = "";
      /**
       * <pre>
       * The number of values that can be included in a field described by this
       * metadata.
       * </pre>
       *
       * <code>optional string number = 5;</code>
       */
      public java.lang.String getNumber() {
        java.lang.Object ref = number_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          number_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The number of values that can be included in a field described by this
       * metadata.
       * </pre>
       *
       * <code>optional string number = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNumberBytes() {
        java.lang.Object ref = number_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          number_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The number of values that can be included in a field described by this
       * metadata.
       * </pre>
       *
       * <code>optional string number = 5;</code>
       */
      public Builder setNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        number_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of values that can be included in a field described by this
       * metadata.
       * </pre>
       *
       * <code>optional string number = 5;</code>
       */
      public Builder clearNumber() {
        
        number_ = getDefaultInstance().getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of values that can be included in a field described by this
       * metadata.
       * </pre>
       *
       * <code>optional string number = 5;</code>
       */
      public Builder setNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        number_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * A textual description of this metadata.
       * </pre>
       *
       * <code>optional string description = 6;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A textual description of this metadata.
       * </pre>
       *
       * <code>optional string description = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A textual description of this metadata.
       * </pre>
       *
       * <code>optional string description = 6;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A textual description of this metadata.
       * </pre>
       *
       * <code>optional string description = 6;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A textual description of this metadata.
       * </pre>
       *
       * <code>optional string description = 6;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ListValue> info_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetInfo() {
        if (info_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        return info_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetMutableInfo() {
        onChanged();;
        if (info_ == null) {
          info_ = com.google.protobuf.MapField.newMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        if (!info_.isMutable()) {
          info_ = info_.copy();
        }
        return info_;
      }
      /**
       * <pre>
       * Remaining structured metadata key-value pairs.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
        return internalGetInfo().getMap();
      }
      /**
       * <pre>
       * Remaining structured metadata key-value pairs.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue>
      getMutableInfo() {
        return internalGetMutableInfo().getMutableMap();
      }
      /**
       * <pre>
       * Remaining structured metadata key-value pairs.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
       */
      public Builder putAllInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ListValue> values) {
        getMutableInfo().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.VariantSetMetadata)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.VariantSetMetadata)
    private static final ga4gh.Variants.VariantSetMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.Variants.VariantSetMetadata();
    }

    public static ga4gh.Variants.VariantSetMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VariantSetMetadata>
        PARSER = new com.google.protobuf.AbstractParser<VariantSetMetadata>() {
      public VariantSetMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VariantSetMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VariantSetMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VariantSetMetadata> getParserForType() {
      return PARSER;
    }

    public ga4gh.Variants.VariantSetMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VariantSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.VariantSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The variant set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * The variant set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The variant set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The variant set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The ID of the dataset this variant set belongs to.
     * </pre>
     *
     * <code>optional string dataset_id = 3;</code>
     */
    java.lang.String getDatasetId();
    /**
     * <pre>
     * The ID of the dataset this variant set belongs to.
     * </pre>
     *
     * <code>optional string dataset_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getDatasetIdBytes();

    /**
     * <pre>
     * The ID of the reference set that describes the sequences used by the
     * variants in this set.
     * </pre>
     *
     * <code>optional string reference_set_id = 4;</code>
     */
    java.lang.String getReferenceSetId();
    /**
     * <pre>
     * The ID of the reference set that describes the sequences used by the
     * variants in this set.
     * </pre>
     *
     * <code>optional string reference_set_id = 4;</code>
     */
    com.google.protobuf.ByteString
        getReferenceSetIdBytes();

    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    java.util.List<ga4gh.Variants.VariantSetMetadata> 
        getMetadataList();
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    ga4gh.Variants.VariantSetMetadata getMetadata(int index);
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    int getMetadataCount();
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    java.util.List<? extends ga4gh.Variants.VariantSetMetadataOrBuilder> 
        getMetadataOrBuilderList();
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    ga4gh.Variants.VariantSetMetadataOrBuilder getMetadataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A VariantSet is a collection of variants and variant calls intended to be
   * analyzed together.
   * </pre>
   *
   * Protobuf type {@code ga4gh.VariantSet}
   */
  public  static final class VariantSet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.VariantSet)
      VariantSetOrBuilder {
    // Use VariantSet.newBuilder() to construct.
    private VariantSet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VariantSet() {
      id_ = "";
      name_ = "";
      datasetId_ = "";
      referenceSetId_ = "";
      metadata_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VariantSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              datasetId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceSetId_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                metadata_ = new java.util.ArrayList<ga4gh.Variants.VariantSetMetadata>();
                mutable_bitField0_ |= 0x00000010;
              }
              metadata_.add(input.readMessage(ga4gh.Variants.VariantSetMetadata.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          metadata_ = java.util.Collections.unmodifiableList(metadata_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.Variants.internal_static_ga4gh_VariantSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.Variants.internal_static_ga4gh_VariantSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.Variants.VariantSet.class, ga4gh.Variants.VariantSet.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The variant set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The variant set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The variant set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The variant set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATASET_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object datasetId_;
    /**
     * <pre>
     * The ID of the dataset this variant set belongs to.
     * </pre>
     *
     * <code>optional string dataset_id = 3;</code>
     */
    public java.lang.String getDatasetId() {
      java.lang.Object ref = datasetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        datasetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the dataset this variant set belongs to.
     * </pre>
     *
     * <code>optional string dataset_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDatasetIdBytes() {
      java.lang.Object ref = datasetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        datasetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERENCE_SET_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object referenceSetId_;
    /**
     * <pre>
     * The ID of the reference set that describes the sequences used by the
     * variants in this set.
     * </pre>
     *
     * <code>optional string reference_set_id = 4;</code>
     */
    public java.lang.String getReferenceSetId() {
      java.lang.Object ref = referenceSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the reference set that describes the sequences used by the
     * variants in this set.
     * </pre>
     *
     * <code>optional string reference_set_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceSetIdBytes() {
      java.lang.Object ref = referenceSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METADATA_FIELD_NUMBER = 5;
    private java.util.List<ga4gh.Variants.VariantSetMetadata> metadata_;
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    public java.util.List<ga4gh.Variants.VariantSetMetadata> getMetadataList() {
      return metadata_;
    }
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    public java.util.List<? extends ga4gh.Variants.VariantSetMetadataOrBuilder> 
        getMetadataOrBuilderList() {
      return metadata_;
    }
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    public int getMetadataCount() {
      return metadata_.size();
    }
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    public ga4gh.Variants.VariantSetMetadata getMetadata(int index) {
      return metadata_.get(index);
    }
    /**
     * <pre>
     * Optional metadata associated with this variant set.
     * This array can be used to store information about the variant set, such as
     * information found in VCF header fields, that isn't already available in
     * first class fields such as "name".
     * </pre>
     *
     * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
     */
    public ga4gh.Variants.VariantSetMetadataOrBuilder getMetadataOrBuilder(
        int index) {
      return metadata_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      if (!getDatasetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, datasetId_);
      }
      if (!getReferenceSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, referenceSetId_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        output.writeMessage(5, metadata_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      if (!getDatasetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, datasetId_);
      }
      if (!getReferenceSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, referenceSetId_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, metadata_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.Variants.VariantSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.VariantSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.VariantSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.VariantSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.VariantSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.VariantSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.VariantSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.Variants.VariantSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A VariantSet is a collection of variants and variant calls intended to be
     * analyzed together.
     * </pre>
     *
     * Protobuf type {@code ga4gh.VariantSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.VariantSet)
        ga4gh.Variants.VariantSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.Variants.internal_static_ga4gh_VariantSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.Variants.internal_static_ga4gh_VariantSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.Variants.VariantSet.class, ga4gh.Variants.VariantSet.Builder.class);
      }

      // Construct using ga4gh.Variants.VariantSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        datasetId_ = "";

        referenceSetId_ = "";

        if (metadataBuilder_ == null) {
          metadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          metadataBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.Variants.internal_static_ga4gh_VariantSet_descriptor;
      }

      public ga4gh.Variants.VariantSet getDefaultInstanceForType() {
        return ga4gh.Variants.VariantSet.getDefaultInstance();
      }

      public ga4gh.Variants.VariantSet build() {
        ga4gh.Variants.VariantSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.Variants.VariantSet buildPartial() {
        ga4gh.Variants.VariantSet result = new ga4gh.Variants.VariantSet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.name_ = name_;
        result.datasetId_ = datasetId_;
        result.referenceSetId_ = referenceSetId_;
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            metadata_ = java.util.Collections.unmodifiableList(metadata_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.Variants.VariantSet) {
          return mergeFrom((ga4gh.Variants.VariantSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.Variants.VariantSet other) {
        if (other == ga4gh.Variants.VariantSet.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDatasetId().isEmpty()) {
          datasetId_ = other.datasetId_;
          onChanged();
        }
        if (!other.getReferenceSetId().isEmpty()) {
          referenceSetId_ = other.referenceSetId_;
          onChanged();
        }
        if (metadataBuilder_ == null) {
          if (!other.metadata_.isEmpty()) {
            if (metadata_.isEmpty()) {
              metadata_ = other.metadata_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMetadataIsMutable();
              metadata_.addAll(other.metadata_);
            }
            onChanged();
          }
        } else {
          if (!other.metadata_.isEmpty()) {
            if (metadataBuilder_.isEmpty()) {
              metadataBuilder_.dispose();
              metadataBuilder_ = null;
              metadata_ = other.metadata_;
              bitField0_ = (bitField0_ & ~0x00000010);
              metadataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetadataFieldBuilder() : null;
            } else {
              metadataBuilder_.addAllMessages(other.metadata_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.Variants.VariantSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.Variants.VariantSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The variant set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The variant set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The variant set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The variant set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The variant set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The variant set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object datasetId_ = "";
      /**
       * <pre>
       * The ID of the dataset this variant set belongs to.
       * </pre>
       *
       * <code>optional string dataset_id = 3;</code>
       */
      public java.lang.String getDatasetId() {
        java.lang.Object ref = datasetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          datasetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the dataset this variant set belongs to.
       * </pre>
       *
       * <code>optional string dataset_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDatasetIdBytes() {
        java.lang.Object ref = datasetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          datasetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the dataset this variant set belongs to.
       * </pre>
       *
       * <code>optional string dataset_id = 3;</code>
       */
      public Builder setDatasetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        datasetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the dataset this variant set belongs to.
       * </pre>
       *
       * <code>optional string dataset_id = 3;</code>
       */
      public Builder clearDatasetId() {
        
        datasetId_ = getDefaultInstance().getDatasetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the dataset this variant set belongs to.
       * </pre>
       *
       * <code>optional string dataset_id = 3;</code>
       */
      public Builder setDatasetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        datasetId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object referenceSetId_ = "";
      /**
       * <pre>
       * The ID of the reference set that describes the sequences used by the
       * variants in this set.
       * </pre>
       *
       * <code>optional string reference_set_id = 4;</code>
       */
      public java.lang.String getReferenceSetId() {
        java.lang.Object ref = referenceSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the reference set that describes the sequences used by the
       * variants in this set.
       * </pre>
       *
       * <code>optional string reference_set_id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getReferenceSetIdBytes() {
        java.lang.Object ref = referenceSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the reference set that describes the sequences used by the
       * variants in this set.
       * </pre>
       *
       * <code>optional string reference_set_id = 4;</code>
       */
      public Builder setReferenceSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the reference set that describes the sequences used by the
       * variants in this set.
       * </pre>
       *
       * <code>optional string reference_set_id = 4;</code>
       */
      public Builder clearReferenceSetId() {
        
        referenceSetId_ = getDefaultInstance().getReferenceSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the reference set that describes the sequences used by the
       * variants in this set.
       * </pre>
       *
       * <code>optional string reference_set_id = 4;</code>
       */
      public Builder setReferenceSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceSetId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<ga4gh.Variants.VariantSetMetadata> metadata_ =
        java.util.Collections.emptyList();
      private void ensureMetadataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          metadata_ = new java.util.ArrayList<ga4gh.Variants.VariantSetMetadata>(metadata_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Variants.VariantSetMetadata, ga4gh.Variants.VariantSetMetadata.Builder, ga4gh.Variants.VariantSetMetadataOrBuilder> metadataBuilder_;

      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public java.util.List<ga4gh.Variants.VariantSetMetadata> getMetadataList() {
        if (metadataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metadata_);
        } else {
          return metadataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public int getMetadataCount() {
        if (metadataBuilder_ == null) {
          return metadata_.size();
        } else {
          return metadataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public ga4gh.Variants.VariantSetMetadata getMetadata(int index) {
        if (metadataBuilder_ == null) {
          return metadata_.get(index);
        } else {
          return metadataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder setMetadata(
          int index, ga4gh.Variants.VariantSetMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.set(index, value);
          onChanged();
        } else {
          metadataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder setMetadata(
          int index, ga4gh.Variants.VariantSetMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.set(index, builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder addMetadata(ga4gh.Variants.VariantSetMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.add(value);
          onChanged();
        } else {
          metadataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder addMetadata(
          int index, ga4gh.Variants.VariantSetMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.add(index, value);
          onChanged();
        } else {
          metadataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder addMetadata(
          ga4gh.Variants.VariantSetMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.add(builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder addMetadata(
          int index, ga4gh.Variants.VariantSetMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.add(index, builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder addAllMetadata(
          java.lang.Iterable<? extends ga4gh.Variants.VariantSetMetadata> values) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metadata_);
          onChanged();
        } else {
          metadataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public Builder removeMetadata(int index) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.remove(index);
          onChanged();
        } else {
          metadataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public ga4gh.Variants.VariantSetMetadata.Builder getMetadataBuilder(
          int index) {
        return getMetadataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public ga4gh.Variants.VariantSetMetadataOrBuilder getMetadataOrBuilder(
          int index) {
        if (metadataBuilder_ == null) {
          return metadata_.get(index);  } else {
          return metadataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public java.util.List<? extends ga4gh.Variants.VariantSetMetadataOrBuilder> 
           getMetadataOrBuilderList() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metadata_);
        }
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public ga4gh.Variants.VariantSetMetadata.Builder addMetadataBuilder() {
        return getMetadataFieldBuilder().addBuilder(
            ga4gh.Variants.VariantSetMetadata.getDefaultInstance());
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public ga4gh.Variants.VariantSetMetadata.Builder addMetadataBuilder(
          int index) {
        return getMetadataFieldBuilder().addBuilder(
            index, ga4gh.Variants.VariantSetMetadata.getDefaultInstance());
      }
      /**
       * <pre>
       * Optional metadata associated with this variant set.
       * This array can be used to store information about the variant set, such as
       * information found in VCF header fields, that isn't already available in
       * first class fields such as "name".
       * </pre>
       *
       * <code>repeated .ga4gh.VariantSetMetadata metadata = 5;</code>
       */
      public java.util.List<ga4gh.Variants.VariantSetMetadata.Builder> 
           getMetadataBuilderList() {
        return getMetadataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Variants.VariantSetMetadata, ga4gh.Variants.VariantSetMetadata.Builder, ga4gh.Variants.VariantSetMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.Variants.VariantSetMetadata, ga4gh.Variants.VariantSetMetadata.Builder, ga4gh.Variants.VariantSetMetadataOrBuilder>(
                  metadata_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.VariantSet)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.VariantSet)
    private static final ga4gh.Variants.VariantSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.Variants.VariantSet();
    }

    public static ga4gh.Variants.VariantSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VariantSet>
        PARSER = new com.google.protobuf.AbstractParser<VariantSet>() {
      public VariantSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VariantSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VariantSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VariantSet> getParserForType() {
      return PARSER;
    }

    public ga4gh.Variants.VariantSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CallSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.CallSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The call set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * The call set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The call set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The call set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The sample this call set's data was generated from.
     * Note: the current API does not have a rigorous definition of sample.
     * Therefore, this field actually contains an arbitrary string, typically
     * corresponding to the sampleId field in the read groups used to generate
     * this call set.
     * </pre>
     *
     * <code>optional string sample_id = 3;</code>
     */
    java.lang.String getSampleId();
    /**
     * <pre>
     * The sample this call set's data was generated from.
     * Note: the current API does not have a rigorous definition of sample.
     * Therefore, this field actually contains an arbitrary string, typically
     * corresponding to the sampleId field in the read groups used to generate
     * this call set.
     * </pre>
     *
     * <code>optional string sample_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getSampleIdBytes();

    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    com.google.protobuf.ProtocolStringList
        getVariantSetIdsList();
    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    int getVariantSetIdsCount();
    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    java.lang.String getVariantSetIds(int index);
    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    com.google.protobuf.ByteString
        getVariantSetIdsBytes(int index);

    /**
     * <pre>
     * The date this call set was created in milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 created = 5;</code>
     */
    long getCreated();

    /**
     * <pre>
     * The time at which this call set was last updated in
     * milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 updated = 6;</code>
     */
    long getUpdated();

    /**
     * <pre>
     * A map of additional call set information.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ListValue>
    getInfo();
  }
  /**
   * <pre>
   * A CallSet is a collection of calls that were generated by the same analysis
   * of the same sample.
   * </pre>
   *
   * Protobuf type {@code ga4gh.CallSet}
   */
  public  static final class CallSet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.CallSet)
      CallSetOrBuilder {
    // Use CallSet.newBuilder() to construct.
    private CallSet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CallSet() {
      id_ = "";
      name_ = "";
      sampleId_ = "";
      variantSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      created_ = 0L;
      updated_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CallSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              sampleId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                variantSetIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              variantSetIds_.add(s);
              break;
            }
            case 40: {

              created_ = input.readInt64();
              break;
            }
            case 48: {

              updated_ = input.readInt64();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                info_ = com.google.protobuf.MapField.newMapField(
                    InfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
              info = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              info_.getMutableMap().put(info.getKey(), info.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          variantSetIds_ = variantSetIds_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.Variants.internal_static_ga4gh_CallSet_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.Variants.internal_static_ga4gh_CallSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.Variants.CallSet.class, ga4gh.Variants.CallSet.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The call set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The call set ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The call set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The call set name.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SAMPLE_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object sampleId_;
    /**
     * <pre>
     * The sample this call set's data was generated from.
     * Note: the current API does not have a rigorous definition of sample.
     * Therefore, this field actually contains an arbitrary string, typically
     * corresponding to the sampleId field in the read groups used to generate
     * this call set.
     * </pre>
     *
     * <code>optional string sample_id = 3;</code>
     */
    public java.lang.String getSampleId() {
      java.lang.Object ref = sampleId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sampleId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The sample this call set's data was generated from.
     * Note: the current API does not have a rigorous definition of sample.
     * Therefore, this field actually contains an arbitrary string, typically
     * corresponding to the sampleId field in the read groups used to generate
     * this call set.
     * </pre>
     *
     * <code>optional string sample_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSampleIdBytes() {
      java.lang.Object ref = sampleId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sampleId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANT_SET_IDS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList variantSetIds_;
    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getVariantSetIdsList() {
      return variantSetIds_;
    }
    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    public int getVariantSetIdsCount() {
      return variantSetIds_.size();
    }
    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    public java.lang.String getVariantSetIds(int index) {
      return variantSetIds_.get(index);
    }
    /**
     * <pre>
     * The IDs of the variant sets this call set has calls in.
     * </pre>
     *
     * <code>repeated string variant_set_ids = 4;</code>
     */
    public com.google.protobuf.ByteString
        getVariantSetIdsBytes(int index) {
      return variantSetIds_.getByteString(index);
    }

    public static final int CREATED_FIELD_NUMBER = 5;
    private long created_;
    /**
     * <pre>
     * The date this call set was created in milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 created = 5;</code>
     */
    public long getCreated() {
      return created_;
    }

    public static final int UPDATED_FIELD_NUMBER = 6;
    private long updated_;
    /**
     * <pre>
     * The time at which this call set was last updated in
     * milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 updated = 6;</code>
     */
    public long getUpdated() {
      return updated_;
    }

    public static final int INFO_FIELD_NUMBER = 7;
    private static final class InfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ListValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ListValue>newDefaultInstance(
                  ga4gh.Variants.internal_static_ga4gh_CallSet_InfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.ListValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ListValue> info_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
    internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      return info_;
    }
    /**
     * <pre>
     * A map of additional call set information.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
      return internalGetInfo().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      if (!getSampleIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, sampleId_);
      }
      for (int i = 0; i < variantSetIds_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, variantSetIds_.getRaw(i));
      }
      if (created_ != 0L) {
        output.writeInt64(5, created_);
      }
      if (updated_ != 0L) {
        output.writeInt64(6, updated_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(7, info);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      if (!getSampleIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, sampleId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < variantSetIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(variantSetIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getVariantSetIdsList().size();
      }
      if (created_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, created_);
      }
      if (updated_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, updated_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, info);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.Variants.CallSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.CallSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.CallSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.CallSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.CallSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.CallSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.CallSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.CallSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.CallSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.CallSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.Variants.CallSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A CallSet is a collection of calls that were generated by the same analysis
     * of the same sample.
     * </pre>
     *
     * Protobuf type {@code ga4gh.CallSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.CallSet)
        ga4gh.Variants.CallSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.Variants.internal_static_ga4gh_CallSet_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.Variants.internal_static_ga4gh_CallSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.Variants.CallSet.class, ga4gh.Variants.CallSet.Builder.class);
      }

      // Construct using ga4gh.Variants.CallSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        sampleId_ = "";

        variantSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        created_ = 0L;

        updated_ = 0L;

        internalGetMutableInfo().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.Variants.internal_static_ga4gh_CallSet_descriptor;
      }

      public ga4gh.Variants.CallSet getDefaultInstanceForType() {
        return ga4gh.Variants.CallSet.getDefaultInstance();
      }

      public ga4gh.Variants.CallSet build() {
        ga4gh.Variants.CallSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.Variants.CallSet buildPartial() {
        ga4gh.Variants.CallSet result = new ga4gh.Variants.CallSet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.name_ = name_;
        result.sampleId_ = sampleId_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          variantSetIds_ = variantSetIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.variantSetIds_ = variantSetIds_;
        result.created_ = created_;
        result.updated_ = updated_;
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.Variants.CallSet) {
          return mergeFrom((ga4gh.Variants.CallSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.Variants.CallSet other) {
        if (other == ga4gh.Variants.CallSet.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getSampleId().isEmpty()) {
          sampleId_ = other.sampleId_;
          onChanged();
        }
        if (!other.variantSetIds_.isEmpty()) {
          if (variantSetIds_.isEmpty()) {
            variantSetIds_ = other.variantSetIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureVariantSetIdsIsMutable();
            variantSetIds_.addAll(other.variantSetIds_);
          }
          onChanged();
        }
        if (other.getCreated() != 0L) {
          setCreated(other.getCreated());
        }
        if (other.getUpdated() != 0L) {
          setUpdated(other.getUpdated());
        }
        internalGetMutableInfo().mergeFrom(
            other.internalGetInfo());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.Variants.CallSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.Variants.CallSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The call set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The call set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The call set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The call set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The call set ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The call set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The call set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The call set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The call set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The call set name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sampleId_ = "";
      /**
       * <pre>
       * The sample this call set's data was generated from.
       * Note: the current API does not have a rigorous definition of sample.
       * Therefore, this field actually contains an arbitrary string, typically
       * corresponding to the sampleId field in the read groups used to generate
       * this call set.
       * </pre>
       *
       * <code>optional string sample_id = 3;</code>
       */
      public java.lang.String getSampleId() {
        java.lang.Object ref = sampleId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sampleId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The sample this call set's data was generated from.
       * Note: the current API does not have a rigorous definition of sample.
       * Therefore, this field actually contains an arbitrary string, typically
       * corresponding to the sampleId field in the read groups used to generate
       * this call set.
       * </pre>
       *
       * <code>optional string sample_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSampleIdBytes() {
        java.lang.Object ref = sampleId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sampleId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The sample this call set's data was generated from.
       * Note: the current API does not have a rigorous definition of sample.
       * Therefore, this field actually contains an arbitrary string, typically
       * corresponding to the sampleId field in the read groups used to generate
       * this call set.
       * </pre>
       *
       * <code>optional string sample_id = 3;</code>
       */
      public Builder setSampleId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sampleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sample this call set's data was generated from.
       * Note: the current API does not have a rigorous definition of sample.
       * Therefore, this field actually contains an arbitrary string, typically
       * corresponding to the sampleId field in the read groups used to generate
       * this call set.
       * </pre>
       *
       * <code>optional string sample_id = 3;</code>
       */
      public Builder clearSampleId() {
        
        sampleId_ = getDefaultInstance().getSampleId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sample this call set's data was generated from.
       * Note: the current API does not have a rigorous definition of sample.
       * Therefore, this field actually contains an arbitrary string, typically
       * corresponding to the sampleId field in the read groups used to generate
       * this call set.
       * </pre>
       *
       * <code>optional string sample_id = 3;</code>
       */
      public Builder setSampleIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sampleId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList variantSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureVariantSetIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          variantSetIds_ = new com.google.protobuf.LazyStringArrayList(variantSetIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getVariantSetIdsList() {
        return variantSetIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public int getVariantSetIdsCount() {
        return variantSetIds_.size();
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public java.lang.String getVariantSetIds(int index) {
        return variantSetIds_.get(index);
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public com.google.protobuf.ByteString
          getVariantSetIdsBytes(int index) {
        return variantSetIds_.getByteString(index);
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public Builder setVariantSetIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVariantSetIdsIsMutable();
        variantSetIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public Builder addVariantSetIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVariantSetIdsIsMutable();
        variantSetIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public Builder addAllVariantSetIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureVariantSetIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variantSetIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public Builder clearVariantSetIds() {
        variantSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The IDs of the variant sets this call set has calls in.
       * </pre>
       *
       * <code>repeated string variant_set_ids = 4;</code>
       */
      public Builder addVariantSetIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureVariantSetIdsIsMutable();
        variantSetIds_.add(value);
        onChanged();
        return this;
      }

      private long created_ ;
      /**
       * <pre>
       * The date this call set was created in milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 created = 5;</code>
       */
      public long getCreated() {
        return created_;
      }
      /**
       * <pre>
       * The date this call set was created in milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 created = 5;</code>
       */
      public Builder setCreated(long value) {
        
        created_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date this call set was created in milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 created = 5;</code>
       */
      public Builder clearCreated() {
        
        created_ = 0L;
        onChanged();
        return this;
      }

      private long updated_ ;
      /**
       * <pre>
       * The time at which this call set was last updated in
       * milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 updated = 6;</code>
       */
      public long getUpdated() {
        return updated_;
      }
      /**
       * <pre>
       * The time at which this call set was last updated in
       * milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 updated = 6;</code>
       */
      public Builder setUpdated(long value) {
        
        updated_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time at which this call set was last updated in
       * milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 updated = 6;</code>
       */
      public Builder clearUpdated() {
        
        updated_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ListValue> info_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetInfo() {
        if (info_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        return info_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetMutableInfo() {
        onChanged();;
        if (info_ == null) {
          info_ = com.google.protobuf.MapField.newMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        if (!info_.isMutable()) {
          info_ = info_.copy();
        }
        return info_;
      }
      /**
       * <pre>
       * A map of additional call set information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
        return internalGetInfo().getMap();
      }
      /**
       * <pre>
       * A map of additional call set information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue>
      getMutableInfo() {
        return internalGetMutableInfo().getMutableMap();
      }
      /**
       * <pre>
       * A map of additional call set information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 7;</code>
       */
      public Builder putAllInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ListValue> values) {
        getMutableInfo().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.CallSet)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.CallSet)
    private static final ga4gh.Variants.CallSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.Variants.CallSet();
    }

    public static ga4gh.Variants.CallSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CallSet>
        PARSER = new com.google.protobuf.AbstractParser<CallSet>() {
      public CallSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CallSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CallSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CallSet> getParserForType() {
      return PARSER;
    }

    public ga4gh.Variants.CallSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CallOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.Call)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_name = 1;</code>
     */
    java.lang.String getCallSetName();
    /**
     * <pre>
     * The name of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getCallSetNameBytes();

    /**
     * <pre>
     * The ID of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_id = 2;</code>
     */
    java.lang.String getCallSetId();
    /**
     * <pre>
     * The ID of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getCallSetIdBytes();

    /**
     * <pre>
     * The genotype of this variant call.
     * A 0 value represents the reference allele of the associated `Variant`. Any
     * other value is a 1-based index into the alternate alleles of the associated
     * `Variant`.
     * If a variant had a referenceBases field of "T", an alternateBases
     * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
     * represented the heterozygous value "CA" for this variant. If the genotype
     * was instead [0, 1] the represented value would be "TA". Ordering of the
     * genotype values is important if the phaseset field is present.
     * </pre>
     *
     * <code>repeated int32 genotype = 3;</code>
     */
    java.util.List<java.lang.Integer> getGenotypeList();
    /**
     * <pre>
     * The genotype of this variant call.
     * A 0 value represents the reference allele of the associated `Variant`. Any
     * other value is a 1-based index into the alternate alleles of the associated
     * `Variant`.
     * If a variant had a referenceBases field of "T", an alternateBases
     * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
     * represented the heterozygous value "CA" for this variant. If the genotype
     * was instead [0, 1] the represented value would be "TA". Ordering of the
     * genotype values is important if the phaseset field is present.
     * </pre>
     *
     * <code>repeated int32 genotype = 3;</code>
     */
    int getGenotypeCount();
    /**
     * <pre>
     * The genotype of this variant call.
     * A 0 value represents the reference allele of the associated `Variant`. Any
     * other value is a 1-based index into the alternate alleles of the associated
     * `Variant`.
     * If a variant had a referenceBases field of "T", an alternateBases
     * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
     * represented the heterozygous value "CA" for this variant. If the genotype
     * was instead [0, 1] the represented value would be "TA". Ordering of the
     * genotype values is important if the phaseset field is present.
     * </pre>
     *
     * <code>repeated int32 genotype = 3;</code>
     */
    int getGenotype(int index);

    /**
     * <pre>
     * If this field is populated, this variant call's genotype ordering implies
     * the phase of the bases and is consistent with any other variant calls on
     * the same contig which have the same phaseset string.
     * </pre>
     *
     * <code>optional string phaseset = 4;</code>
     */
    java.lang.String getPhaseset();
    /**
     * <pre>
     * If this field is populated, this variant call's genotype ordering implies
     * the phase of the bases and is consistent with any other variant calls on
     * the same contig which have the same phaseset string.
     * </pre>
     *
     * <code>optional string phaseset = 4;</code>
     */
    com.google.protobuf.ByteString
        getPhasesetBytes();

    /**
     * <pre>
     * The genotype likelihoods for this variant call. Each array entry
     * represents how likely a specific genotype is for this call as
     * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
     * value ordering is defined by the GL tag in the VCF spec.
     * </pre>
     *
     * <code>repeated double genotype_likelihood = 5;</code>
     */
    java.util.List<java.lang.Double> getGenotypeLikelihoodList();
    /**
     * <pre>
     * The genotype likelihoods for this variant call. Each array entry
     * represents how likely a specific genotype is for this call as
     * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
     * value ordering is defined by the GL tag in the VCF spec.
     * </pre>
     *
     * <code>repeated double genotype_likelihood = 5;</code>
     */
    int getGenotypeLikelihoodCount();
    /**
     * <pre>
     * The genotype likelihoods for this variant call. Each array entry
     * represents how likely a specific genotype is for this call as
     * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
     * value ordering is defined by the GL tag in the VCF spec.
     * </pre>
     *
     * <code>repeated double genotype_likelihood = 5;</code>
     */
    double getGenotypeLikelihood(int index);

    /**
     * <pre>
     * A map of additional variant call information.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ListValue>
    getInfo();
  }
  /**
   * <pre>
   * A `Call` represents the determination of genotype with respect to a
   * particular `Variant`.
   * It may include associated information such as quality
   * and phasing. For example, a call might assign a probability of 0.32 to
   * the occurrence of a SNP named rs1234 in a call set with the name NA12345.
   * </pre>
   *
   * Protobuf type {@code ga4gh.Call}
   */
  public  static final class Call extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.Call)
      CallOrBuilder {
    // Use Call.newBuilder() to construct.
    private Call(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Call() {
      callSetName_ = "";
      callSetId_ = "";
      genotype_ = java.util.Collections.emptyList();
      phaseset_ = "";
      genotypeLikelihood_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Call(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              callSetName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              callSetId_ = s;
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                genotype_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              genotype_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                genotype_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                genotype_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              phaseset_ = s;
              break;
            }
            case 41: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                genotypeLikelihood_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000010;
              }
              genotypeLikelihood_.add(input.readDouble());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                genotypeLikelihood_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                genotypeLikelihood_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                info_ = com.google.protobuf.MapField.newMapField(
                    InfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
              info = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              info_.getMutableMap().put(info.getKey(), info.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          genotype_ = java.util.Collections.unmodifiableList(genotype_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          genotypeLikelihood_ = java.util.Collections.unmodifiableList(genotypeLikelihood_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.Variants.internal_static_ga4gh_Call_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.Variants.internal_static_ga4gh_Call_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.Variants.Call.class, ga4gh.Variants.Call.Builder.class);
    }

    private int bitField0_;
    public static final int CALL_SET_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object callSetName_;
    /**
     * <pre>
     * The name of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_name = 1;</code>
     */
    public java.lang.String getCallSetName() {
      java.lang.Object ref = callSetName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        callSetName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCallSetNameBytes() {
      java.lang.Object ref = callSetName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callSetName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CALL_SET_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object callSetId_;
    /**
     * <pre>
     * The ID of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_id = 2;</code>
     */
    public java.lang.String getCallSetId() {
      java.lang.Object ref = callSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        callSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the call set this variant call belongs to.
     * If this field is not present, the ordering of the call sets from a
     * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
     * the ordering of the calls on this `Variant`.
     * The number of results will also be the same.
     * </pre>
     *
     * <code>optional string call_set_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCallSetIdBytes() {
      java.lang.Object ref = callSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GENOTYPE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> genotype_;
    /**
     * <pre>
     * The genotype of this variant call.
     * A 0 value represents the reference allele of the associated `Variant`. Any
     * other value is a 1-based index into the alternate alleles of the associated
     * `Variant`.
     * If a variant had a referenceBases field of "T", an alternateBases
     * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
     * represented the heterozygous value "CA" for this variant. If the genotype
     * was instead [0, 1] the represented value would be "TA". Ordering of the
     * genotype values is important if the phaseset field is present.
     * </pre>
     *
     * <code>repeated int32 genotype = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getGenotypeList() {
      return genotype_;
    }
    /**
     * <pre>
     * The genotype of this variant call.
     * A 0 value represents the reference allele of the associated `Variant`. Any
     * other value is a 1-based index into the alternate alleles of the associated
     * `Variant`.
     * If a variant had a referenceBases field of "T", an alternateBases
     * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
     * represented the heterozygous value "CA" for this variant. If the genotype
     * was instead [0, 1] the represented value would be "TA". Ordering of the
     * genotype values is important if the phaseset field is present.
     * </pre>
     *
     * <code>repeated int32 genotype = 3;</code>
     */
    public int getGenotypeCount() {
      return genotype_.size();
    }
    /**
     * <pre>
     * The genotype of this variant call.
     * A 0 value represents the reference allele of the associated `Variant`. Any
     * other value is a 1-based index into the alternate alleles of the associated
     * `Variant`.
     * If a variant had a referenceBases field of "T", an alternateBases
     * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
     * represented the heterozygous value "CA" for this variant. If the genotype
     * was instead [0, 1] the represented value would be "TA". Ordering of the
     * genotype values is important if the phaseset field is present.
     * </pre>
     *
     * <code>repeated int32 genotype = 3;</code>
     */
    public int getGenotype(int index) {
      return genotype_.get(index);
    }
    private int genotypeMemoizedSerializedSize = -1;

    public static final int PHASESET_FIELD_NUMBER = 4;
    private volatile java.lang.Object phaseset_;
    /**
     * <pre>
     * If this field is populated, this variant call's genotype ordering implies
     * the phase of the bases and is consistent with any other variant calls on
     * the same contig which have the same phaseset string.
     * </pre>
     *
     * <code>optional string phaseset = 4;</code>
     */
    public java.lang.String getPhaseset() {
      java.lang.Object ref = phaseset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        phaseset_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this field is populated, this variant call's genotype ordering implies
     * the phase of the bases and is consistent with any other variant calls on
     * the same contig which have the same phaseset string.
     * </pre>
     *
     * <code>optional string phaseset = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPhasesetBytes() {
      java.lang.Object ref = phaseset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        phaseset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GENOTYPE_LIKELIHOOD_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Double> genotypeLikelihood_;
    /**
     * <pre>
     * The genotype likelihoods for this variant call. Each array entry
     * represents how likely a specific genotype is for this call as
     * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
     * value ordering is defined by the GL tag in the VCF spec.
     * </pre>
     *
     * <code>repeated double genotype_likelihood = 5;</code>
     */
    public java.util.List<java.lang.Double>
        getGenotypeLikelihoodList() {
      return genotypeLikelihood_;
    }
    /**
     * <pre>
     * The genotype likelihoods for this variant call. Each array entry
     * represents how likely a specific genotype is for this call as
     * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
     * value ordering is defined by the GL tag in the VCF spec.
     * </pre>
     *
     * <code>repeated double genotype_likelihood = 5;</code>
     */
    public int getGenotypeLikelihoodCount() {
      return genotypeLikelihood_.size();
    }
    /**
     * <pre>
     * The genotype likelihoods for this variant call. Each array entry
     * represents how likely a specific genotype is for this call as
     * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
     * value ordering is defined by the GL tag in the VCF spec.
     * </pre>
     *
     * <code>repeated double genotype_likelihood = 5;</code>
     */
    public double getGenotypeLikelihood(int index) {
      return genotypeLikelihood_.get(index);
    }
    private int genotypeLikelihoodMemoizedSerializedSize = -1;

    public static final int INFO_FIELD_NUMBER = 6;
    private static final class InfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ListValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ListValue>newDefaultInstance(
                  ga4gh.Variants.internal_static_ga4gh_Call_InfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.ListValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ListValue> info_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
    internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      return info_;
    }
    /**
     * <pre>
     * A map of additional variant call information.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
      return internalGetInfo().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getCallSetNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, callSetName_);
      }
      if (!getCallSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, callSetId_);
      }
      if (getGenotypeList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(genotypeMemoizedSerializedSize);
      }
      for (int i = 0; i < genotype_.size(); i++) {
        output.writeInt32NoTag(genotype_.get(i));
      }
      if (!getPhasesetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, phaseset_);
      }
      if (getGenotypeLikelihoodList().size() > 0) {
        output.writeRawVarint32(42);
        output.writeRawVarint32(genotypeLikelihoodMemoizedSerializedSize);
      }
      for (int i = 0; i < genotypeLikelihood_.size(); i++) {
        output.writeDoubleNoTag(genotypeLikelihood_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(6, info);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCallSetNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, callSetName_);
      }
      if (!getCallSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, callSetId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < genotype_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(genotype_.get(i));
        }
        size += dataSize;
        if (!getGenotypeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        genotypeMemoizedSerializedSize = dataSize;
      }
      if (!getPhasesetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, phaseset_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getGenotypeLikelihoodList().size();
        size += dataSize;
        if (!getGenotypeLikelihoodList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        genotypeLikelihoodMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, info);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.Variants.Call parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.Call parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.Call parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.Call parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.Call parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.Call parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.Call parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.Call parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.Call parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.Call parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.Variants.Call prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A `Call` represents the determination of genotype with respect to a
     * particular `Variant`.
     * It may include associated information such as quality
     * and phasing. For example, a call might assign a probability of 0.32 to
     * the occurrence of a SNP named rs1234 in a call set with the name NA12345.
     * </pre>
     *
     * Protobuf type {@code ga4gh.Call}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.Call)
        ga4gh.Variants.CallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.Variants.internal_static_ga4gh_Call_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.Variants.internal_static_ga4gh_Call_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.Variants.Call.class, ga4gh.Variants.Call.Builder.class);
      }

      // Construct using ga4gh.Variants.Call.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        callSetName_ = "";

        callSetId_ = "";

        genotype_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        phaseset_ = "";

        genotypeLikelihood_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        internalGetMutableInfo().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.Variants.internal_static_ga4gh_Call_descriptor;
      }

      public ga4gh.Variants.Call getDefaultInstanceForType() {
        return ga4gh.Variants.Call.getDefaultInstance();
      }

      public ga4gh.Variants.Call build() {
        ga4gh.Variants.Call result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.Variants.Call buildPartial() {
        ga4gh.Variants.Call result = new ga4gh.Variants.Call(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.callSetName_ = callSetName_;
        result.callSetId_ = callSetId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          genotype_ = java.util.Collections.unmodifiableList(genotype_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.genotype_ = genotype_;
        result.phaseset_ = phaseset_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          genotypeLikelihood_ = java.util.Collections.unmodifiableList(genotypeLikelihood_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.genotypeLikelihood_ = genotypeLikelihood_;
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.Variants.Call) {
          return mergeFrom((ga4gh.Variants.Call)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.Variants.Call other) {
        if (other == ga4gh.Variants.Call.getDefaultInstance()) return this;
        if (!other.getCallSetName().isEmpty()) {
          callSetName_ = other.callSetName_;
          onChanged();
        }
        if (!other.getCallSetId().isEmpty()) {
          callSetId_ = other.callSetId_;
          onChanged();
        }
        if (!other.genotype_.isEmpty()) {
          if (genotype_.isEmpty()) {
            genotype_ = other.genotype_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureGenotypeIsMutable();
            genotype_.addAll(other.genotype_);
          }
          onChanged();
        }
        if (!other.getPhaseset().isEmpty()) {
          phaseset_ = other.phaseset_;
          onChanged();
        }
        if (!other.genotypeLikelihood_.isEmpty()) {
          if (genotypeLikelihood_.isEmpty()) {
            genotypeLikelihood_ = other.genotypeLikelihood_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGenotypeLikelihoodIsMutable();
            genotypeLikelihood_.addAll(other.genotypeLikelihood_);
          }
          onChanged();
        }
        internalGetMutableInfo().mergeFrom(
            other.internalGetInfo());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.Variants.Call parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.Variants.Call) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object callSetName_ = "";
      /**
       * <pre>
       * The name of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_name = 1;</code>
       */
      public java.lang.String getCallSetName() {
        java.lang.Object ref = callSetName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          callSetName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCallSetNameBytes() {
        java.lang.Object ref = callSetName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callSetName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_name = 1;</code>
       */
      public Builder setCallSetName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        callSetName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_name = 1;</code>
       */
      public Builder clearCallSetName() {
        
        callSetName_ = getDefaultInstance().getCallSetName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_name = 1;</code>
       */
      public Builder setCallSetNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        callSetName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object callSetId_ = "";
      /**
       * <pre>
       * The ID of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_id = 2;</code>
       */
      public java.lang.String getCallSetId() {
        java.lang.Object ref = callSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          callSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCallSetIdBytes() {
        java.lang.Object ref = callSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_id = 2;</code>
       */
      public Builder setCallSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        callSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_id = 2;</code>
       */
      public Builder clearCallSetId() {
        
        callSetId_ = getDefaultInstance().getCallSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the call set this variant call belongs to.
       * If this field is not present, the ordering of the call sets from a
       * `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
       * the ordering of the calls on this `Variant`.
       * The number of results will also be the same.
       * </pre>
       *
       * <code>optional string call_set_id = 2;</code>
       */
      public Builder setCallSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        callSetId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> genotype_ = java.util.Collections.emptyList();
      private void ensureGenotypeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          genotype_ = new java.util.ArrayList<java.lang.Integer>(genotype_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * The genotype of this variant call.
       * A 0 value represents the reference allele of the associated `Variant`. Any
       * other value is a 1-based index into the alternate alleles of the associated
       * `Variant`.
       * If a variant had a referenceBases field of "T", an alternateBases
       * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
       * represented the heterozygous value "CA" for this variant. If the genotype
       * was instead [0, 1] the represented value would be "TA". Ordering of the
       * genotype values is important if the phaseset field is present.
       * </pre>
       *
       * <code>repeated int32 genotype = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getGenotypeList() {
        return java.util.Collections.unmodifiableList(genotype_);
      }
      /**
       * <pre>
       * The genotype of this variant call.
       * A 0 value represents the reference allele of the associated `Variant`. Any
       * other value is a 1-based index into the alternate alleles of the associated
       * `Variant`.
       * If a variant had a referenceBases field of "T", an alternateBases
       * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
       * represented the heterozygous value "CA" for this variant. If the genotype
       * was instead [0, 1] the represented value would be "TA". Ordering of the
       * genotype values is important if the phaseset field is present.
       * </pre>
       *
       * <code>repeated int32 genotype = 3;</code>
       */
      public int getGenotypeCount() {
        return genotype_.size();
      }
      /**
       * <pre>
       * The genotype of this variant call.
       * A 0 value represents the reference allele of the associated `Variant`. Any
       * other value is a 1-based index into the alternate alleles of the associated
       * `Variant`.
       * If a variant had a referenceBases field of "T", an alternateBases
       * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
       * represented the heterozygous value "CA" for this variant. If the genotype
       * was instead [0, 1] the represented value would be "TA". Ordering of the
       * genotype values is important if the phaseset field is present.
       * </pre>
       *
       * <code>repeated int32 genotype = 3;</code>
       */
      public int getGenotype(int index) {
        return genotype_.get(index);
      }
      /**
       * <pre>
       * The genotype of this variant call.
       * A 0 value represents the reference allele of the associated `Variant`. Any
       * other value is a 1-based index into the alternate alleles of the associated
       * `Variant`.
       * If a variant had a referenceBases field of "T", an alternateBases
       * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
       * represented the heterozygous value "CA" for this variant. If the genotype
       * was instead [0, 1] the represented value would be "TA". Ordering of the
       * genotype values is important if the phaseset field is present.
       * </pre>
       *
       * <code>repeated int32 genotype = 3;</code>
       */
      public Builder setGenotype(
          int index, int value) {
        ensureGenotypeIsMutable();
        genotype_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The genotype of this variant call.
       * A 0 value represents the reference allele of the associated `Variant`. Any
       * other value is a 1-based index into the alternate alleles of the associated
       * `Variant`.
       * If a variant had a referenceBases field of "T", an alternateBases
       * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
       * represented the heterozygous value "CA" for this variant. If the genotype
       * was instead [0, 1] the represented value would be "TA". Ordering of the
       * genotype values is important if the phaseset field is present.
       * </pre>
       *
       * <code>repeated int32 genotype = 3;</code>
       */
      public Builder addGenotype(int value) {
        ensureGenotypeIsMutable();
        genotype_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The genotype of this variant call.
       * A 0 value represents the reference allele of the associated `Variant`. Any
       * other value is a 1-based index into the alternate alleles of the associated
       * `Variant`.
       * If a variant had a referenceBases field of "T", an alternateBases
       * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
       * represented the heterozygous value "CA" for this variant. If the genotype
       * was instead [0, 1] the represented value would be "TA". Ordering of the
       * genotype values is important if the phaseset field is present.
       * </pre>
       *
       * <code>repeated int32 genotype = 3;</code>
       */
      public Builder addAllGenotype(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGenotypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, genotype_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The genotype of this variant call.
       * A 0 value represents the reference allele of the associated `Variant`. Any
       * other value is a 1-based index into the alternate alleles of the associated
       * `Variant`.
       * If a variant had a referenceBases field of "T", an alternateBases
       * value of ["A", "C"], and the genotype was [2, 1], that would mean the call
       * represented the heterozygous value "CA" for this variant. If the genotype
       * was instead [0, 1] the represented value would be "TA". Ordering of the
       * genotype values is important if the phaseset field is present.
       * </pre>
       *
       * <code>repeated int32 genotype = 3;</code>
       */
      public Builder clearGenotype() {
        genotype_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.lang.Object phaseset_ = "";
      /**
       * <pre>
       * If this field is populated, this variant call's genotype ordering implies
       * the phase of the bases and is consistent with any other variant calls on
       * the same contig which have the same phaseset string.
       * </pre>
       *
       * <code>optional string phaseset = 4;</code>
       */
      public java.lang.String getPhaseset() {
        java.lang.Object ref = phaseset_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          phaseset_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this field is populated, this variant call's genotype ordering implies
       * the phase of the bases and is consistent with any other variant calls on
       * the same contig which have the same phaseset string.
       * </pre>
       *
       * <code>optional string phaseset = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPhasesetBytes() {
        java.lang.Object ref = phaseset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          phaseset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this field is populated, this variant call's genotype ordering implies
       * the phase of the bases and is consistent with any other variant calls on
       * the same contig which have the same phaseset string.
       * </pre>
       *
       * <code>optional string phaseset = 4;</code>
       */
      public Builder setPhaseset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        phaseset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this field is populated, this variant call's genotype ordering implies
       * the phase of the bases and is consistent with any other variant calls on
       * the same contig which have the same phaseset string.
       * </pre>
       *
       * <code>optional string phaseset = 4;</code>
       */
      public Builder clearPhaseset() {
        
        phaseset_ = getDefaultInstance().getPhaseset();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this field is populated, this variant call's genotype ordering implies
       * the phase of the bases and is consistent with any other variant calls on
       * the same contig which have the same phaseset string.
       * </pre>
       *
       * <code>optional string phaseset = 4;</code>
       */
      public Builder setPhasesetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        phaseset_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> genotypeLikelihood_ = java.util.Collections.emptyList();
      private void ensureGenotypeLikelihoodIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          genotypeLikelihood_ = new java.util.ArrayList<java.lang.Double>(genotypeLikelihood_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * The genotype likelihoods for this variant call. Each array entry
       * represents how likely a specific genotype is for this call as
       * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
       * value ordering is defined by the GL tag in the VCF spec.
       * </pre>
       *
       * <code>repeated double genotype_likelihood = 5;</code>
       */
      public java.util.List<java.lang.Double>
          getGenotypeLikelihoodList() {
        return java.util.Collections.unmodifiableList(genotypeLikelihood_);
      }
      /**
       * <pre>
       * The genotype likelihoods for this variant call. Each array entry
       * represents how likely a specific genotype is for this call as
       * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
       * value ordering is defined by the GL tag in the VCF spec.
       * </pre>
       *
       * <code>repeated double genotype_likelihood = 5;</code>
       */
      public int getGenotypeLikelihoodCount() {
        return genotypeLikelihood_.size();
      }
      /**
       * <pre>
       * The genotype likelihoods for this variant call. Each array entry
       * represents how likely a specific genotype is for this call as
       * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
       * value ordering is defined by the GL tag in the VCF spec.
       * </pre>
       *
       * <code>repeated double genotype_likelihood = 5;</code>
       */
      public double getGenotypeLikelihood(int index) {
        return genotypeLikelihood_.get(index);
      }
      /**
       * <pre>
       * The genotype likelihoods for this variant call. Each array entry
       * represents how likely a specific genotype is for this call as
       * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
       * value ordering is defined by the GL tag in the VCF spec.
       * </pre>
       *
       * <code>repeated double genotype_likelihood = 5;</code>
       */
      public Builder setGenotypeLikelihood(
          int index, double value) {
        ensureGenotypeLikelihoodIsMutable();
        genotypeLikelihood_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The genotype likelihoods for this variant call. Each array entry
       * represents how likely a specific genotype is for this call as
       * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
       * value ordering is defined by the GL tag in the VCF spec.
       * </pre>
       *
       * <code>repeated double genotype_likelihood = 5;</code>
       */
      public Builder addGenotypeLikelihood(double value) {
        ensureGenotypeLikelihoodIsMutable();
        genotypeLikelihood_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The genotype likelihoods for this variant call. Each array entry
       * represents how likely a specific genotype is for this call as
       * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
       * value ordering is defined by the GL tag in the VCF spec.
       * </pre>
       *
       * <code>repeated double genotype_likelihood = 5;</code>
       */
      public Builder addAllGenotypeLikelihood(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureGenotypeLikelihoodIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, genotypeLikelihood_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The genotype likelihoods for this variant call. Each array entry
       * represents how likely a specific genotype is for this call as
       * log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
       * value ordering is defined by the GL tag in the VCF spec.
       * </pre>
       *
       * <code>repeated double genotype_likelihood = 5;</code>
       */
      public Builder clearGenotypeLikelihood() {
        genotypeLikelihood_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ListValue> info_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetInfo() {
        if (info_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        return info_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetMutableInfo() {
        onChanged();;
        if (info_ == null) {
          info_ = com.google.protobuf.MapField.newMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        if (!info_.isMutable()) {
          info_ = info_.copy();
        }
        return info_;
      }
      /**
       * <pre>
       * A map of additional variant call information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
        return internalGetInfo().getMap();
      }
      /**
       * <pre>
       * A map of additional variant call information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue>
      getMutableInfo() {
        return internalGetMutableInfo().getMutableMap();
      }
      /**
       * <pre>
       * A map of additional variant call information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 6;</code>
       */
      public Builder putAllInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ListValue> values) {
        getMutableInfo().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.Call)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.Call)
    private static final ga4gh.Variants.Call DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.Variants.Call();
    }

    public static ga4gh.Variants.Call getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Call>
        PARSER = new com.google.protobuf.AbstractParser<Call>() {
      public Call parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Call(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Call> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Call> getParserForType() {
      return PARSER;
    }

    public ga4gh.Variants.Call getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VariantOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ga4gh.Variant)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The ID of the `VariantSet` this variant belongs to. This transitively
     * defines
     * the `ReferenceSet` against which the `Variant` is to be interpreted.
     * </pre>
     *
     * <code>optional string variant_set_id = 2;</code>
     */
    java.lang.String getVariantSetId();
    /**
     * <pre>
     * The ID of the `VariantSet` this variant belongs to. This transitively
     * defines
     * the `ReferenceSet` against which the `Variant` is to be interpreted.
     * </pre>
     *
     * <code>optional string variant_set_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getVariantSetIdBytes();

    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    com.google.protobuf.ProtocolStringList
        getNamesList();
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    int getNamesCount();
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    java.lang.String getNames(int index);
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    com.google.protobuf.ByteString
        getNamesBytes(int index);

    /**
     * <pre>
     * The date this variant was created in milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 created = 4;</code>
     */
    long getCreated();

    /**
     * <pre>
     * The time at which this variant was last updated in
     * milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 updated = 5;</code>
     */
    long getUpdated();

    /**
     * <pre>
     * The reference on which this variant occurs.
     * (e.g. `chr20` or `X`)
     * </pre>
     *
     * <code>optional string reference_name = 6;</code>
     */
    java.lang.String getReferenceName();
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (e.g. `chr20` or `X`)
     * </pre>
     *
     * <code>optional string reference_name = 6;</code>
     */
    com.google.protobuf.ByteString
        getReferenceNameBytes();

    /**
     * <pre>
     * The start position at which this variant occurs (0-based).
     * This corresponds to the first base of the string of reference bases.
     * Genomic positions are non-negative integers less than reference length.
     * Variants spanning the join of circular genomes are represented as
     * two variants one on each side of the join (position 0).
     * </pre>
     *
     * <code>optional int64 start = 7;</code>
     */
    long getStart();

    /**
     * <pre>
     * The end position (exclusive), resulting in [start, end) closed-open
     * interval.
     * This is typically calculated by `start + referenceBases.length`.
     * </pre>
     *
     * <code>optional int64 end = 8;</code>
     */
    long getEnd();

    /**
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position.
     * </pre>
     *
     * <code>optional string reference_bases = 9;</code>
     */
    java.lang.String getReferenceBases();
    /**
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position.
     * </pre>
     *
     * <code>optional string reference_bases = 9;</code>
     */
    com.google.protobuf.ByteString
        getReferenceBasesBytes();

    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    com.google.protobuf.ProtocolStringList
        getAlternateBasesList();
    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    int getAlternateBasesCount();
    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    java.lang.String getAlternateBases(int index);
    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    com.google.protobuf.ByteString
        getAlternateBasesBytes(int index);

    /**
     * <pre>
     * A map of additional variant information.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 11;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ListValue>
    getInfo();

    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    java.util.List<ga4gh.Variants.Call> 
        getCallsList();
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    ga4gh.Variants.Call getCalls(int index);
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    int getCallsCount();
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    java.util.List<? extends ga4gh.Variants.CallOrBuilder> 
        getCallsOrBuilderList();
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    ga4gh.Variants.CallOrBuilder getCallsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A `Variant` represents a change in DNA sequence relative to some reference.
   * For example, a variant could represent a SNP or an insertion.
   * Variants belong to a `VariantSet`.
   * This is equivalent to a row in VCF.
   * </pre>
   *
   * Protobuf type {@code ga4gh.Variant}
   */
  public  static final class Variant extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ga4gh.Variant)
      VariantOrBuilder {
    // Use Variant.newBuilder() to construct.
    private Variant(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Variant() {
      id_ = "";
      variantSetId_ = "";
      names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      created_ = 0L;
      updated_ = 0L;
      referenceName_ = "";
      start_ = 0L;
      end_ = 0L;
      referenceBases_ = "";
      alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      calls_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Variant(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              variantSetId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                names_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              names_.add(s);
              break;
            }
            case 32: {

              created_ = input.readInt64();
              break;
            }
            case 40: {

              updated_ = input.readInt64();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceName_ = s;
              break;
            }
            case 56: {

              start_ = input.readInt64();
              break;
            }
            case 64: {

              end_ = input.readInt64();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceBases_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                alternateBases_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000200;
              }
              alternateBases_.add(s);
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                info_ = com.google.protobuf.MapField.newMapField(
                    InfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
              info = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              info_.getMutableMap().put(info.getKey(), info.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                calls_ = new java.util.ArrayList<ga4gh.Variants.Call>();
                mutable_bitField0_ |= 0x00000800;
              }
              calls_.add(input.readMessage(ga4gh.Variants.Call.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          names_ = names_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          alternateBases_ = alternateBases_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          calls_ = java.util.Collections.unmodifiableList(calls_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ga4gh.Variants.internal_static_ga4gh_Variant_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ga4gh.Variants.internal_static_ga4gh_Variant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ga4gh.Variants.Variant.class, ga4gh.Variants.Variant.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The variant ID.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANT_SET_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object variantSetId_;
    /**
     * <pre>
     * The ID of the `VariantSet` this variant belongs to. This transitively
     * defines
     * the `ReferenceSet` against which the `Variant` is to be interpreted.
     * </pre>
     *
     * <code>optional string variant_set_id = 2;</code>
     */
    public java.lang.String getVariantSetId() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantSetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the `VariantSet` this variant belongs to. This transitively
     * defines
     * the `ReferenceSet` against which the `Variant` is to be interpreted.
     * </pre>
     *
     * <code>optional string variant_set_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVariantSetIdBytes() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList names_;
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getNamesList() {
      return names_;
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    public int getNamesCount() {
      return names_.size();
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    public java.lang.String getNames(int index) {
      return names_.get(index);
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNamesBytes(int index) {
      return names_.getByteString(index);
    }

    public static final int CREATED_FIELD_NUMBER = 4;
    private long created_;
    /**
     * <pre>
     * The date this variant was created in milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 created = 4;</code>
     */
    public long getCreated() {
      return created_;
    }

    public static final int UPDATED_FIELD_NUMBER = 5;
    private long updated_;
    /**
     * <pre>
     * The time at which this variant was last updated in
     * milliseconds from the epoch.
     * </pre>
     *
     * <code>optional int64 updated = 5;</code>
     */
    public long getUpdated() {
      return updated_;
    }

    public static final int REFERENCE_NAME_FIELD_NUMBER = 6;
    private volatile java.lang.Object referenceName_;
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (e.g. `chr20` or `X`)
     * </pre>
     *
     * <code>optional string reference_name = 6;</code>
     */
    public java.lang.String getReferenceName() {
      java.lang.Object ref = referenceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (e.g. `chr20` or `X`)
     * </pre>
     *
     * <code>optional string reference_name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceNameBytes() {
      java.lang.Object ref = referenceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_FIELD_NUMBER = 7;
    private long start_;
    /**
     * <pre>
     * The start position at which this variant occurs (0-based).
     * This corresponds to the first base of the string of reference bases.
     * Genomic positions are non-negative integers less than reference length.
     * Variants spanning the join of circular genomes are represented as
     * two variants one on each side of the join (position 0).
     * </pre>
     *
     * <code>optional int64 start = 7;</code>
     */
    public long getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 8;
    private long end_;
    /**
     * <pre>
     * The end position (exclusive), resulting in [start, end) closed-open
     * interval.
     * This is typically calculated by `start + referenceBases.length`.
     * </pre>
     *
     * <code>optional int64 end = 8;</code>
     */
    public long getEnd() {
      return end_;
    }

    public static final int REFERENCE_BASES_FIELD_NUMBER = 9;
    private volatile java.lang.Object referenceBases_;
    /**
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position.
     * </pre>
     *
     * <code>optional string reference_bases = 9;</code>
     */
    public java.lang.String getReferenceBases() {
      java.lang.Object ref = referenceBases_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceBases_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position.
     * </pre>
     *
     * <code>optional string reference_bases = 9;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceBasesBytes() {
      java.lang.Object ref = referenceBases_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceBases_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALTERNATE_BASES_FIELD_NUMBER = 10;
    private com.google.protobuf.LazyStringList alternateBases_;
    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getAlternateBasesList() {
      return alternateBases_;
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    public int getAlternateBasesCount() {
      return alternateBases_.size();
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    public java.lang.String getAlternateBases(int index) {
      return alternateBases_.get(index);
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases. Multiple alternate
     * alleles are possible.
     * </pre>
     *
     * <code>repeated string alternate_bases = 10;</code>
     */
    public com.google.protobuf.ByteString
        getAlternateBasesBytes(int index) {
      return alternateBases_.getByteString(index);
    }

    public static final int INFO_FIELD_NUMBER = 11;
    private static final class InfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ListValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ListValue>newDefaultInstance(
                  ga4gh.Variants.internal_static_ga4gh_Variant_InfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.ListValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ListValue> info_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
    internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      return info_;
    }
    /**
     * <pre>
     * A map of additional variant information.
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 11;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
      return internalGetInfo().getMap();
    }

    public static final int CALLS_FIELD_NUMBER = 12;
    private java.util.List<ga4gh.Variants.Call> calls_;
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    public java.util.List<ga4gh.Variants.Call> getCallsList() {
      return calls_;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    public java.util.List<? extends ga4gh.Variants.CallOrBuilder> 
        getCallsOrBuilderList() {
      return calls_;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    public int getCallsCount() {
      return calls_.size();
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    public ga4gh.Variants.Call getCalls(int index) {
      return calls_.get(index);
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant. `Call`s in this
     * array are implicitly associated with this `Variant`.
     * </pre>
     *
     * <code>repeated .ga4gh.Call calls = 12;</code>
     */
    public ga4gh.Variants.CallOrBuilder getCallsOrBuilder(
        int index) {
      return calls_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!getVariantSetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, variantSetId_);
      }
      for (int i = 0; i < names_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, names_.getRaw(i));
      }
      if (created_ != 0L) {
        output.writeInt64(4, created_);
      }
      if (updated_ != 0L) {
        output.writeInt64(5, updated_);
      }
      if (!getReferenceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, referenceName_);
      }
      if (start_ != 0L) {
        output.writeInt64(7, start_);
      }
      if (end_ != 0L) {
        output.writeInt64(8, end_);
      }
      if (!getReferenceBasesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 9, referenceBases_);
      }
      for (int i = 0; i < alternateBases_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 10, alternateBases_.getRaw(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(11, info);
      }
      for (int i = 0; i < calls_.size(); i++) {
        output.writeMessage(12, calls_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!getVariantSetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, variantSetId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < names_.size(); i++) {
          dataSize += computeStringSizeNoTag(names_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getNamesList().size();
      }
      if (created_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, created_);
      }
      if (updated_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, updated_);
      }
      if (!getReferenceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, referenceName_);
      }
      if (start_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, start_);
      }
      if (end_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, end_);
      }
      if (!getReferenceBasesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(9, referenceBases_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < alternateBases_.size(); i++) {
          dataSize += computeStringSizeNoTag(alternateBases_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAlternateBasesList().size();
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, info);
      }
      for (int i = 0; i < calls_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, calls_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static ga4gh.Variants.Variant parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.Variant parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.Variant parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ga4gh.Variants.Variant parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ga4gh.Variants.Variant parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.Variant parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.Variant parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.Variant parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ga4gh.Variants.Variant parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ga4gh.Variants.Variant parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ga4gh.Variants.Variant prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A `Variant` represents a change in DNA sequence relative to some reference.
     * For example, a variant could represent a SNP or an insertion.
     * Variants belong to a `VariantSet`.
     * This is equivalent to a row in VCF.
     * </pre>
     *
     * Protobuf type {@code ga4gh.Variant}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ga4gh.Variant)
        ga4gh.Variants.VariantOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ga4gh.Variants.internal_static_ga4gh_Variant_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMutableInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ga4gh.Variants.internal_static_ga4gh_Variant_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ga4gh.Variants.Variant.class, ga4gh.Variants.Variant.Builder.class);
      }

      // Construct using ga4gh.Variants.Variant.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCallsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        variantSetId_ = "";

        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        created_ = 0L;

        updated_ = 0L;

        referenceName_ = "";

        start_ = 0L;

        end_ = 0L;

        referenceBases_ = "";

        alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        internalGetMutableInfo().clear();
        if (callsBuilder_ == null) {
          calls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          callsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ga4gh.Variants.internal_static_ga4gh_Variant_descriptor;
      }

      public ga4gh.Variants.Variant getDefaultInstanceForType() {
        return ga4gh.Variants.Variant.getDefaultInstance();
      }

      public ga4gh.Variants.Variant build() {
        ga4gh.Variants.Variant result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ga4gh.Variants.Variant buildPartial() {
        ga4gh.Variants.Variant result = new ga4gh.Variants.Variant(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.variantSetId_ = variantSetId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          names_ = names_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.names_ = names_;
        result.created_ = created_;
        result.updated_ = updated_;
        result.referenceName_ = referenceName_;
        result.start_ = start_;
        result.end_ = end_;
        result.referenceBases_ = referenceBases_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          alternateBases_ = alternateBases_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.alternateBases_ = alternateBases_;
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
        if (callsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            calls_ = java.util.Collections.unmodifiableList(calls_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.calls_ = calls_;
        } else {
          result.calls_ = callsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ga4gh.Variants.Variant) {
          return mergeFrom((ga4gh.Variants.Variant)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ga4gh.Variants.Variant other) {
        if (other == ga4gh.Variants.Variant.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getVariantSetId().isEmpty()) {
          variantSetId_ = other.variantSetId_;
          onChanged();
        }
        if (!other.names_.isEmpty()) {
          if (names_.isEmpty()) {
            names_ = other.names_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNamesIsMutable();
            names_.addAll(other.names_);
          }
          onChanged();
        }
        if (other.getCreated() != 0L) {
          setCreated(other.getCreated());
        }
        if (other.getUpdated() != 0L) {
          setUpdated(other.getUpdated());
        }
        if (!other.getReferenceName().isEmpty()) {
          referenceName_ = other.referenceName_;
          onChanged();
        }
        if (other.getStart() != 0L) {
          setStart(other.getStart());
        }
        if (other.getEnd() != 0L) {
          setEnd(other.getEnd());
        }
        if (!other.getReferenceBases().isEmpty()) {
          referenceBases_ = other.referenceBases_;
          onChanged();
        }
        if (!other.alternateBases_.isEmpty()) {
          if (alternateBases_.isEmpty()) {
            alternateBases_ = other.alternateBases_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureAlternateBasesIsMutable();
            alternateBases_.addAll(other.alternateBases_);
          }
          onChanged();
        }
        internalGetMutableInfo().mergeFrom(
            other.internalGetInfo());
        if (callsBuilder_ == null) {
          if (!other.calls_.isEmpty()) {
            if (calls_.isEmpty()) {
              calls_ = other.calls_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureCallsIsMutable();
              calls_.addAll(other.calls_);
            }
            onChanged();
          }
        } else {
          if (!other.calls_.isEmpty()) {
            if (callsBuilder_.isEmpty()) {
              callsBuilder_.dispose();
              callsBuilder_ = null;
              calls_ = other.calls_;
              bitField0_ = (bitField0_ & ~0x00000800);
              callsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCallsFieldBuilder() : null;
            } else {
              callsBuilder_.addAllMessages(other.calls_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ga4gh.Variants.Variant parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ga4gh.Variants.Variant) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variant ID.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object variantSetId_ = "";
      /**
       * <pre>
       * The ID of the `VariantSet` this variant belongs to. This transitively
       * defines
       * the `ReferenceSet` against which the `Variant` is to be interpreted.
       * </pre>
       *
       * <code>optional string variant_set_id = 2;</code>
       */
      public java.lang.String getVariantSetId() {
        java.lang.Object ref = variantSetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantSetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the `VariantSet` this variant belongs to. This transitively
       * defines
       * the `ReferenceSet` against which the `Variant` is to be interpreted.
       * </pre>
       *
       * <code>optional string variant_set_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVariantSetIdBytes() {
        java.lang.Object ref = variantSetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantSetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the `VariantSet` this variant belongs to. This transitively
       * defines
       * the `ReferenceSet` against which the `Variant` is to be interpreted.
       * </pre>
       *
       * <code>optional string variant_set_id = 2;</code>
       */
      public Builder setVariantSetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantSetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the `VariantSet` this variant belongs to. This transitively
       * defines
       * the `ReferenceSet` against which the `Variant` is to be interpreted.
       * </pre>
       *
       * <code>optional string variant_set_id = 2;</code>
       */
      public Builder clearVariantSetId() {
        
        variantSetId_ = getDefaultInstance().getVariantSetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the `VariantSet` this variant belongs to. This transitively
       * defines
       * the `ReferenceSet` against which the `Variant` is to be interpreted.
       * </pre>
       *
       * <code>optional string variant_set_id = 2;</code>
       */
      public Builder setVariantSetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantSetId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureNamesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          names_ = new com.google.protobuf.LazyStringArrayList(names_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getNamesList() {
        return names_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public int getNamesCount() {
        return names_.size();
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public java.lang.String getNames(int index) {
        return names_.get(index);
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNamesBytes(int index) {
        return names_.getByteString(index);
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public Builder setNames(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
        names_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public Builder addNames(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
        names_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public Builder addAllNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, names_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public Builder clearNames() {
        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Names for the variant, for example a RefSNP ID.
       * </pre>
       *
       * <code>repeated string names = 3;</code>
       */
      public Builder addNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureNamesIsMutable();
        names_.add(value);
        onChanged();
        return this;
      }

      private long created_ ;
      /**
       * <pre>
       * The date this variant was created in milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 created = 4;</code>
       */
      public long getCreated() {
        return created_;
      }
      /**
       * <pre>
       * The date this variant was created in milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 created = 4;</code>
       */
      public Builder setCreated(long value) {
        
        created_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The date this variant was created in milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 created = 4;</code>
       */
      public Builder clearCreated() {
        
        created_ = 0L;
        onChanged();
        return this;
      }

      private long updated_ ;
      /**
       * <pre>
       * The time at which this variant was last updated in
       * milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 updated = 5;</code>
       */
      public long getUpdated() {
        return updated_;
      }
      /**
       * <pre>
       * The time at which this variant was last updated in
       * milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 updated = 5;</code>
       */
      public Builder setUpdated(long value) {
        
        updated_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time at which this variant was last updated in
       * milliseconds from the epoch.
       * </pre>
       *
       * <code>optional int64 updated = 5;</code>
       */
      public Builder clearUpdated() {
        
        updated_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object referenceName_ = "";
      /**
       * <pre>
       * The reference on which this variant occurs.
       * (e.g. `chr20` or `X`)
       * </pre>
       *
       * <code>optional string reference_name = 6;</code>
       */
      public java.lang.String getReferenceName() {
        java.lang.Object ref = referenceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference on which this variant occurs.
       * (e.g. `chr20` or `X`)
       * </pre>
       *
       * <code>optional string reference_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getReferenceNameBytes() {
        java.lang.Object ref = referenceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference on which this variant occurs.
       * (e.g. `chr20` or `X`)
       * </pre>
       *
       * <code>optional string reference_name = 6;</code>
       */
      public Builder setReferenceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference on which this variant occurs.
       * (e.g. `chr20` or `X`)
       * </pre>
       *
       * <code>optional string reference_name = 6;</code>
       */
      public Builder clearReferenceName() {
        
        referenceName_ = getDefaultInstance().getReferenceName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference on which this variant occurs.
       * (e.g. `chr20` or `X`)
       * </pre>
       *
       * <code>optional string reference_name = 6;</code>
       */
      public Builder setReferenceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceName_ = value;
        onChanged();
        return this;
      }

      private long start_ ;
      /**
       * <pre>
       * The start position at which this variant occurs (0-based).
       * This corresponds to the first base of the string of reference bases.
       * Genomic positions are non-negative integers less than reference length.
       * Variants spanning the join of circular genomes are represented as
       * two variants one on each side of the join (position 0).
       * </pre>
       *
       * <code>optional int64 start = 7;</code>
       */
      public long getStart() {
        return start_;
      }
      /**
       * <pre>
       * The start position at which this variant occurs (0-based).
       * This corresponds to the first base of the string of reference bases.
       * Genomic positions are non-negative integers less than reference length.
       * Variants spanning the join of circular genomes are represented as
       * two variants one on each side of the join (position 0).
       * </pre>
       *
       * <code>optional int64 start = 7;</code>
       */
      public Builder setStart(long value) {
        
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The start position at which this variant occurs (0-based).
       * This corresponds to the first base of the string of reference bases.
       * Genomic positions are non-negative integers less than reference length.
       * Variants spanning the join of circular genomes are represented as
       * two variants one on each side of the join (position 0).
       * </pre>
       *
       * <code>optional int64 start = 7;</code>
       */
      public Builder clearStart() {
        
        start_ = 0L;
        onChanged();
        return this;
      }

      private long end_ ;
      /**
       * <pre>
       * The end position (exclusive), resulting in [start, end) closed-open
       * interval.
       * This is typically calculated by `start + referenceBases.length`.
       * </pre>
       *
       * <code>optional int64 end = 8;</code>
       */
      public long getEnd() {
        return end_;
      }
      /**
       * <pre>
       * The end position (exclusive), resulting in [start, end) closed-open
       * interval.
       * This is typically calculated by `start + referenceBases.length`.
       * </pre>
       *
       * <code>optional int64 end = 8;</code>
       */
      public Builder setEnd(long value) {
        
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The end position (exclusive), resulting in [start, end) closed-open
       * interval.
       * This is typically calculated by `start + referenceBases.length`.
       * </pre>
       *
       * <code>optional int64 end = 8;</code>
       */
      public Builder clearEnd() {
        
        end_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object referenceBases_ = "";
      /**
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position.
       * </pre>
       *
       * <code>optional string reference_bases = 9;</code>
       */
      public java.lang.String getReferenceBases() {
        java.lang.Object ref = referenceBases_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceBases_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position.
       * </pre>
       *
       * <code>optional string reference_bases = 9;</code>
       */
      public com.google.protobuf.ByteString
          getReferenceBasesBytes() {
        java.lang.Object ref = referenceBases_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceBases_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position.
       * </pre>
       *
       * <code>optional string reference_bases = 9;</code>
       */
      public Builder setReferenceBases(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceBases_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position.
       * </pre>
       *
       * <code>optional string reference_bases = 9;</code>
       */
      public Builder clearReferenceBases() {
        
        referenceBases_ = getDefaultInstance().getReferenceBases();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position.
       * </pre>
       *
       * <code>optional string reference_bases = 9;</code>
       */
      public Builder setReferenceBasesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceBases_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAlternateBasesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          alternateBases_ = new com.google.protobuf.LazyStringArrayList(alternateBases_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getAlternateBasesList() {
        return alternateBases_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public int getAlternateBasesCount() {
        return alternateBases_.size();
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public java.lang.String getAlternateBases(int index) {
        return alternateBases_.get(index);
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public com.google.protobuf.ByteString
          getAlternateBasesBytes(int index) {
        return alternateBases_.getByteString(index);
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public Builder setAlternateBases(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAlternateBasesIsMutable();
        alternateBases_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public Builder addAlternateBases(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAlternateBasesIsMutable();
        alternateBases_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public Builder addAllAlternateBases(
          java.lang.Iterable<java.lang.String> values) {
        ensureAlternateBasesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, alternateBases_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public Builder clearAlternateBases() {
        alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The bases that appear instead of the reference bases. Multiple alternate
       * alleles are possible.
       * </pre>
       *
       * <code>repeated string alternate_bases = 10;</code>
       */
      public Builder addAlternateBasesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAlternateBasesIsMutable();
        alternateBases_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ListValue> info_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetInfo() {
        if (info_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        return info_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
      internalGetMutableInfo() {
        onChanged();;
        if (info_ == null) {
          info_ = com.google.protobuf.MapField.newMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        if (!info_.isMutable()) {
          info_ = info_.copy();
        }
        return info_;
      }
      /**
       * <pre>
       * A map of additional variant information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 11;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
        return internalGetInfo().getMap();
      }
      /**
       * <pre>
       * A map of additional variant information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 11;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ListValue>
      getMutableInfo() {
        return internalGetMutableInfo().getMutableMap();
      }
      /**
       * <pre>
       * A map of additional variant information.
       * </pre>
       *
       * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 11;</code>
       */
      public Builder putAllInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ListValue> values) {
        getMutableInfo().putAll(values);
        return this;
      }

      private java.util.List<ga4gh.Variants.Call> calls_ =
        java.util.Collections.emptyList();
      private void ensureCallsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          calls_ = new java.util.ArrayList<ga4gh.Variants.Call>(calls_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Variants.Call, ga4gh.Variants.Call.Builder, ga4gh.Variants.CallOrBuilder> callsBuilder_;

      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public java.util.List<ga4gh.Variants.Call> getCallsList() {
        if (callsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calls_);
        } else {
          return callsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public int getCallsCount() {
        if (callsBuilder_ == null) {
          return calls_.size();
        } else {
          return callsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public ga4gh.Variants.Call getCalls(int index) {
        if (callsBuilder_ == null) {
          return calls_.get(index);
        } else {
          return callsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder setCalls(
          int index, ga4gh.Variants.Call value) {
        if (callsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallsIsMutable();
          calls_.set(index, value);
          onChanged();
        } else {
          callsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder setCalls(
          int index, ga4gh.Variants.Call.Builder builderForValue) {
        if (callsBuilder_ == null) {
          ensureCallsIsMutable();
          calls_.set(index, builderForValue.build());
          onChanged();
        } else {
          callsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder addCalls(ga4gh.Variants.Call value) {
        if (callsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallsIsMutable();
          calls_.add(value);
          onChanged();
        } else {
          callsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder addCalls(
          int index, ga4gh.Variants.Call value) {
        if (callsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallsIsMutable();
          calls_.add(index, value);
          onChanged();
        } else {
          callsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder addCalls(
          ga4gh.Variants.Call.Builder builderForValue) {
        if (callsBuilder_ == null) {
          ensureCallsIsMutable();
          calls_.add(builderForValue.build());
          onChanged();
        } else {
          callsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder addCalls(
          int index, ga4gh.Variants.Call.Builder builderForValue) {
        if (callsBuilder_ == null) {
          ensureCallsIsMutable();
          calls_.add(index, builderForValue.build());
          onChanged();
        } else {
          callsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder addAllCalls(
          java.lang.Iterable<? extends ga4gh.Variants.Call> values) {
        if (callsBuilder_ == null) {
          ensureCallsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, calls_);
          onChanged();
        } else {
          callsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder clearCalls() {
        if (callsBuilder_ == null) {
          calls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          callsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public Builder removeCalls(int index) {
        if (callsBuilder_ == null) {
          ensureCallsIsMutable();
          calls_.remove(index);
          onChanged();
        } else {
          callsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public ga4gh.Variants.Call.Builder getCallsBuilder(
          int index) {
        return getCallsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public ga4gh.Variants.CallOrBuilder getCallsOrBuilder(
          int index) {
        if (callsBuilder_ == null) {
          return calls_.get(index);  } else {
          return callsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public java.util.List<? extends ga4gh.Variants.CallOrBuilder> 
           getCallsOrBuilderList() {
        if (callsBuilder_ != null) {
          return callsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calls_);
        }
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public ga4gh.Variants.Call.Builder addCallsBuilder() {
        return getCallsFieldBuilder().addBuilder(
            ga4gh.Variants.Call.getDefaultInstance());
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public ga4gh.Variants.Call.Builder addCallsBuilder(
          int index) {
        return getCallsFieldBuilder().addBuilder(
            index, ga4gh.Variants.Call.getDefaultInstance());
      }
      /**
       * <pre>
       * The variant calls for this particular variant. Each one represents the
       * determination of genotype with respect to this variant. `Call`s in this
       * array are implicitly associated with this `Variant`.
       * </pre>
       *
       * <code>repeated .ga4gh.Call calls = 12;</code>
       */
      public java.util.List<ga4gh.Variants.Call.Builder> 
           getCallsBuilderList() {
        return getCallsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ga4gh.Variants.Call, ga4gh.Variants.Call.Builder, ga4gh.Variants.CallOrBuilder> 
          getCallsFieldBuilder() {
        if (callsBuilder_ == null) {
          callsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ga4gh.Variants.Call, ga4gh.Variants.Call.Builder, ga4gh.Variants.CallOrBuilder>(
                  calls_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          calls_ = null;
        }
        return callsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ga4gh.Variant)
    }

    // @@protoc_insertion_point(class_scope:ga4gh.Variant)
    private static final ga4gh.Variants.Variant DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ga4gh.Variants.Variant();
    }

    public static ga4gh.Variants.Variant getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Variant>
        PARSER = new com.google.protobuf.AbstractParser<Variant>() {
      public Variant parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Variant(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Variant> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Variant> getParserForType() {
      return PARSER;
    }

    public ga4gh.Variants.Variant getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_VariantSetMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_VariantSetMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_VariantSetMetadata_InfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_VariantSetMetadata_InfoEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_VariantSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_VariantSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_CallSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_CallSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_CallSet_InfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_CallSet_InfoEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_Call_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_Call_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_Call_InfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_Call_InfoEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_Variant_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_Variant_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ga4gh_Variant_InfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ga4gh_Variant_InfoEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024ga4gh/variants.proto\022\005ga4gh\032\034google/pr" +
      "otobuf/struct.proto\"\353\001\n\022VariantSetMetada" +
      "ta\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\n\n\002id\030\003 \001" +
      "(\t\022\014\n\004type\030\004 \001(\t\022\016\n\006number\030\005 \001(\t\022\023\n\013desc" +
      "ription\030\006 \001(\t\0221\n\004info\030\007 \003(\0132#.ga4gh.Vari" +
      "antSetMetadata.InfoEntry\032G\n\tInfoEntry\022\013\n" +
      "\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0132\032.google.proto" +
      "buf.ListValue:\0028\001\"\201\001\n\nVariantSet\022\n\n\002id\030\001" +
      " \001(\t\022\014\n\004name\030\002 \001(\t\022\022\n\ndataset_id\030\003 \001(\t\022\030" +
      "\n\020reference_set_id\030\004 \001(\t\022+\n\010metadata\030\005 \003",
      "(\0132\031.ga4gh.VariantSetMetadata\"\342\001\n\007CallSe" +
      "t\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\021\n\tsample_id" +
      "\030\003 \001(\t\022\027\n\017variant_set_ids\030\004 \003(\t\022\017\n\007creat" +
      "ed\030\005 \001(\003\022\017\n\007updated\030\006 \001(\003\022&\n\004info\030\007 \003(\0132" +
      "\030.ga4gh.CallSet.InfoEntry\032G\n\tInfoEntry\022\013" +
      "\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0132\032.google.prot" +
      "obuf.ListValue:\0028\001\"\341\001\n\004Call\022\025\n\rcall_set_" +
      "name\030\001 \001(\t\022\023\n\013call_set_id\030\002 \001(\t\022\020\n\010genot" +
      "ype\030\003 \003(\005\022\020\n\010phaseset\030\004 \001(\t\022\033\n\023genotype_" +
      "likelihood\030\005 \003(\001\022#\n\004info\030\006 \003(\0132\025.ga4gh.C",
      "all.InfoEntry\032G\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022" +
      ")\n\005value\030\002 \001(\0132\032.google.protobuf.ListVal" +
      "ue:\0028\001\"\321\002\n\007Variant\022\n\n\002id\030\001 \001(\t\022\026\n\016varian" +
      "t_set_id\030\002 \001(\t\022\r\n\005names\030\003 \003(\t\022\017\n\007created" +
      "\030\004 \001(\003\022\017\n\007updated\030\005 \001(\003\022\026\n\016reference_nam" +
      "e\030\006 \001(\t\022\r\n\005start\030\007 \001(\003\022\013\n\003end\030\010 \001(\003\022\027\n\017r" +
      "eference_bases\030\t \001(\t\022\027\n\017alternate_bases\030" +
      "\n \003(\t\022&\n\004info\030\013 \003(\0132\030.ga4gh.Variant.Info" +
      "Entry\022\032\n\005calls\030\014 \003(\0132\013.ga4gh.Call\032G\n\tInf" +
      "oEntry\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0132\032.goo",
      "gle.protobuf.ListValue:\0028\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.StructProto.getDescriptor(),
        }, assigner);
    internal_static_ga4gh_VariantSetMetadata_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ga4gh_VariantSetMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_VariantSetMetadata_descriptor,
        new java.lang.String[] { "Key", "Value", "Id", "Type", "Number", "Description", "Info", });
    internal_static_ga4gh_VariantSetMetadata_InfoEntry_descriptor =
      internal_static_ga4gh_VariantSetMetadata_descriptor.getNestedTypes().get(0);
    internal_static_ga4gh_VariantSetMetadata_InfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_VariantSetMetadata_InfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_ga4gh_VariantSet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ga4gh_VariantSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_VariantSet_descriptor,
        new java.lang.String[] { "Id", "Name", "DatasetId", "ReferenceSetId", "Metadata", });
    internal_static_ga4gh_CallSet_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ga4gh_CallSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_CallSet_descriptor,
        new java.lang.String[] { "Id", "Name", "SampleId", "VariantSetIds", "Created", "Updated", "Info", });
    internal_static_ga4gh_CallSet_InfoEntry_descriptor =
      internal_static_ga4gh_CallSet_descriptor.getNestedTypes().get(0);
    internal_static_ga4gh_CallSet_InfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_CallSet_InfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_ga4gh_Call_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ga4gh_Call_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_Call_descriptor,
        new java.lang.String[] { "CallSetName", "CallSetId", "Genotype", "Phaseset", "GenotypeLikelihood", "Info", });
    internal_static_ga4gh_Call_InfoEntry_descriptor =
      internal_static_ga4gh_Call_descriptor.getNestedTypes().get(0);
    internal_static_ga4gh_Call_InfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_Call_InfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_ga4gh_Variant_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ga4gh_Variant_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_Variant_descriptor,
        new java.lang.String[] { "Id", "VariantSetId", "Names", "Created", "Updated", "ReferenceName", "Start", "End", "ReferenceBases", "AlternateBases", "Info", "Calls", });
    internal_static_ga4gh_Variant_InfoEntry_descriptor =
      internal_static_ga4gh_Variant_descriptor.getNestedTypes().get(0);
    internal_static_ga4gh_Variant_InfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ga4gh_Variant_InfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.google.protobuf.StructProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
