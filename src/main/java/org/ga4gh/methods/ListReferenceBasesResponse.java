/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.methods;  
@SuppressWarnings("all")
/** The response from `GET /references/{id}/bases` expressed as JSON. */
@org.apache.avro.specific.AvroGenerated
public class ListReferenceBasesResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ListReferenceBasesResponse\",\"namespace\":\"org.ga4gh.methods\",\"doc\":\"The response from `GET /references/{id}/bases` expressed as JSON.\",\"fields\":[{\"name\":\"offset\",\"type\":\"long\",\"doc\":\"The offset position (0-based) of the given `sequence` from the start of this\\n  `Reference`. This value will differ for each page in a paginated request.\",\"default\":0},{\"name\":\"sequence\",\"type\":\"string\",\"doc\":\"A substring of the bases that make up this reference. Bases are represented\\n  as IUPAC-IUB codes; this string matches the regexp `[ACGTMRWSYKVHDBN]*`.\"},{\"name\":\"nextPageToken\",\"type\":[\"null\",\"string\"],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  Provide this value in a subsequent request to return the next page of\\n  results. This field will be empty if there aren't any additional results.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The offset position (0-based) of the given `sequence` from the start of this
  `Reference`. This value will differ for each page in a paginated request. */
   private long offset;
  /** A substring of the bases that make up this reference. Bases are represented
  as IUPAC-IUB codes; this string matches the regexp `[ACGTMRWSYKVHDBN]*`. */
   private java.lang.CharSequence sequence;
  /** The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results. */
   private java.lang.CharSequence nextPageToken;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ListReferenceBasesResponse() {}

  /**
   * All-args constructor.
   */
  public ListReferenceBasesResponse(java.lang.Long offset, java.lang.CharSequence sequence, java.lang.CharSequence nextPageToken) {
    this.offset = offset;
    this.sequence = sequence;
    this.nextPageToken = nextPageToken;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return offset;
    case 1: return sequence;
    case 2: return nextPageToken;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: offset = (java.lang.Long)value$; break;
    case 1: sequence = (java.lang.CharSequence)value$; break;
    case 2: nextPageToken = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'offset' field.
   * The offset position (0-based) of the given `sequence` from the start of this
  `Reference`. This value will differ for each page in a paginated request.   */
  public java.lang.Long getOffset() {
    return offset;
  }

  /**
   * Sets the value of the 'offset' field.
   * The offset position (0-based) of the given `sequence` from the start of this
  `Reference`. This value will differ for each page in a paginated request.   * @param value the value to set.
   */
  public void setOffset(java.lang.Long value) {
    this.offset = value;
  }

  /**
   * Gets the value of the 'sequence' field.
   * A substring of the bases that make up this reference. Bases are represented
  as IUPAC-IUB codes; this string matches the regexp `[ACGTMRWSYKVHDBN]*`.   */
  public java.lang.CharSequence getSequence() {
    return sequence;
  }

  /**
   * Sets the value of the 'sequence' field.
   * A substring of the bases that make up this reference. Bases are represented
  as IUPAC-IUB codes; this string matches the regexp `[ACGTMRWSYKVHDBN]*`.   * @param value the value to set.
   */
  public void setSequence(java.lang.CharSequence value) {
    this.sequence = value;
  }

  /**
   * Gets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   */
  public java.lang.CharSequence getNextPageToken() {
    return nextPageToken;
  }

  /**
   * Sets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   * @param value the value to set.
   */
  public void setNextPageToken(java.lang.CharSequence value) {
    this.nextPageToken = value;
  }

  /** Creates a new ListReferenceBasesResponse RecordBuilder */
  public static org.ga4gh.methods.ListReferenceBasesResponse.Builder newBuilder() {
    return new org.ga4gh.methods.ListReferenceBasesResponse.Builder();
  }
  
  /** Creates a new ListReferenceBasesResponse RecordBuilder by copying an existing Builder */
  public static org.ga4gh.methods.ListReferenceBasesResponse.Builder newBuilder(org.ga4gh.methods.ListReferenceBasesResponse.Builder other) {
    return new org.ga4gh.methods.ListReferenceBasesResponse.Builder(other);
  }
  
  /** Creates a new ListReferenceBasesResponse RecordBuilder by copying an existing ListReferenceBasesResponse instance */
  public static org.ga4gh.methods.ListReferenceBasesResponse.Builder newBuilder(org.ga4gh.methods.ListReferenceBasesResponse other) {
    return new org.ga4gh.methods.ListReferenceBasesResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for ListReferenceBasesResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ListReferenceBasesResponse>
    implements org.apache.avro.data.RecordBuilder<ListReferenceBasesResponse> {

    private long offset;
    private java.lang.CharSequence sequence;
    private java.lang.CharSequence nextPageToken;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.methods.ListReferenceBasesResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.methods.ListReferenceBasesResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.offset)) {
        this.offset = data().deepCopy(fields()[0].schema(), other.offset);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sequence)) {
        this.sequence = data().deepCopy(fields()[1].schema(), other.sequence);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[2].schema(), other.nextPageToken);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ListReferenceBasesResponse instance */
    private Builder(org.ga4gh.methods.ListReferenceBasesResponse other) {
            super(org.ga4gh.methods.ListReferenceBasesResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.offset)) {
        this.offset = data().deepCopy(fields()[0].schema(), other.offset);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sequence)) {
        this.sequence = data().deepCopy(fields()[1].schema(), other.sequence);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[2].schema(), other.nextPageToken);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'offset' field */
    public java.lang.Long getOffset() {
      return offset;
    }
    
    /** Sets the value of the 'offset' field */
    public org.ga4gh.methods.ListReferenceBasesResponse.Builder setOffset(long value) {
      validate(fields()[0], value);
      this.offset = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'offset' field has been set */
    public boolean hasOffset() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'offset' field */
    public org.ga4gh.methods.ListReferenceBasesResponse.Builder clearOffset() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'sequence' field */
    public java.lang.CharSequence getSequence() {
      return sequence;
    }
    
    /** Sets the value of the 'sequence' field */
    public org.ga4gh.methods.ListReferenceBasesResponse.Builder setSequence(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.sequence = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'sequence' field has been set */
    public boolean hasSequence() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'sequence' field */
    public org.ga4gh.methods.ListReferenceBasesResponse.Builder clearSequence() {
      sequence = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'nextPageToken' field */
    public java.lang.CharSequence getNextPageToken() {
      return nextPageToken;
    }
    
    /** Sets the value of the 'nextPageToken' field */
    public org.ga4gh.methods.ListReferenceBasesResponse.Builder setNextPageToken(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.nextPageToken = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'nextPageToken' field has been set */
    public boolean hasNextPageToken() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'nextPageToken' field */
    public org.ga4gh.methods.ListReferenceBasesResponse.Builder clearNextPageToken() {
      nextPageToken = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ListReferenceBasesResponse build() {
      try {
        ListReferenceBasesResponse record = new ListReferenceBasesResponse();
        record.offset = fieldSetFlags()[0] ? this.offset : (java.lang.Long) defaultValue(fields()[0]);
        record.sequence = fieldSetFlags()[1] ? this.sequence : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.nextPageToken = fieldSetFlags()[2] ? this.nextPageToken : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
