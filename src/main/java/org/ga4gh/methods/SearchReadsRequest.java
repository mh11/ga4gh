/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.methods;  
@SuppressWarnings("all")
/** This request maps to the body of `POST /reads/search` as JSON.

If a reference is specified, all queried `ReadGroup`s must be aligned
to `ReferenceSet`s containing that same `Reference`. If no reference is
specified, all `ReadGroup`s must be aligned to the same `ReferenceSet`. */
@org.apache.avro.specific.AvroGenerated
public class SearchReadsRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SearchReadsRequest\",\"namespace\":\"org.ga4gh.methods\",\"doc\":\"This request maps to the body of `POST /reads/search` as JSON.\\n\\nIf a reference is specified, all queried `ReadGroup`s must be aligned\\nto `ReferenceSet`s containing that same `Reference`. If no reference is\\nspecified, all `ReadGroup`s must be aligned to the same `ReferenceSet`.\",\"fields\":[{\"name\":\"readGroupIds\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"If nonempty, restrict this query to reads within the given readgroups.\",\"default\":[]},{\"name\":\"referenceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The reference to query. Leaving blank returns results from all\\n  references, including unmapped reads - this could be very large.\",\"default\":null},{\"name\":\"start\",\"type\":[\"long\",\"null\"],\"doc\":\"The start position (0-based) of this query.\\n  If a reference is specified, this defaults to 0.\\n  Genomic positions are non-negative integers less than reference length.\\n  Requests spanning the join of circular genomes are represented as\\n  two requests one on each side of the join (position 0).\",\"default\":0},{\"name\":\"end\",\"type\":[\"null\",\"long\"],\"doc\":\"The end position (0-based, exclusive) of this query.\\n  If a reference is specified, this defaults to the\\n  reference's length.\",\"default\":null},{\"name\":\"pageSize\",\"type\":[\"null\",\"int\"],\"doc\":\"Specifies the maximum number of results to return in a single page.\\n  If unspecified, a system default will be used.\",\"default\":null},{\"name\":\"pageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  To get the next page of results, set this parameter to the value of\\n  `nextPageToken` from the previous response.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** If nonempty, restrict this query to reads within the given readgroups. */
   private java.util.List<java.lang.String> readGroupIds;
  /** The reference to query. Leaving blank returns results from all
  references, including unmapped reads - this could be very large. */
   private java.lang.String referenceId;
  /** The start position (0-based) of this query.
  If a reference is specified, this defaults to 0.
  Genomic positions are non-negative integers less than reference length.
  Requests spanning the join of circular genomes are represented as
  two requests one on each side of the join (position 0). */
   private java.lang.Long start;
  /** The end position (0-based, exclusive) of this query.
  If a reference is specified, this defaults to the
  reference's length. */
   private java.lang.Long end;
  /** Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used. */
   private java.lang.Integer pageSize;
  /** The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response. */
   private java.lang.String pageToken;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SearchReadsRequest() {}

  /**
   * All-args constructor.
   */
  public SearchReadsRequest(java.util.List<java.lang.String> readGroupIds, java.lang.String referenceId, java.lang.Long start, java.lang.Long end, java.lang.Integer pageSize, java.lang.String pageToken) {
    this.readGroupIds = readGroupIds;
    this.referenceId = referenceId;
    this.start = start;
    this.end = end;
    this.pageSize = pageSize;
    this.pageToken = pageToken;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return readGroupIds;
    case 1: return referenceId;
    case 2: return start;
    case 3: return end;
    case 4: return pageSize;
    case 5: return pageToken;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: readGroupIds = (java.util.List<java.lang.String>)value$; break;
    case 1: referenceId = (java.lang.String)value$; break;
    case 2: start = (java.lang.Long)value$; break;
    case 3: end = (java.lang.Long)value$; break;
    case 4: pageSize = (java.lang.Integer)value$; break;
    case 5: pageToken = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'readGroupIds' field.
   * If nonempty, restrict this query to reads within the given readgroups.   */
  public java.util.List<java.lang.String> getReadGroupIds() {
    return readGroupIds;
  }

  /**
   * Sets the value of the 'readGroupIds' field.
   * If nonempty, restrict this query to reads within the given readgroups.   * @param value the value to set.
   */
  public void setReadGroupIds(java.util.List<java.lang.String> value) {
    this.readGroupIds = value;
  }

  /**
   * Gets the value of the 'referenceId' field.
   * The reference to query. Leaving blank returns results from all
  references, including unmapped reads - this could be very large.   */
  public java.lang.String getReferenceId() {
    return referenceId;
  }

  /**
   * Sets the value of the 'referenceId' field.
   * The reference to query. Leaving blank returns results from all
  references, including unmapped reads - this could be very large.   * @param value the value to set.
   */
  public void setReferenceId(java.lang.String value) {
    this.referenceId = value;
  }

  /**
   * Gets the value of the 'start' field.
   * The start position (0-based) of this query.
  If a reference is specified, this defaults to 0.
  Genomic positions are non-negative integers less than reference length.
  Requests spanning the join of circular genomes are represented as
  two requests one on each side of the join (position 0).   */
  public java.lang.Long getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * The start position (0-based) of this query.
  If a reference is specified, this defaults to 0.
  Genomic positions are non-negative integers less than reference length.
  Requests spanning the join of circular genomes are represented as
  two requests one on each side of the join (position 0).   * @param value the value to set.
   */
  public void setStart(java.lang.Long value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'end' field.
   * The end position (0-based, exclusive) of this query.
  If a reference is specified, this defaults to the
  reference's length.   */
  public java.lang.Long getEnd() {
    return end;
  }

  /**
   * Sets the value of the 'end' field.
   * The end position (0-based, exclusive) of this query.
  If a reference is specified, this defaults to the
  reference's length.   * @param value the value to set.
   */
  public void setEnd(java.lang.Long value) {
    this.end = value;
  }

  /**
   * Gets the value of the 'pageSize' field.
   * Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.   */
  public java.lang.Integer getPageSize() {
    return pageSize;
  }

  /**
   * Sets the value of the 'pageSize' field.
   * Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.   * @param value the value to set.
   */
  public void setPageSize(java.lang.Integer value) {
    this.pageSize = value;
  }

  /**
   * Gets the value of the 'pageToken' field.
   * The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.   */
  public java.lang.String getPageToken() {
    return pageToken;
  }

  /**
   * Sets the value of the 'pageToken' field.
   * The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.   * @param value the value to set.
   */
  public void setPageToken(java.lang.String value) {
    this.pageToken = value;
  }

  /** Creates a new SearchReadsRequest RecordBuilder */
  public static org.ga4gh.methods.SearchReadsRequest.Builder newBuilder() {
    return new org.ga4gh.methods.SearchReadsRequest.Builder();
  }
  
  /** Creates a new SearchReadsRequest RecordBuilder by copying an existing Builder */
  public static org.ga4gh.methods.SearchReadsRequest.Builder newBuilder(org.ga4gh.methods.SearchReadsRequest.Builder other) {
    return new org.ga4gh.methods.SearchReadsRequest.Builder(other);
  }
  
  /** Creates a new SearchReadsRequest RecordBuilder by copying an existing SearchReadsRequest instance */
  public static org.ga4gh.methods.SearchReadsRequest.Builder newBuilder(org.ga4gh.methods.SearchReadsRequest other) {
    return new org.ga4gh.methods.SearchReadsRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for SearchReadsRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SearchReadsRequest>
    implements org.apache.avro.data.RecordBuilder<SearchReadsRequest> {

    private java.util.List<java.lang.String> readGroupIds;
    private java.lang.String referenceId;
    private java.lang.Long start;
    private java.lang.Long end;
    private java.lang.Integer pageSize;
    private java.lang.String pageToken;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.methods.SearchReadsRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.methods.SearchReadsRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.readGroupIds)) {
        this.readGroupIds = data().deepCopy(fields()[0].schema(), other.readGroupIds);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.referenceId)) {
        this.referenceId = data().deepCopy(fields()[1].schema(), other.referenceId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.start)) {
        this.start = data().deepCopy(fields()[2].schema(), other.start);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.end)) {
        this.end = data().deepCopy(fields()[3].schema(), other.end);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pageSize)) {
        this.pageSize = data().deepCopy(fields()[4].schema(), other.pageSize);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pageToken)) {
        this.pageToken = data().deepCopy(fields()[5].schema(), other.pageToken);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SearchReadsRequest instance */
    private Builder(org.ga4gh.methods.SearchReadsRequest other) {
            super(org.ga4gh.methods.SearchReadsRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.readGroupIds)) {
        this.readGroupIds = data().deepCopy(fields()[0].schema(), other.readGroupIds);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.referenceId)) {
        this.referenceId = data().deepCopy(fields()[1].schema(), other.referenceId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.start)) {
        this.start = data().deepCopy(fields()[2].schema(), other.start);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.end)) {
        this.end = data().deepCopy(fields()[3].schema(), other.end);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pageSize)) {
        this.pageSize = data().deepCopy(fields()[4].schema(), other.pageSize);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pageToken)) {
        this.pageToken = data().deepCopy(fields()[5].schema(), other.pageToken);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'readGroupIds' field */
    public java.util.List<java.lang.String> getReadGroupIds() {
      return readGroupIds;
    }
    
    /** Sets the value of the 'readGroupIds' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder setReadGroupIds(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.readGroupIds = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'readGroupIds' field has been set */
    public boolean hasReadGroupIds() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'readGroupIds' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder clearReadGroupIds() {
      readGroupIds = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'referenceId' field */
    public java.lang.String getReferenceId() {
      return referenceId;
    }
    
    /** Sets the value of the 'referenceId' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder setReferenceId(java.lang.String value) {
      validate(fields()[1], value);
      this.referenceId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'referenceId' field has been set */
    public boolean hasReferenceId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'referenceId' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder clearReferenceId() {
      referenceId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'start' field */
    public java.lang.Long getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder setStart(java.lang.Long value) {
      validate(fields()[2], value);
      this.start = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'start' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder clearStart() {
      start = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'end' field */
    public java.lang.Long getEnd() {
      return end;
    }
    
    /** Sets the value of the 'end' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder setEnd(java.lang.Long value) {
      validate(fields()[3], value);
      this.end = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'end' field has been set */
    public boolean hasEnd() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'end' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder clearEnd() {
      end = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'pageSize' field */
    public java.lang.Integer getPageSize() {
      return pageSize;
    }
    
    /** Sets the value of the 'pageSize' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder setPageSize(java.lang.Integer value) {
      validate(fields()[4], value);
      this.pageSize = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'pageSize' field has been set */
    public boolean hasPageSize() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'pageSize' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder clearPageSize() {
      pageSize = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'pageToken' field */
    public java.lang.String getPageToken() {
      return pageToken;
    }
    
    /** Sets the value of the 'pageToken' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder setPageToken(java.lang.String value) {
      validate(fields()[5], value);
      this.pageToken = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'pageToken' field has been set */
    public boolean hasPageToken() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'pageToken' field */
    public org.ga4gh.methods.SearchReadsRequest.Builder clearPageToken() {
      pageToken = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public SearchReadsRequest build() {
      try {
        SearchReadsRequest record = new SearchReadsRequest();
        record.readGroupIds = fieldSetFlags()[0] ? this.readGroupIds : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        record.referenceId = fieldSetFlags()[1] ? this.referenceId : (java.lang.String) defaultValue(fields()[1]);
        record.start = fieldSetFlags()[2] ? this.start : (java.lang.Long) defaultValue(fields()[2]);
        record.end = fieldSetFlags()[3] ? this.end : (java.lang.Long) defaultValue(fields()[3]);
        record.pageSize = fieldSetFlags()[4] ? this.pageSize : (java.lang.Integer) defaultValue(fields()[4]);
        record.pageToken = fieldSetFlags()[5] ? this.pageToken : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
