/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.methods;  
@SuppressWarnings("all")
/** This is the response from `POST /variantsets/search` expressed as JSON. */
@org.apache.avro.specific.AvroGenerated
public class SearchVariantSetsResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SearchVariantSetsResponse\",\"namespace\":\"org.ga4gh.methods\",\"doc\":\"This is the response from `POST /variantsets/search` expressed as JSON.\",\"fields\":[{\"name\":\"variantSets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"VariantSet\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A VariantSet is a collection of variants and variant calls intended to be analyzed together.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The variant set ID.\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The variant set name.\",\"default\":null},{\"name\":\"datasetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the dataset this variant set belongs to.\"},{\"name\":\"referenceSetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the reference set that describes the sequences used by the variants in this set.\"},{\"name\":\"metadata\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"VariantSetMetadata\",\"doc\":\"Optional metadata associated with a variant set.\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The top-level key.\"},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The value field for simple metadata.\"},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"User-provided ID field, not enforced by this API.\\n  Two or more pieces of structured metadata with identical\\n  id and key fields are considered equivalent.\\n  `FIXME: If it's not enforced, then why can't it be null?`\"},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The type of data.\"},{\"name\":\"number\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The number of values that can be included in a field described by this\\n  metadata.\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"A textual description of this metadata.\"},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"Remaining structured metadata key-value pairs.\",\"default\":{}}]}},\"doc\":\"Optional metadata associated with this variant set.\\n  This array can be used to store information about the variant set, such as information found\\n  in VCF header fields, that isn't already available in first class fields such as \\\"name\\\".\",\"default\":[]}]}},\"doc\":\"The list of matching variant sets.\",\"default\":[]},{\"name\":\"nextPageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  Provide this value in a subsequent request to return the next page of\\n  results. This field will be empty if there aren't any additional results.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The list of matching variant sets. */
   private java.util.List<org.ga4gh.models.VariantSet> variantSets;
  /** The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results. */
   private java.lang.String nextPageToken;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SearchVariantSetsResponse() {}

  /**
   * All-args constructor.
   */
  public SearchVariantSetsResponse(java.util.List<org.ga4gh.models.VariantSet> variantSets, java.lang.String nextPageToken) {
    this.variantSets = variantSets;
    this.nextPageToken = nextPageToken;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return variantSets;
    case 1: return nextPageToken;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: variantSets = (java.util.List<org.ga4gh.models.VariantSet>)value$; break;
    case 1: nextPageToken = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'variantSets' field.
   * The list of matching variant sets.   */
  public java.util.List<org.ga4gh.models.VariantSet> getVariantSets() {
    return variantSets;
  }

  /**
   * Sets the value of the 'variantSets' field.
   * The list of matching variant sets.   * @param value the value to set.
   */
  public void setVariantSets(java.util.List<org.ga4gh.models.VariantSet> value) {
    this.variantSets = value;
  }

  /**
   * Gets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   */
  public java.lang.String getNextPageToken() {
    return nextPageToken;
  }

  /**
   * Sets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   * @param value the value to set.
   */
  public void setNextPageToken(java.lang.String value) {
    this.nextPageToken = value;
  }

  /** Creates a new SearchVariantSetsResponse RecordBuilder */
  public static org.ga4gh.methods.SearchVariantSetsResponse.Builder newBuilder() {
    return new org.ga4gh.methods.SearchVariantSetsResponse.Builder();
  }
  
  /** Creates a new SearchVariantSetsResponse RecordBuilder by copying an existing Builder */
  public static org.ga4gh.methods.SearchVariantSetsResponse.Builder newBuilder(org.ga4gh.methods.SearchVariantSetsResponse.Builder other) {
    return new org.ga4gh.methods.SearchVariantSetsResponse.Builder(other);
  }
  
  /** Creates a new SearchVariantSetsResponse RecordBuilder by copying an existing SearchVariantSetsResponse instance */
  public static org.ga4gh.methods.SearchVariantSetsResponse.Builder newBuilder(org.ga4gh.methods.SearchVariantSetsResponse other) {
    return new org.ga4gh.methods.SearchVariantSetsResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for SearchVariantSetsResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SearchVariantSetsResponse>
    implements org.apache.avro.data.RecordBuilder<SearchVariantSetsResponse> {

    private java.util.List<org.ga4gh.models.VariantSet> variantSets;
    private java.lang.String nextPageToken;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.methods.SearchVariantSetsResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.methods.SearchVariantSetsResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.variantSets)) {
        this.variantSets = data().deepCopy(fields()[0].schema(), other.variantSets);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[1].schema(), other.nextPageToken);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SearchVariantSetsResponse instance */
    private Builder(org.ga4gh.methods.SearchVariantSetsResponse other) {
            super(org.ga4gh.methods.SearchVariantSetsResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.variantSets)) {
        this.variantSets = data().deepCopy(fields()[0].schema(), other.variantSets);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[1].schema(), other.nextPageToken);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'variantSets' field */
    public java.util.List<org.ga4gh.models.VariantSet> getVariantSets() {
      return variantSets;
    }
    
    /** Sets the value of the 'variantSets' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder setVariantSets(java.util.List<org.ga4gh.models.VariantSet> value) {
      validate(fields()[0], value);
      this.variantSets = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'variantSets' field has been set */
    public boolean hasVariantSets() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'variantSets' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder clearVariantSets() {
      variantSets = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'nextPageToken' field */
    public java.lang.String getNextPageToken() {
      return nextPageToken;
    }
    
    /** Sets the value of the 'nextPageToken' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder setNextPageToken(java.lang.String value) {
      validate(fields()[1], value);
      this.nextPageToken = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'nextPageToken' field has been set */
    public boolean hasNextPageToken() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'nextPageToken' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder clearNextPageToken() {
      nextPageToken = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public SearchVariantSetsResponse build() {
      try {
        SearchVariantSetsResponse record = new SearchVariantSetsResponse();
        record.variantSets = fieldSetFlags()[0] ? this.variantSets : (java.util.List<org.ga4gh.models.VariantSet>) defaultValue(fields()[0]);
        record.nextPageToken = fieldSetFlags()[1] ? this.nextPageToken : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
