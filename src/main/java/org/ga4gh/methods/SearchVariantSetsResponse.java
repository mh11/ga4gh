/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.methods;  
@SuppressWarnings("all")
/** This is the response from `POST /variantsets/search` expressed as JSON. */
@org.apache.avro.specific.AvroGenerated
public class SearchVariantSetsResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SearchVariantSetsResponse\",\"namespace\":\"org.ga4gh.methods\",\"doc\":\"This is the response from `POST /variantsets/search` expressed as JSON.\",\"fields\":[{\"name\":\"variantSets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"VariantSet\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"`Variant` and `CallSet` both belong to a `VariantSet`.\\n`VariantSet` belongs to a `Dataset`.\\nThe variant set is equivalent to a VCF file.\\n\\nA `VariantSet` can contain novel sequences, which are used to augment the\\nsequence graph of its `ReferenceSet`, creating the augmented sequence graph\\nagainst which `Allele`s are interpreted.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The variant set ID.\"},{\"name\":\"datasetId\",\"type\":\"string\",\"doc\":\"The ID of the dataset this variant set belongs to.\"},{\"name\":\"referenceSetId\",\"type\":\"string\",\"doc\":\"The reference set the variants in this variant set are using.\"},{\"name\":\"metadata\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"VariantSetMetadata\",\"doc\":\"This metadata represents VCF header information.\",\"fields\":[{\"name\":\"key\",\"type\":\"string\",\"doc\":\"The top-level key.\"},{\"name\":\"value\",\"type\":\"string\",\"doc\":\"The value field for simple metadata.\"},{\"name\":\"id\",\"type\":\"string\",\"doc\":\"User-provided ID field, not enforced by this API.\\n  Two or more pieces of structured metadata with identical\\n  id and key fields are considered equivalent.\"},{\"name\":\"type\",\"type\":\"string\",\"doc\":\"The type of data.\"},{\"name\":\"number\",\"type\":\"string\",\"doc\":\"The number of values that can be included in a field described by this\\n  metadata.\"},{\"name\":\"description\",\"type\":\"string\",\"doc\":\"A textual description of this metadata.\"},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":\"string\"}},\"doc\":\"Remaining structured metadata key-value pairs.\",\"default\":{}}]}},\"doc\":\"The metadata associated with this variant set. This is equivalent to\\n  the VCF header information not already presented in first class fields.\",\"default\":[]}]}},\"doc\":\"The list of matching variant sets.\",\"default\":[]},{\"name\":\"nextPageToken\",\"type\":[\"null\",\"string\"],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  Provide this value in a subsequent request to return the next page of\\n  results. This field will be empty if there aren't any additional results.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The list of matching variant sets. */
   private java.util.List<org.ga4gh.models.VariantSet> variantSets;
  /** The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results. */
   private java.lang.CharSequence nextPageToken;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SearchVariantSetsResponse() {}

  /**
   * All-args constructor.
   */
  public SearchVariantSetsResponse(java.util.List<org.ga4gh.models.VariantSet> variantSets, java.lang.CharSequence nextPageToken) {
    this.variantSets = variantSets;
    this.nextPageToken = nextPageToken;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return variantSets;
    case 1: return nextPageToken;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: variantSets = (java.util.List<org.ga4gh.models.VariantSet>)value$; break;
    case 1: nextPageToken = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'variantSets' field.
   * The list of matching variant sets.   */
  public java.util.List<org.ga4gh.models.VariantSet> getVariantSets() {
    return variantSets;
  }

  /**
   * Sets the value of the 'variantSets' field.
   * The list of matching variant sets.   * @param value the value to set.
   */
  public void setVariantSets(java.util.List<org.ga4gh.models.VariantSet> value) {
    this.variantSets = value;
  }

  /**
   * Gets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   */
  public java.lang.CharSequence getNextPageToken() {
    return nextPageToken;
  }

  /**
   * Sets the value of the 'nextPageToken' field.
   * The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.   * @param value the value to set.
   */
  public void setNextPageToken(java.lang.CharSequence value) {
    this.nextPageToken = value;
  }

  /** Creates a new SearchVariantSetsResponse RecordBuilder */
  public static org.ga4gh.methods.SearchVariantSetsResponse.Builder newBuilder() {
    return new org.ga4gh.methods.SearchVariantSetsResponse.Builder();
  }
  
  /** Creates a new SearchVariantSetsResponse RecordBuilder by copying an existing Builder */
  public static org.ga4gh.methods.SearchVariantSetsResponse.Builder newBuilder(org.ga4gh.methods.SearchVariantSetsResponse.Builder other) {
    return new org.ga4gh.methods.SearchVariantSetsResponse.Builder(other);
  }
  
  /** Creates a new SearchVariantSetsResponse RecordBuilder by copying an existing SearchVariantSetsResponse instance */
  public static org.ga4gh.methods.SearchVariantSetsResponse.Builder newBuilder(org.ga4gh.methods.SearchVariantSetsResponse other) {
    return new org.ga4gh.methods.SearchVariantSetsResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for SearchVariantSetsResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SearchVariantSetsResponse>
    implements org.apache.avro.data.RecordBuilder<SearchVariantSetsResponse> {

    private java.util.List<org.ga4gh.models.VariantSet> variantSets;
    private java.lang.CharSequence nextPageToken;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.methods.SearchVariantSetsResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.methods.SearchVariantSetsResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.variantSets)) {
        this.variantSets = data().deepCopy(fields()[0].schema(), other.variantSets);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[1].schema(), other.nextPageToken);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SearchVariantSetsResponse instance */
    private Builder(org.ga4gh.methods.SearchVariantSetsResponse other) {
            super(org.ga4gh.methods.SearchVariantSetsResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.variantSets)) {
        this.variantSets = data().deepCopy(fields()[0].schema(), other.variantSets);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nextPageToken)) {
        this.nextPageToken = data().deepCopy(fields()[1].schema(), other.nextPageToken);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'variantSets' field */
    public java.util.List<org.ga4gh.models.VariantSet> getVariantSets() {
      return variantSets;
    }
    
    /** Sets the value of the 'variantSets' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder setVariantSets(java.util.List<org.ga4gh.models.VariantSet> value) {
      validate(fields()[0], value);
      this.variantSets = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'variantSets' field has been set */
    public boolean hasVariantSets() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'variantSets' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder clearVariantSets() {
      variantSets = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'nextPageToken' field */
    public java.lang.CharSequence getNextPageToken() {
      return nextPageToken;
    }
    
    /** Sets the value of the 'nextPageToken' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder setNextPageToken(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.nextPageToken = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'nextPageToken' field has been set */
    public boolean hasNextPageToken() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'nextPageToken' field */
    public org.ga4gh.methods.SearchVariantSetsResponse.Builder clearNextPageToken() {
      nextPageToken = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public SearchVariantSetsResponse build() {
      try {
        SearchVariantSetsResponse record = new SearchVariantSetsResponse();
        record.variantSets = fieldSetFlags()[0] ? this.variantSets : (java.util.List<org.ga4gh.models.VariantSet>) defaultValue(fields()[0]);
        record.nextPageToken = fieldSetFlags()[1] ? this.nextPageToken : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
