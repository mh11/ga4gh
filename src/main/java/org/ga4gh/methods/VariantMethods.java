/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.methods;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public interface VariantMethods {
  public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse("{\"protocol\":\"VariantMethods\",\"namespace\":\"org.ga4gh.methods\",\"types\":[{\"type\":\"error\",\"name\":\"GAException\",\"doc\":\"A general exception type.\",\"fields\":[{\"name\":\"message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The error message\"},{\"name\":\"errorCode\",\"type\":\"int\",\"doc\":\"The numerical error code\",\"default\":-1}]},{\"type\":\"enum\",\"name\":\"Strand\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"Indicates the DNA strand associate for some data item.\\n* `NEG_STRAND`: The negative (-) strand.\\n* `POS_STRAND`:  The postive (+) strand.\",\"symbols\":[\"NEG_STRAND\",\"POS_STRAND\"]},{\"type\":\"record\",\"name\":\"Position\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A `Position` is an unoriented base in some `Reference`. A `Position` is\\nrepresented by a `Reference` name, and a base number on that `Reference`\\n(0-based).\",\"fields\":[{\"name\":\"referenceName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The name of the `Reference` on which the `Position` is located.\"},{\"name\":\"position\",\"type\":\"long\",\"doc\":\"The 0-based offset from the start of the forward strand for that `Reference`.\\n  Genomic positions are non-negative integers less than `Reference` length.\"},{\"name\":\"strand\",\"type\":\"Strand\",\"doc\":\"Strand the position is associated with.\"}]},{\"type\":\"record\",\"name\":\"ExternalIdentifier\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"Identifier from a public database\",\"fields\":[{\"name\":\"database\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The source of the identifier.\\n  (e.g. `Ensembl`)\"},{\"name\":\"identifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID defined by the external database.\\n  (e.g. `ENST00000000000`)\"},{\"name\":\"version\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The version of the object or the database\\n  (e.g. `78`)\"}]},{\"type\":\"enum\",\"name\":\"CigarOperation\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"An enum for the different types of CIGAR alignment operations that exist.\\nUsed wherever CIGAR alignments are used. The different enumerated values\\nhave the following usage:\\n\\n* `ALIGNMENT_MATCH`: An alignment match indicates that a sequence can be\\n  aligned to the reference without evidence of an INDEL. Unlike the\\n  `SEQUENCE_MATCH` and `SEQUENCE_MISMATCH` operators, the `ALIGNMENT_MATCH`\\n  operator does not indicate whether the reference and read sequences are an\\n  exact match. This operator is equivalent to SAM's `M`.\\n* `INSERT`: The insert operator indicates that the read contains evidence of\\n  bases being inserted into the reference. This operator is equivalent to\\n  SAM's `I`.\\n* `DELETE`: The delete operator indicates that the read contains evidence of\\n  bases being deleted from the reference. This operator is equivalent to\\n  SAM's `D`.\\n* `SKIP`: The skip operator indicates that this read skips a long segment of\\n  the reference, but the bases have not been deleted. This operator is\\n  commonly used when working with RNA-seq data, where reads may skip long\\n  segments of the reference between exons. This operator is equivalent to\\n  SAM's 'N'.\\n* `CLIP_SOFT`: The soft clip operator indicates that bases at the start/end\\n  of a read have not been considered during alignment. This may occur if the\\n  majority of a read maps, except for low quality bases at the start/end of\\n  a read. This operator is equivalent to SAM's 'S'. Bases that are soft clipped\\n  will still be stored in the read.\\n* `CLIP_HARD`: The hard clip operator indicates that bases at the start/end of\\n  a read have been omitted from this alignment. This may occur if this linear\\n  alignment is part of a chimeric alignment, or if the read has been trimmed\\n  (e.g., during error correction, or to trim poly-A tails for RNA-seq). This\\n  operator is equivalent to SAM's 'H'.\\n* `PAD`: The pad operator indicates that there is padding in an alignment.\\n  This operator is equivalent to SAM's 'P'.\\n* `SEQUENCE_MATCH`: This operator indicates that this portion of the aligned\\n  sequence exactly matches the reference (e.g., all bases are equal to the\\n  reference bases). This operator is equivalent to SAM's '='.\\n* `SEQUENCE_MISMATCH`: This operator indicates that this portion of the\\n  aligned sequence is an alignment match to the reference, but a sequence\\n  mismatch (e.g., the bases are not equal to the reference). This can\\n  indicate a SNP or a read error. This operator is equivalent to SAM's 'X'.\",\"symbols\":[\"ALIGNMENT_MATCH\",\"INSERT\",\"DELETE\",\"SKIP\",\"CLIP_SOFT\",\"CLIP_HARD\",\"PAD\",\"SEQUENCE_MATCH\",\"SEQUENCE_MISMATCH\"]},{\"type\":\"record\",\"name\":\"CigarUnit\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A structure for an instance of a CIGAR operation.\\n`FIXME: This belongs under Reads (only readAlignment refers to this)`\",\"fields\":[{\"name\":\"operation\",\"type\":\"CigarOperation\",\"doc\":\"The operation type.\"},{\"name\":\"operationLength\",\"type\":\"long\",\"doc\":\"The number of bases that the operation runs for.\"},{\"name\":\"referenceSequence\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"`referenceSequence` is only used at mismatches (`SEQUENCE_MISMATCH`)\\n  and deletions (`DELETE`). Filling this field replaces the MD tag.\\n  If the relevant information is not available, leave this field as `null`.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"VariantSetMetadata\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"Optional metadata associated with a variant set.\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The top-level key.\"},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The value field for simple metadata.\"},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"User-provided ID field, not enforced by this API.\\n  Two or more pieces of structured metadata with identical\\n  id and key fields are considered equivalent.\\n  `FIXME: If it's not enforced, then why can't it be null?`\"},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The type of data.\"},{\"name\":\"number\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The number of values that can be included in a field described by this\\n  metadata.\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"A textual description of this metadata.\"},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"Remaining structured metadata key-value pairs.\",\"default\":{}}]},{\"type\":\"record\",\"name\":\"VariantSet\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A VariantSet is a collection of variants and variant calls intended to be analyzed together.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The variant set ID.\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The variant set name.\",\"default\":null},{\"name\":\"datasetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the dataset this variant set belongs to.\"},{\"name\":\"referenceSetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the reference set that describes the sequences used by the variants in this set.\"},{\"name\":\"metadata\",\"type\":{\"type\":\"array\",\"items\":\"VariantSetMetadata\"},\"doc\":\"Optional metadata associated with this variant set.\\n  This array can be used to store information about the variant set, such as information found\\n  in VCF header fields, that isn't already available in first class fields such as \\\"name\\\".\",\"default\":[]}]},{\"type\":\"record\",\"name\":\"CallSet\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A CallSet is a collection of calls that were generated by the same analysis of the same sample.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The call set ID.\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The call set name.\",\"default\":null},{\"name\":\"sampleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The sample this call set's data was generated from.\\n  Note: the current API does not have a rigorous definition of sample. Therefore, this\\n  field actually contains an arbitrary string, typi","cally corresponding to the sampleId\\n  field in the read groups used to generate this call set.\"},{\"name\":\"variantSetIds\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"The IDs of the variant sets this call set has calls in.\",\"default\":[]},{\"name\":\"created\",\"type\":[\"null\",\"long\"],\"doc\":\"The date this call set was created in milliseconds from the epoch.\",\"default\":null},{\"name\":\"updated\",\"type\":[\"null\",\"long\"],\"doc\":\"The time at which this call set was last updated in\\n  milliseconds from the epoch.\",\"default\":null},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"A map of additional call set information.\",\"default\":{}}]},{\"type\":\"record\",\"name\":\"Call\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A `Call` represents the determination of genotype with respect to a\\nparticular `Variant`.\\n\\nIt may include associated information such as quality\\nand phasing. For example, a call might assign a probability of 0.32 to\\nthe occurrence of a SNP named rs1234 in a call set with the name NA12345.\",\"fields\":[{\"name\":\"callSetName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of the call set this variant call belongs to.\\n  If this field is not present, the ordering of the call sets from a\\n  `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match\\n  the ordering of the calls on this `Variant`.\\n  The number of results will also be the same.\",\"default\":null},{\"name\":\"callSetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ID of the call set this variant call belongs to.\\n\\n  If this field is not present, the ordering of the call sets from a\\n  `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match\\n  the ordering of the calls on this `Variant`.\\n  The number of results will also be the same.\",\"default\":null},{\"name\":\"genotype\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"doc\":\"The genotype of this variant call.\\n\\n  A 0 value represents the reference allele of the associated `Variant`. Any\\n  other value is a 1-based index into the alternate alleles of the associated\\n  `Variant`.\\n\\n  If a variant had a referenceBases field of \\\"T\\\", an alternateBases\\n  value of [\\\"A\\\", \\\"C\\\"], and the genotype was [2, 1], that would mean the call\\n  represented the heterozygous value \\\"CA\\\" for this variant. If the genotype\\n  was instead [0, 1] the represented value would be \\\"TA\\\". Ordering of the\\n  genotype values is important if the phaseset field is present.\",\"default\":[]},{\"name\":\"phaseset\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"If this field is not null, this variant call's genotype ordering implies\\n  the phase of the bases and is consistent with any other variant calls on\\n  the same contig which have the same phaseset string.\",\"default\":null},{\"name\":\"genotypeLikelihood\",\"type\":{\"type\":\"array\",\"items\":\"double\"},\"doc\":\"The genotype likelihoods for this variant call. Each array entry\\n  represents how likely a specific genotype is for this call as\\n  log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The\\n  value ordering is defined by the GL tag in the VCF spec.\",\"default\":[]},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"A map of additional variant call information.\",\"default\":{}}]},{\"type\":\"record\",\"name\":\"Variant\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A `Variant` represents a change in DNA sequence relative to some reference.\\nFor example, a variant could represent a SNP or an insertion.\\nVariants belong to a `VariantSet`.\\nThis is equivalent to a row in VCF.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The variant ID.\"},{\"name\":\"variantSetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the `VariantSet` this variant belongs to. This transitively defines\\n  the `ReferenceSet` against which the `Variant` is to be interpreted.\"},{\"name\":\"names\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Names for the variant, for example a RefSNP ID.\",\"default\":[]},{\"name\":\"created\",\"type\":[\"null\",\"long\"],\"doc\":\"The date this variant was created in milliseconds from the epoch.\",\"default\":null},{\"name\":\"updated\",\"type\":[\"null\",\"long\"],\"doc\":\"The time at which this variant was last updated in\\n  milliseconds from the epoch.\",\"default\":null},{\"name\":\"referenceName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The reference on which this variant occurs.\\n  (e.g. `chr20` or `X`)\"},{\"name\":\"start\",\"type\":\"long\",\"doc\":\"The start position at which this variant occurs (0-based).\\n  This corresponds to the first base of the string of reference bases.\\n  Genomic positions are non-negative integers less than reference length.\\n  Variants spanning the join of circular genomes are represented as\\n  two variants one on each side of the join (position 0).\"},{\"name\":\"end\",\"type\":\"long\",\"doc\":\"The end position (exclusive), resulting in [start, end) closed-open interval.\\n  This is typically calculated by `start + referenceBases.length`.\"},{\"name\":\"referenceBases\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The reference bases for this variant. They start at the given start position.\"},{\"name\":\"alternateBases\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"The bases that appear instead of the reference bases. Multiple alternate\\n  alleles are possible.\",\"default\":[]},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"A map of additional variant information.\",\"default\":{}},{\"name\":\"calls\",\"type\":{\"type\":\"array\",\"items\":\"Call\"},\"doc\":\"The variant calls for this particular variant. Each one represents the\\n  determination of genotype with respect to this variant. `Call`s in this array\\n  are implicitly associated with this `Variant`.\",\"default\":[]}]},{\"type\":\"record\",\"name\":\"SearchVariantSetsRequest\",\"doc\":\"This request maps to the body of `POST /variantsets/search` as JSON.\",\"fields\":[{\"name\":\"datasetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The `Dataset` to search.\"},{\"name\":\"pageSize\",\"type\":[\"null\",\"int\"],\"doc\":\"Specifies the maximum number of results to return in a single page.\\n  If unspecified, a system default will be used.\",\"default\":null},{\"name\":\"pageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  To get the next page of results, set this parameter to the value of\\n  `nextPageToken` from the previous response.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"SearchVariantSetsResponse\",\"doc\":\"This is the response from `POST /variantsets/search` expressed as JSON.\",\"fields\":[{\"name\":\"variantSets\",\"type\":{\"type\":\"array\",\"items\":\"org.ga4gh.models.VariantSet\"},\"doc\":\"The list of matching variant sets.\",\"default\":[]},{\"name\":\"nextPageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  Provide this value in a subsequent request to return the next page of\\n  results. This field will be empty if there aren't any additional results.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"SearchVariantsRequest\",\"doc\":\"This request maps to the body of `POST /variants/search` as JSON.\",\"fields\":[{\"name\":\"variantSetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The `VariantSet` to search.\"},{\"name\":\"callSetIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Only return variant calls which belong to call sets with these IDs.\\n  If an empty array, returns variants without any call objects.\\n  If null, returns all variant calls.\",\"default\":null},{\"name\":\"referenceName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Required. Only return variants on this reference.\"},{\"name\":\"start\",\"","type\":\"long\",\"doc\":\"Required. The beginning of the window (0-based, inclusive) for\\n  which overlapping variants should be returned.\\n  Genomic positions are non-negative integers less than reference length.\\n  Requests spanning the join of circular genomes are represented as\\n  two requests one on each side of the join (position 0).\"},{\"name\":\"end\",\"type\":\"long\",\"doc\":\"Required. The end of the window (0-based, exclusive) for which overlapping\\n  variants should be returned.\"},{\"name\":\"pageSize\",\"type\":[\"null\",\"int\"],\"doc\":\"Specifies the maximum number of results to return in a single page.\\n  If unspecified, a system default will be used.\",\"default\":null},{\"name\":\"pageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  To get the next page of results, set this parameter to the value of\\n  `nextPageToken` from the previous response.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"SearchVariantsResponse\",\"doc\":\"This is the response from `POST /variants/search` expressed as JSON.\",\"fields\":[{\"name\":\"variants\",\"type\":{\"type\":\"array\",\"items\":\"org.ga4gh.models.Variant\"},\"doc\":\"The list of matching variants.\\n  If the `callSetId` field on the returned calls is not present,\\n  the ordering of the call sets from a `SearchCallSetsRequest`\\n  over the parent `VariantSet` is guaranteed to match the ordering\\n  of the calls on each `Variant`. The number of results will also be\\n  the same.\",\"default\":[]},{\"name\":\"nextPageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  Provide this value in a subsequent request to return the next page of\\n  results. This field will be empty if there aren't any additional results.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"SearchCallSetsRequest\",\"doc\":\"This request maps to the body of `POST /callsets/search` as JSON.\",\"fields\":[{\"name\":\"variantSetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The VariantSet to search.\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Only return call sets with this name (case-sensitive, exact match).\",\"default\":null},{\"name\":\"pageSize\",\"type\":[\"null\",\"int\"],\"doc\":\"Specifies the maximum number of results to return in a single page.\\n  If unspecified, a system default will be used.\",\"default\":null},{\"name\":\"pageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  To get the next page of results, set this parameter to the value of\\n  `nextPageToken` from the previous response.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"SearchCallSetsResponse\",\"doc\":\"This is the response from `POST /callsets/search` expressed as JSON.\",\"fields\":[{\"name\":\"callSets\",\"type\":{\"type\":\"array\",\"items\":\"org.ga4gh.models.CallSet\"},\"doc\":\"The list of matching call sets.\",\"default\":[]},{\"name\":\"nextPageToken\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The continuation token, which is used to page through large result sets.\\n  Provide this value in a subsequent request to return the next page of\\n  results. This field will be empty if there aren't any additional results.\",\"default\":null}]}],\"messages\":{\"searchVariantSets\":{\"doc\":\"Gets a list of `VariantSet` matching the search criteria.\\n\\n`POST /variantsets/search` must accept a JSON version of\\n`SearchVariantSetsRequest` as the post body and will return a JSON version\\nof `SearchVariantSetsResponse`.\",\"request\":[{\"name\":\"request\",\"type\":\"SearchVariantSetsRequest\"}],\"response\":\"SearchVariantSetsResponse\",\"errors\":[\"GAException\"]},\"getVariantSet\":{\"doc\":\"Gets a `VariantSet` by ID.\\n`GET /variantsets/{id}` will return a JSON version of `VariantSet`.\",\"request\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"response\":\"org.ga4gh.models.VariantSet\",\"errors\":[\"GAException\"]},\"searchVariants\":{\"doc\":\"Gets a list of `Variant` matching the search criteria.\\n\\n`POST /variants/search` must accept a JSON version of `SearchVariantsRequest`\\nas the post body and will return a JSON version of `SearchVariantsResponse`.\",\"request\":[{\"name\":\"request\",\"type\":\"SearchVariantsRequest\"}],\"response\":\"SearchVariantsResponse\",\"errors\":[\"GAException\"]},\"getVariant\":{\"doc\":\"Gets a `Variant` by ID.\\n`GET /variants/{id}` will return a JSON version of `Variant`.\",\"request\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"response\":\"org.ga4gh.models.Variant\",\"errors\":[\"GAException\"]},\"searchCallSets\":{\"doc\":\"Gets a list of `CallSet` matching the search criteria.\\n\\n`POST /callsets/search` must accept a JSON version of `SearchCallSetsRequest`\\nas the post body and will return a JSON version of `SearchCallSetsResponse`.\",\"request\":[{\"name\":\"request\",\"type\":\"SearchCallSetsRequest\"}],\"response\":\"SearchCallSetsResponse\",\"errors\":[\"GAException\"]},\"getCallSet\":{\"doc\":\"Gets a `CallSet` by ID.\\n`GET /callsets/{id}` will return a JSON version of `CallSet`.\",\"request\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"response\":\"org.ga4gh.models.CallSet\",\"errors\":[\"GAException\"]}}}");
  /** Gets a list of `VariantSet` matching the search criteria.

`POST /variantsets/search` must accept a JSON version of
`SearchVariantSetsRequest` as the post body and will return a JSON version
of `SearchVariantSetsResponse`. */
  org.ga4gh.methods.SearchVariantSetsResponse searchVariantSets(org.ga4gh.methods.SearchVariantSetsRequest request) throws org.apache.avro.AvroRemoteException, org.ga4gh.methods.GAException;
  /** Gets a `VariantSet` by ID.
`GET /variantsets/{id}` will return a JSON version of `VariantSet`. */
  org.ga4gh.models.VariantSet getVariantSet(java.lang.String id) throws org.apache.avro.AvroRemoteException, org.ga4gh.methods.GAException;
  /** Gets a list of `Variant` matching the search criteria.

`POST /variants/search` must accept a JSON version of `SearchVariantsRequest`
as the post body and will return a JSON version of `SearchVariantsResponse`. */
  org.ga4gh.methods.SearchVariantsResponse searchVariants(org.ga4gh.methods.SearchVariantsRequest request) throws org.apache.avro.AvroRemoteException, org.ga4gh.methods.GAException;
  /** Gets a `Variant` by ID.
`GET /variants/{id}` will return a JSON version of `Variant`. */
  org.ga4gh.models.Variant getVariant(java.lang.String id) throws org.apache.avro.AvroRemoteException, org.ga4gh.methods.GAException;
  /** Gets a list of `CallSet` matching the search criteria.

`POST /callsets/search` must accept a JSON version of `SearchCallSetsRequest`
as the post body and will return a JSON version of `SearchCallSetsResponse`. */
  org.ga4gh.methods.SearchCallSetsResponse searchCallSets(org.ga4gh.methods.SearchCallSetsRequest request) throws org.apache.avro.AvroRemoteException, org.ga4gh.methods.GAException;
  /** Gets a `CallSet` by ID.
`GET /callsets/{id}` will return a JSON version of `CallSet`. */
  org.ga4gh.models.CallSet getCallSet(java.lang.String id) throws org.apache.avro.AvroRemoteException, org.ga4gh.methods.GAException;

  @SuppressWarnings("all")
  public interface Callback extends VariantMethods {
    public static final org.apache.avro.Protocol PROTOCOL = org.ga4gh.methods.VariantMethods.PROTOCOL;
    /** Gets a list of `VariantSet` matching the search criteria.

`POST /variantsets/search` must accept a JSON version of
`SearchVariantSetsRequest` as the post body and will return a JSON version
of `SearchVariantSetsResponse`. */
    void searchVariantSets(org.ga4gh.methods.SearchVariantSetsRequest request, org.apache.avro.ipc.Callback<org.ga4gh.methods.SearchVariantSetsResponse> callback) throws java.io.IOException;
    /** Gets a `VariantSet` by ID.
`GET /variantsets/{id}` will return a JSON version of `VariantSet`. */
    void getVariantSet(java.lang.String id, org.apache.avro.ipc.Callback<org.ga4gh.models.VariantSet> callback) throws java.io.IOException;
    /** Gets a list of `Variant` matching the search criteria.

`POST /variants/search` must accept a JSON version of `SearchVariantsRequest`
as the post body and will return a JSON version of `SearchVariantsResponse`. */
    void searchVariants(org.ga4gh.methods.SearchVariantsRequest request, org.apache.avro.ipc.Callback<org.ga4gh.methods.SearchVariantsResponse> callback) throws java.io.IOException;
    /** Gets a `Variant` by ID.
`GET /variants/{id}` will return a JSON version of `Variant`. */
    void getVariant(java.lang.String id, org.apache.avro.ipc.Callback<org.ga4gh.models.Variant> callback) throws java.io.IOException;
    /** Gets a list of `CallSet` matching the search criteria.

`POST /callsets/search` must accept a JSON version of `SearchCallSetsRequest`
as the post body and will return a JSON version of `SearchCallSetsResponse`. */
    void searchCallSets(org.ga4gh.methods.SearchCallSetsRequest request, org.apache.avro.ipc.Callback<org.ga4gh.methods.SearchCallSetsResponse> callback) throws java.io.IOException;
    /** Gets a `CallSet` by ID.
`GET /callsets/{id}` will return a JSON version of `CallSet`. */
    void getCallSet(java.lang.String id, org.apache.avro.ipc.Callback<org.ga4gh.models.CallSet> callback) throws java.io.IOException;
  }
}