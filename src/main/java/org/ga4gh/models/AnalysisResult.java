/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
/** An AnalysisResult record holds the output of a prediction package such
as SIFT on a specific allele. */
@org.apache.avro.specific.AvroGenerated
public class AnalysisResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AnalysisResult\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"An AnalysisResult record holds the output of a prediction package such\\nas SIFT on a specific allele.\",\"fields\":[{\"name\":\"analysisId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the analysis record for this result\"},{\"name\":\"result\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The text-based result for this analysis\"},{\"name\":\"score\",\"type\":[\"null\",\"int\"],\"doc\":\"The numeric score for this analysis\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The ID of the analysis record for this result */
   private java.lang.String analysisId;
  /** The text-based result for this analysis */
   private java.lang.String result;
  /** The numeric score for this analysis */
   private java.lang.Integer score;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AnalysisResult() {}

  /**
   * All-args constructor.
   */
  public AnalysisResult(java.lang.String analysisId, java.lang.String result, java.lang.Integer score) {
    this.analysisId = analysisId;
    this.result = result;
    this.score = score;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return analysisId;
    case 1: return result;
    case 2: return score;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: analysisId = (java.lang.String)value$; break;
    case 1: result = (java.lang.String)value$; break;
    case 2: score = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'analysisId' field.
   * The ID of the analysis record for this result   */
  public java.lang.String getAnalysisId() {
    return analysisId;
  }

  /**
   * Sets the value of the 'analysisId' field.
   * The ID of the analysis record for this result   * @param value the value to set.
   */
  public void setAnalysisId(java.lang.String value) {
    this.analysisId = value;
  }

  /**
   * Gets the value of the 'result' field.
   * The text-based result for this analysis   */
  public java.lang.String getResult() {
    return result;
  }

  /**
   * Sets the value of the 'result' field.
   * The text-based result for this analysis   * @param value the value to set.
   */
  public void setResult(java.lang.String value) {
    this.result = value;
  }

  /**
   * Gets the value of the 'score' field.
   * The numeric score for this analysis   */
  public java.lang.Integer getScore() {
    return score;
  }

  /**
   * Sets the value of the 'score' field.
   * The numeric score for this analysis   * @param value the value to set.
   */
  public void setScore(java.lang.Integer value) {
    this.score = value;
  }

  /** Creates a new AnalysisResult RecordBuilder */
  public static org.ga4gh.models.AnalysisResult.Builder newBuilder() {
    return new org.ga4gh.models.AnalysisResult.Builder();
  }
  
  /** Creates a new AnalysisResult RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.AnalysisResult.Builder newBuilder(org.ga4gh.models.AnalysisResult.Builder other) {
    return new org.ga4gh.models.AnalysisResult.Builder(other);
  }
  
  /** Creates a new AnalysisResult RecordBuilder by copying an existing AnalysisResult instance */
  public static org.ga4gh.models.AnalysisResult.Builder newBuilder(org.ga4gh.models.AnalysisResult other) {
    return new org.ga4gh.models.AnalysisResult.Builder(other);
  }
  
  /**
   * RecordBuilder for AnalysisResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AnalysisResult>
    implements org.apache.avro.data.RecordBuilder<AnalysisResult> {

    private java.lang.String analysisId;
    private java.lang.String result;
    private java.lang.Integer score;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.AnalysisResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.AnalysisResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.analysisId)) {
        this.analysisId = data().deepCopy(fields()[0].schema(), other.analysisId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.result)) {
        this.result = data().deepCopy(fields()[1].schema(), other.result);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.score)) {
        this.score = data().deepCopy(fields()[2].schema(), other.score);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AnalysisResult instance */
    private Builder(org.ga4gh.models.AnalysisResult other) {
            super(org.ga4gh.models.AnalysisResult.SCHEMA$);
      if (isValidValue(fields()[0], other.analysisId)) {
        this.analysisId = data().deepCopy(fields()[0].schema(), other.analysisId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.result)) {
        this.result = data().deepCopy(fields()[1].schema(), other.result);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.score)) {
        this.score = data().deepCopy(fields()[2].schema(), other.score);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'analysisId' field */
    public java.lang.String getAnalysisId() {
      return analysisId;
    }
    
    /** Sets the value of the 'analysisId' field */
    public org.ga4gh.models.AnalysisResult.Builder setAnalysisId(java.lang.String value) {
      validate(fields()[0], value);
      this.analysisId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'analysisId' field has been set */
    public boolean hasAnalysisId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'analysisId' field */
    public org.ga4gh.models.AnalysisResult.Builder clearAnalysisId() {
      analysisId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'result' field */
    public java.lang.String getResult() {
      return result;
    }
    
    /** Sets the value of the 'result' field */
    public org.ga4gh.models.AnalysisResult.Builder setResult(java.lang.String value) {
      validate(fields()[1], value);
      this.result = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'result' field has been set */
    public boolean hasResult() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'result' field */
    public org.ga4gh.models.AnalysisResult.Builder clearResult() {
      result = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'score' field */
    public java.lang.Integer getScore() {
      return score;
    }
    
    /** Sets the value of the 'score' field */
    public org.ga4gh.models.AnalysisResult.Builder setScore(java.lang.Integer value) {
      validate(fields()[2], value);
      this.score = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'score' field has been set */
    public boolean hasScore() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'score' field */
    public org.ga4gh.models.AnalysisResult.Builder clearScore() {
      score = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public AnalysisResult build() {
      try {
        AnalysisResult record = new AnalysisResult();
        record.analysisId = fieldSetFlags()[0] ? this.analysisId : (java.lang.String) defaultValue(fields()[0]);
        record.result = fieldSetFlags()[1] ? this.result : (java.lang.String) defaultValue(fields()[1]);
        record.score = fieldSetFlags()[2] ? this.score : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
