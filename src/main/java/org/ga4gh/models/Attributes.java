/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
/** Type defining a collection of attributes associated with various protocol
  records.  Each attribute is a name that maps to an array of one or more
  values.  Values can be strings, external identifiers, or ontology terms.
  Values should be split into the array elements instead of using a separator
  syntax that needs to parsed. */
@org.apache.avro.specific.AvroGenerated
public class Attributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Attributes\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"Type defining a collection of attributes associated with various protocol\\n  records.  Each attribute is a name that maps to an array of one or more\\n  values.  Values can be strings, external identifiers, or ontology terms.\\n  Values should be split into the array elements instead of using a separator\\n  syntax that needs to parsed.\",\"fields\":[{\"name\":\"vals\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},{\"type\":\"record\",\"name\":\"ExternalIdentifier\",\"doc\":\"Identifier from a public database\",\"fields\":[{\"name\":\"database\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The source of the identifier.\\n  (e.g. `Ensembl`)\"},{\"name\":\"identifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID defined by the external database.\\n  (e.g. `ENST00000000000`)\"},{\"name\":\"version\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The version of the object or the database\\n  (e.g. `78`)\"}]},{\"type\":\"record\",\"name\":\"OntologyTerm\",\"doc\":\"An ontology term describing an attribute. (e.g. the phenotype attribute\\n  'polydactyly' from HPO)\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Ontology source identifier - the identifier, a CURIE (preferred) or\\n  PURL for an ontology source e.g. http://purl.obolibrary.org/obo/hp.obo\\n  It differs from the standard GA4GH schema's :ref:`id <apidesign_object_ids>`\\n  in that it is a URI pointing to an information resource outside of the scope\\n  of the schema or its resource implementation.\"},{\"name\":\"term\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Ontology term - the representation the id is pointing to.\",\"default\":null},{\"name\":\"sourceName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Ontology source name - the name of ontology from which the term is obtained\\n  e.g. 'Human Phenotype Ontology'\",\"default\":null},{\"name\":\"sourceVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Ontology source version - the version of the ontology from which the\\n  OntologyTerm is obtained; e.g. 2.6.1.\\n  There is no standard for ontology versioning and some frequently\\n  released ontologies may use a datestamp, or build number.\",\"default\":null}]}]},\"avro.java.string\":\"String\"},\"default\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.util.Map<java.lang.String,java.util.List<java.lang.Object>> vals;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Attributes() {}

  /**
   * All-args constructor.
   */
  public Attributes(java.util.Map<java.lang.String,java.util.List<java.lang.Object>> vals) {
    this.vals = vals;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return vals;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: vals = (java.util.Map<java.lang.String,java.util.List<java.lang.Object>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'vals' field.
   */
  public java.util.Map<java.lang.String,java.util.List<java.lang.Object>> getVals() {
    return vals;
  }

  /**
   * Sets the value of the 'vals' field.
   * @param value the value to set.
   */
  public void setVals(java.util.Map<java.lang.String,java.util.List<java.lang.Object>> value) {
    this.vals = value;
  }

  /** Creates a new Attributes RecordBuilder */
  public static org.ga4gh.models.Attributes.Builder newBuilder() {
    return new org.ga4gh.models.Attributes.Builder();
  }
  
  /** Creates a new Attributes RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.Attributes.Builder newBuilder(org.ga4gh.models.Attributes.Builder other) {
    return new org.ga4gh.models.Attributes.Builder(other);
  }
  
  /** Creates a new Attributes RecordBuilder by copying an existing Attributes instance */
  public static org.ga4gh.models.Attributes.Builder newBuilder(org.ga4gh.models.Attributes other) {
    return new org.ga4gh.models.Attributes.Builder(other);
  }
  
  /**
   * RecordBuilder for Attributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Attributes>
    implements org.apache.avro.data.RecordBuilder<Attributes> {

    private java.util.Map<java.lang.String,java.util.List<java.lang.Object>> vals;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.Attributes.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.Attributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.vals)) {
        this.vals = data().deepCopy(fields()[0].schema(), other.vals);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Attributes instance */
    private Builder(org.ga4gh.models.Attributes other) {
            super(org.ga4gh.models.Attributes.SCHEMA$);
      if (isValidValue(fields()[0], other.vals)) {
        this.vals = data().deepCopy(fields()[0].schema(), other.vals);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'vals' field */
    public java.util.Map<java.lang.String,java.util.List<java.lang.Object>> getVals() {
      return vals;
    }
    
    /** Sets the value of the 'vals' field */
    public org.ga4gh.models.Attributes.Builder setVals(java.util.Map<java.lang.String,java.util.List<java.lang.Object>> value) {
      validate(fields()[0], value);
      this.vals = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'vals' field has been set */
    public boolean hasVals() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'vals' field */
    public org.ga4gh.models.Attributes.Builder clearVals() {
      vals = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Attributes build() {
      try {
        Attributes record = new Attributes();
        record.vals = fieldSetFlags()[0] ? this.vals : (java.util.Map<java.lang.String,java.util.List<java.lang.Object>>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
