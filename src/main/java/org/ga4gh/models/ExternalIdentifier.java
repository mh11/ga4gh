/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
/** Identifier from a public database */
@org.apache.avro.specific.AvroGenerated
public class ExternalIdentifier extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExternalIdentifier\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"Identifier from a public database\",\"fields\":[{\"name\":\"database\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The source of the identifier.\\n  (e.g. `Ensembl`)\"},{\"name\":\"identifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID defined by the external database.\\n  (e.g. `ENST00000000000`)\"},{\"name\":\"version\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The version of the object or the database\\n  (e.g. `78`)\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The source of the identifier.
  (e.g. `Ensembl`) */
   private java.lang.String database;
  /** The ID defined by the external database.
  (e.g. `ENST00000000000`) */
   private java.lang.String identifier;
  /** The version of the object or the database
  (e.g. `78`) */
   private java.lang.String version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ExternalIdentifier() {}

  /**
   * All-args constructor.
   */
  public ExternalIdentifier(java.lang.String database, java.lang.String identifier, java.lang.String version) {
    this.database = database;
    this.identifier = identifier;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return database;
    case 1: return identifier;
    case 2: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: database = (java.lang.String)value$; break;
    case 1: identifier = (java.lang.String)value$; break;
    case 2: version = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'database' field.
   * The source of the identifier.
  (e.g. `Ensembl`)   */
  public java.lang.String getDatabase() {
    return database;
  }

  /**
   * Sets the value of the 'database' field.
   * The source of the identifier.
  (e.g. `Ensembl`)   * @param value the value to set.
   */
  public void setDatabase(java.lang.String value) {
    this.database = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * The ID defined by the external database.
  (e.g. `ENST00000000000`)   */
  public java.lang.String getIdentifier() {
    return identifier;
  }

  /**
   * Sets the value of the 'identifier' field.
   * The ID defined by the external database.
  (e.g. `ENST00000000000`)   * @param value the value to set.
   */
  public void setIdentifier(java.lang.String value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'version' field.
   * The version of the object or the database
  (e.g. `78`)   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * The version of the object or the database
  (e.g. `78`)   * @param value the value to set.
   */
  public void setVersion(java.lang.String value) {
    this.version = value;
  }

  /** Creates a new ExternalIdentifier RecordBuilder */
  public static org.ga4gh.models.ExternalIdentifier.Builder newBuilder() {
    return new org.ga4gh.models.ExternalIdentifier.Builder();
  }
  
  /** Creates a new ExternalIdentifier RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.ExternalIdentifier.Builder newBuilder(org.ga4gh.models.ExternalIdentifier.Builder other) {
    return new org.ga4gh.models.ExternalIdentifier.Builder(other);
  }
  
  /** Creates a new ExternalIdentifier RecordBuilder by copying an existing ExternalIdentifier instance */
  public static org.ga4gh.models.ExternalIdentifier.Builder newBuilder(org.ga4gh.models.ExternalIdentifier other) {
    return new org.ga4gh.models.ExternalIdentifier.Builder(other);
  }
  
  /**
   * RecordBuilder for ExternalIdentifier instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExternalIdentifier>
    implements org.apache.avro.data.RecordBuilder<ExternalIdentifier> {

    private java.lang.String database;
    private java.lang.String identifier;
    private java.lang.String version;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.ExternalIdentifier.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.ExternalIdentifier.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.database)) {
        this.database = data().deepCopy(fields()[0].schema(), other.database);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identifier)) {
        this.identifier = data().deepCopy(fields()[1].schema(), other.identifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ExternalIdentifier instance */
    private Builder(org.ga4gh.models.ExternalIdentifier other) {
            super(org.ga4gh.models.ExternalIdentifier.SCHEMA$);
      if (isValidValue(fields()[0], other.database)) {
        this.database = data().deepCopy(fields()[0].schema(), other.database);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identifier)) {
        this.identifier = data().deepCopy(fields()[1].schema(), other.identifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'database' field */
    public java.lang.String getDatabase() {
      return database;
    }
    
    /** Sets the value of the 'database' field */
    public org.ga4gh.models.ExternalIdentifier.Builder setDatabase(java.lang.String value) {
      validate(fields()[0], value);
      this.database = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'database' field has been set */
    public boolean hasDatabase() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'database' field */
    public org.ga4gh.models.ExternalIdentifier.Builder clearDatabase() {
      database = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'identifier' field */
    public java.lang.String getIdentifier() {
      return identifier;
    }
    
    /** Sets the value of the 'identifier' field */
    public org.ga4gh.models.ExternalIdentifier.Builder setIdentifier(java.lang.String value) {
      validate(fields()[1], value);
      this.identifier = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'identifier' field has been set */
    public boolean hasIdentifier() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'identifier' field */
    public org.ga4gh.models.ExternalIdentifier.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'version' field */
    public java.lang.String getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public org.ga4gh.models.ExternalIdentifier.Builder setVersion(java.lang.String value) {
      validate(fields()[2], value);
      this.version = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'version' field */
    public org.ga4gh.models.ExternalIdentifier.Builder clearVersion() {
      version = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ExternalIdentifier build() {
      try {
        ExternalIdentifier record = new ExternalIdentifier();
        record.database = fieldSetFlags()[0] ? this.database : (java.lang.String) defaultValue(fields()[0]);
        record.identifier = fieldSetFlags()[1] ? this.identifier : (java.lang.String) defaultValue(fields()[1]);
        record.version = fieldSetFlags()[2] ? this.version : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
