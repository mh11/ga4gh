/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FeatureSet extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FeatureSet\",\"namespace\":\"org.ga4gh.models\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of this annotation set.\"},{\"name\":\"datasetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the dataset this annotation set belongs to.\"},{\"name\":\"referenceSetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ID of the reference set which defines the coordinate-space for this\\n    set of annotations.\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The display name for this annotation set.\",\"default\":null},{\"name\":\"sourceURI\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The source URI describing the file from which this annotation set was\\n    generated, if any.\",\"default\":null},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"Remaining structured metadata key-value pairs.\",\"default\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The ID of this annotation set. */
   private java.lang.String id;
  /** The ID of the dataset this annotation set belongs to. */
   private java.lang.String datasetId;
  /** The ID of the reference set which defines the coordinate-space for this
    set of annotations. */
   private java.lang.String referenceSetId;
  /** The display name for this annotation set. */
   private java.lang.String name;
  /** The source URI describing the file from which this annotation set was
    generated, if any. */
   private java.lang.String sourceURI;
  /** Remaining structured metadata key-value pairs. */
   private java.util.Map<java.lang.String,java.util.List<java.lang.String>> info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FeatureSet() {}

  /**
   * All-args constructor.
   */
  public FeatureSet(java.lang.String id, java.lang.String datasetId, java.lang.String referenceSetId, java.lang.String name, java.lang.String sourceURI, java.util.Map<java.lang.String,java.util.List<java.lang.String>> info) {
    this.id = id;
    this.datasetId = datasetId;
    this.referenceSetId = referenceSetId;
    this.name = name;
    this.sourceURI = sourceURI;
    this.info = info;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return datasetId;
    case 2: return referenceSetId;
    case 3: return name;
    case 4: return sourceURI;
    case 5: return info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: datasetId = (java.lang.String)value$; break;
    case 2: referenceSetId = (java.lang.String)value$; break;
    case 3: name = (java.lang.String)value$; break;
    case 4: sourceURI = (java.lang.String)value$; break;
    case 5: info = (java.util.Map<java.lang.String,java.util.List<java.lang.String>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * The ID of this annotation set.   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The ID of this annotation set.   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'datasetId' field.
   * The ID of the dataset this annotation set belongs to.   */
  public java.lang.String getDatasetId() {
    return datasetId;
  }

  /**
   * Sets the value of the 'datasetId' field.
   * The ID of the dataset this annotation set belongs to.   * @param value the value to set.
   */
  public void setDatasetId(java.lang.String value) {
    this.datasetId = value;
  }

  /**
   * Gets the value of the 'referenceSetId' field.
   * The ID of the reference set which defines the coordinate-space for this
    set of annotations.   */
  public java.lang.String getReferenceSetId() {
    return referenceSetId;
  }

  /**
   * Sets the value of the 'referenceSetId' field.
   * The ID of the reference set which defines the coordinate-space for this
    set of annotations.   * @param value the value to set.
   */
  public void setReferenceSetId(java.lang.String value) {
    this.referenceSetId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * The display name for this annotation set.   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * The display name for this annotation set.   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'sourceURI' field.
   * The source URI describing the file from which this annotation set was
    generated, if any.   */
  public java.lang.String getSourceURI() {
    return sourceURI;
  }

  /**
   * Sets the value of the 'sourceURI' field.
   * The source URI describing the file from which this annotation set was
    generated, if any.   * @param value the value to set.
   */
  public void setSourceURI(java.lang.String value) {
    this.sourceURI = value;
  }

  /**
   * Gets the value of the 'info' field.
   * Remaining structured metadata key-value pairs.   */
  public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getInfo() {
    return info;
  }

  /**
   * Sets the value of the 'info' field.
   * Remaining structured metadata key-value pairs.   * @param value the value to set.
   */
  public void setInfo(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
    this.info = value;
  }

  /** Creates a new FeatureSet RecordBuilder */
  public static org.ga4gh.models.FeatureSet.Builder newBuilder() {
    return new org.ga4gh.models.FeatureSet.Builder();
  }
  
  /** Creates a new FeatureSet RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.FeatureSet.Builder newBuilder(org.ga4gh.models.FeatureSet.Builder other) {
    return new org.ga4gh.models.FeatureSet.Builder(other);
  }
  
  /** Creates a new FeatureSet RecordBuilder by copying an existing FeatureSet instance */
  public static org.ga4gh.models.FeatureSet.Builder newBuilder(org.ga4gh.models.FeatureSet other) {
    return new org.ga4gh.models.FeatureSet.Builder(other);
  }
  
  /**
   * RecordBuilder for FeatureSet instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FeatureSet>
    implements org.apache.avro.data.RecordBuilder<FeatureSet> {

    private java.lang.String id;
    private java.lang.String datasetId;
    private java.lang.String referenceSetId;
    private java.lang.String name;
    private java.lang.String sourceURI;
    private java.util.Map<java.lang.String,java.util.List<java.lang.String>> info;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.FeatureSet.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.FeatureSet.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datasetId)) {
        this.datasetId = data().deepCopy(fields()[1].schema(), other.datasetId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.referenceSetId)) {
        this.referenceSetId = data().deepCopy(fields()[2].schema(), other.referenceSetId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceURI)) {
        this.sourceURI = data().deepCopy(fields()[4].schema(), other.sourceURI);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.info)) {
        this.info = data().deepCopy(fields()[5].schema(), other.info);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FeatureSet instance */
    private Builder(org.ga4gh.models.FeatureSet other) {
            super(org.ga4gh.models.FeatureSet.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datasetId)) {
        this.datasetId = data().deepCopy(fields()[1].schema(), other.datasetId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.referenceSetId)) {
        this.referenceSetId = data().deepCopy(fields()[2].schema(), other.referenceSetId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceURI)) {
        this.sourceURI = data().deepCopy(fields()[4].schema(), other.sourceURI);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.info)) {
        this.info = data().deepCopy(fields()[5].schema(), other.info);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.models.FeatureSet.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.models.FeatureSet.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'datasetId' field */
    public java.lang.String getDatasetId() {
      return datasetId;
    }
    
    /** Sets the value of the 'datasetId' field */
    public org.ga4gh.models.FeatureSet.Builder setDatasetId(java.lang.String value) {
      validate(fields()[1], value);
      this.datasetId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetId' field has been set */
    public boolean hasDatasetId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'datasetId' field */
    public org.ga4gh.models.FeatureSet.Builder clearDatasetId() {
      datasetId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'referenceSetId' field */
    public java.lang.String getReferenceSetId() {
      return referenceSetId;
    }
    
    /** Sets the value of the 'referenceSetId' field */
    public org.ga4gh.models.FeatureSet.Builder setReferenceSetId(java.lang.String value) {
      validate(fields()[2], value);
      this.referenceSetId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'referenceSetId' field has been set */
    public boolean hasReferenceSetId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'referenceSetId' field */
    public org.ga4gh.models.FeatureSet.Builder clearReferenceSetId() {
      referenceSetId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.ga4gh.models.FeatureSet.Builder setName(java.lang.String value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'name' field */
    public org.ga4gh.models.FeatureSet.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'sourceURI' field */
    public java.lang.String getSourceURI() {
      return sourceURI;
    }
    
    /** Sets the value of the 'sourceURI' field */
    public org.ga4gh.models.FeatureSet.Builder setSourceURI(java.lang.String value) {
      validate(fields()[4], value);
      this.sourceURI = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'sourceURI' field has been set */
    public boolean hasSourceURI() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'sourceURI' field */
    public org.ga4gh.models.FeatureSet.Builder clearSourceURI() {
      sourceURI = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'info' field */
    public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getInfo() {
      return info;
    }
    
    /** Sets the value of the 'info' field */
    public org.ga4gh.models.FeatureSet.Builder setInfo(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
      validate(fields()[5], value);
      this.info = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'info' field has been set */
    public boolean hasInfo() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'info' field */
    public org.ga4gh.models.FeatureSet.Builder clearInfo() {
      info = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public FeatureSet build() {
      try {
        FeatureSet record = new FeatureSet();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.datasetId = fieldSetFlags()[1] ? this.datasetId : (java.lang.String) defaultValue(fields()[1]);
        record.referenceSetId = fieldSetFlags()[2] ? this.referenceSetId : (java.lang.String) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.String) defaultValue(fields()[3]);
        record.sourceURI = fieldSetFlags()[4] ? this.sourceURI : (java.lang.String) defaultValue(fields()[4]);
        record.info = fieldSetFlags()[5] ? this.info : (java.util.Map<java.lang.String,java.util.List<java.lang.String>>) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
