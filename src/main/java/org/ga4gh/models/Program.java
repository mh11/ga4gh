/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Program extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Program\",\"namespace\":\"org.ga4gh.models\",\"fields\":[{\"name\":\"commandLine\",\"type\":[\"null\",\"string\"],\"doc\":\"The command line used to run this program.\",\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"doc\":\"The user specified ID of the program.\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"The name of the program.\",\"default\":null},{\"name\":\"prevProgramId\",\"type\":[\"null\",\"string\"],\"doc\":\"The ID of the program run before this one.\",\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"doc\":\"The version of the program run.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The command line used to run this program. */
   private java.lang.CharSequence commandLine;
  /** The user specified ID of the program. */
   private java.lang.CharSequence id;
  /** The name of the program. */
   private java.lang.CharSequence name;
  /** The ID of the program run before this one. */
   private java.lang.CharSequence prevProgramId;
  /** The version of the program run. */
   private java.lang.CharSequence version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Program() {}

  /**
   * All-args constructor.
   */
  public Program(java.lang.CharSequence commandLine, java.lang.CharSequence id, java.lang.CharSequence name, java.lang.CharSequence prevProgramId, java.lang.CharSequence version) {
    this.commandLine = commandLine;
    this.id = id;
    this.name = name;
    this.prevProgramId = prevProgramId;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return commandLine;
    case 1: return id;
    case 2: return name;
    case 3: return prevProgramId;
    case 4: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: commandLine = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: prevProgramId = (java.lang.CharSequence)value$; break;
    case 4: version = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'commandLine' field.
   * The command line used to run this program.   */
  public java.lang.CharSequence getCommandLine() {
    return commandLine;
  }

  /**
   * Sets the value of the 'commandLine' field.
   * The command line used to run this program.   * @param value the value to set.
   */
  public void setCommandLine(java.lang.CharSequence value) {
    this.commandLine = value;
  }

  /**
   * Gets the value of the 'id' field.
   * The user specified ID of the program.   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The user specified ID of the program.   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * The name of the program.   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * The name of the program.   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'prevProgramId' field.
   * The ID of the program run before this one.   */
  public java.lang.CharSequence getPrevProgramId() {
    return prevProgramId;
  }

  /**
   * Sets the value of the 'prevProgramId' field.
   * The ID of the program run before this one.   * @param value the value to set.
   */
  public void setPrevProgramId(java.lang.CharSequence value) {
    this.prevProgramId = value;
  }

  /**
   * Gets the value of the 'version' field.
   * The version of the program run.   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * The version of the program run.   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /** Creates a new Program RecordBuilder */
  public static org.ga4gh.models.Program.Builder newBuilder() {
    return new org.ga4gh.models.Program.Builder();
  }
  
  /** Creates a new Program RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.Program.Builder newBuilder(org.ga4gh.models.Program.Builder other) {
    return new org.ga4gh.models.Program.Builder(other);
  }
  
  /** Creates a new Program RecordBuilder by copying an existing Program instance */
  public static org.ga4gh.models.Program.Builder newBuilder(org.ga4gh.models.Program other) {
    return new org.ga4gh.models.Program.Builder(other);
  }
  
  /**
   * RecordBuilder for Program instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Program>
    implements org.apache.avro.data.RecordBuilder<Program> {

    private java.lang.CharSequence commandLine;
    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence prevProgramId;
    private java.lang.CharSequence version;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.Program.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.Program.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.commandLine)) {
        this.commandLine = data().deepCopy(fields()[0].schema(), other.commandLine);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.prevProgramId)) {
        this.prevProgramId = data().deepCopy(fields()[3].schema(), other.prevProgramId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.version)) {
        this.version = data().deepCopy(fields()[4].schema(), other.version);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Program instance */
    private Builder(org.ga4gh.models.Program other) {
            super(org.ga4gh.models.Program.SCHEMA$);
      if (isValidValue(fields()[0], other.commandLine)) {
        this.commandLine = data().deepCopy(fields()[0].schema(), other.commandLine);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.prevProgramId)) {
        this.prevProgramId = data().deepCopy(fields()[3].schema(), other.prevProgramId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.version)) {
        this.version = data().deepCopy(fields()[4].schema(), other.version);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'commandLine' field */
    public java.lang.CharSequence getCommandLine() {
      return commandLine;
    }
    
    /** Sets the value of the 'commandLine' field */
    public org.ga4gh.models.Program.Builder setCommandLine(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.commandLine = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'commandLine' field has been set */
    public boolean hasCommandLine() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'commandLine' field */
    public org.ga4gh.models.Program.Builder clearCommandLine() {
      commandLine = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.models.Program.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.models.Program.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.ga4gh.models.Program.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'name' field */
    public org.ga4gh.models.Program.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'prevProgramId' field */
    public java.lang.CharSequence getPrevProgramId() {
      return prevProgramId;
    }
    
    /** Sets the value of the 'prevProgramId' field */
    public org.ga4gh.models.Program.Builder setPrevProgramId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.prevProgramId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'prevProgramId' field has been set */
    public boolean hasPrevProgramId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'prevProgramId' field */
    public org.ga4gh.models.Program.Builder clearPrevProgramId() {
      prevProgramId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'version' field */
    public java.lang.CharSequence getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public org.ga4gh.models.Program.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.version = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'version' field */
    public org.ga4gh.models.Program.Builder clearVersion() {
      version = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Program build() {
      try {
        Program record = new Program();
        record.commandLine = fieldSetFlags()[0] ? this.commandLine : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.prevProgramId = fieldSetFlags()[3] ? this.prevProgramId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.version = fieldSetFlags()[4] ? this.version : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
