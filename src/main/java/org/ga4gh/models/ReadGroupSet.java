/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
/** A ReadGroupSet is a logical collection of ReadGroups. Typically one ReadGroupSet
represents all the reads from one experimental sample. */
@org.apache.avro.specific.AvroGenerated
public class ReadGroupSet extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReadGroupSet\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A ReadGroupSet is a logical collection of ReadGroups. Typically one ReadGroupSet\\nrepresents all the reads from one experimental sample.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The read group set ID.\"},{\"name\":\"datasetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ID of the dataset this read group set belongs to.\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The read group set name.\",\"default\":null},{\"name\":\"stats\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReadStats\",\"doc\":\"ReadStats can be used to provide summary statistics about read data.\",\"fields\":[{\"name\":\"alignedReadCount\",\"type\":[\"null\",\"long\"],\"doc\":\"The number of aligned reads.\",\"default\":null},{\"name\":\"unalignedReadCount\",\"type\":[\"null\",\"long\"],\"doc\":\"The number of unaligned reads.\",\"default\":null},{\"name\":\"baseCount\",\"type\":[\"null\",\"long\"],\"doc\":\"The total number of bases.\\n  This is equivalent to the sum of `alignedSequence.length` for all reads.\",\"default\":null}]}],\"doc\":\"Statistical data on reads in this read group set.\",\"default\":null},{\"name\":\"readGroups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReadGroup\",\"doc\":\"A ReadGroup is a set of reads derived from one physical sequencing process.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The read group ID.\"},{\"name\":\"datasetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ID of the dataset this read group belongs to.\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The read group name.\",\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The read group description.\",\"default\":null},{\"name\":\"sampleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The sample this read group's data was generated from.\\n  Note: the current API does not have a rigorous definition of sample. Therefore, this\\n  field actually contains an arbitrary string, typically corresponding to the SM tag in a\\n  BAM file.\"},{\"name\":\"experiment\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Experiment\",\"doc\":\"An experimental preparation of a sample.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The experiment UUID. This is globally unique.\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of the experiment.\",\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A description of the experiment.\",\"default\":null},{\"name\":\"createDateTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The time at which this record was created. \\n  Format: :ref:`ISO 8601 <metadata_date_time>`\"},{\"name\":\"updateDateTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The time at which this record was last updated.\\n  Format: :ref:`ISO 8601 <metadata_date_time>`\"},{\"name\":\"runTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The time at which this experiment was performed.\\n  Granularity here is variable (e.g. date only).\\n  Format: :ref:`ISO 8601 <metadata_date_time>`\",\"default\":null},{\"name\":\"molecule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The molecule examined in this experiment. (e.g. genomics DNA, total RNA)\",\"default\":null},{\"name\":\"strategy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The experiment technique or strategy applied to the sample.\\n  (e.g. whole genome sequencing, RNA-seq, RIP-seq)\",\"default\":null},{\"name\":\"selection\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The method used to enrich the target. (e.g. immunoprecipitation, size\\n  fractionation, MNase digestion)\",\"default\":null},{\"name\":\"library\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of the library used as part of this experiment.\",\"default\":null},{\"name\":\"libraryLayout\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The configuration of sequenced reads. (e.g. Single or Paired)\",\"default\":null},{\"name\":\"instrumentModel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The instrument model used as part of this experiment.\\n    This maps to sequencing technology in BAM.\"},{\"name\":\"instrumentDataFile\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The data file generated by the instrument.\\n  TODO: This isn't actually a file is it?\\n  Should this be `instrumentData` instead?\",\"default\":null},{\"name\":\"sequencingCenter\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The sequencing center used as part of this experiment.\"},{\"name\":\"platformUnit\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The platform unit used as part of this experiment. This is a flowcell-barcode\\n  or slide unique identifier.\",\"default\":null},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"A map of additional experiment information.\",\"default\":{}}]}],\"doc\":\"The experiment used to generate this read group.\"},{\"name\":\"predictedInsertSize\",\"type\":[\"null\",\"int\"],\"doc\":\"The predicted insert size of this read group.\",\"default\":null},{\"name\":\"created\",\"type\":[\"null\",\"long\"],\"doc\":\"The time at which this read group was created in milliseconds from the epoch.\",\"default\":null},{\"name\":\"updated\",\"type\":[\"null\",\"long\"],\"doc\":\"The time at which this read group was last updated in milliseconds\\n  from the epoch.\",\"default\":null},{\"name\":\"stats\",\"type\":[\"null\",\"ReadStats\"],\"doc\":\"Statistical data on reads in this read group.\",\"default\":null},{\"name\":\"programs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Program\",\"doc\":\"Program can be used to track the provenance of how read data was generated.\",\"fields\":[{\"name\":\"commandLine\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The command line used to run this program.\",\"default\":null},{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The user specified ID of the program.\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of the program.\",\"default\":null},{\"name\":\"prevProgramId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ID of the program run before this one.\",\"default\":null},{\"name\":\"version\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The version of the program run.\",\"default\":null}]}},\"doc\":\"The programs used to generate this read group.\",\"default\":[]},{\"name\":\"referenceSetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ID of the reference set to which the reads in this read group are aligned.\\n  Required if there are any read alignments.\",\"default\":null},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"A map of additional read group information.\",\"default\":{}}]}},\"doc\":\"The read groups in this set.\",\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The read group set ID. */
   private java.lang.String id;
  /** The ID of the dataset this read group set belongs to. */
   private java.lang.String datasetId;
  /** The read group set name. */
   private java.lang.String name;
  /** Statistical data on reads in this read group set. */
   private org.ga4gh.models.ReadStats stats;
  /** The read groups in this set. */
   private java.util.List<org.ga4gh.models.ReadGroup> readGroups;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ReadGroupSet() {}

  /**
   * All-args constructor.
   */
  public ReadGroupSet(java.lang.String id, java.lang.String datasetId, java.lang.String name, org.ga4gh.models.ReadStats stats, java.util.List<org.ga4gh.models.ReadGroup> readGroups) {
    this.id = id;
    this.datasetId = datasetId;
    this.name = name;
    this.stats = stats;
    this.readGroups = readGroups;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return datasetId;
    case 2: return name;
    case 3: return stats;
    case 4: return readGroups;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: datasetId = (java.lang.String)value$; break;
    case 2: name = (java.lang.String)value$; break;
    case 3: stats = (org.ga4gh.models.ReadStats)value$; break;
    case 4: readGroups = (java.util.List<org.ga4gh.models.ReadGroup>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * The read group set ID.   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The read group set ID.   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'datasetId' field.
   * The ID of the dataset this read group set belongs to.   */
  public java.lang.String getDatasetId() {
    return datasetId;
  }

  /**
   * Sets the value of the 'datasetId' field.
   * The ID of the dataset this read group set belongs to.   * @param value the value to set.
   */
  public void setDatasetId(java.lang.String value) {
    this.datasetId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * The read group set name.   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * The read group set name.   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'stats' field.
   * Statistical data on reads in this read group set.   */
  public org.ga4gh.models.ReadStats getStats() {
    return stats;
  }

  /**
   * Sets the value of the 'stats' field.
   * Statistical data on reads in this read group set.   * @param value the value to set.
   */
  public void setStats(org.ga4gh.models.ReadStats value) {
    this.stats = value;
  }

  /**
   * Gets the value of the 'readGroups' field.
   * The read groups in this set.   */
  public java.util.List<org.ga4gh.models.ReadGroup> getReadGroups() {
    return readGroups;
  }

  /**
   * Sets the value of the 'readGroups' field.
   * The read groups in this set.   * @param value the value to set.
   */
  public void setReadGroups(java.util.List<org.ga4gh.models.ReadGroup> value) {
    this.readGroups = value;
  }

  /** Creates a new ReadGroupSet RecordBuilder */
  public static org.ga4gh.models.ReadGroupSet.Builder newBuilder() {
    return new org.ga4gh.models.ReadGroupSet.Builder();
  }
  
  /** Creates a new ReadGroupSet RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.ReadGroupSet.Builder newBuilder(org.ga4gh.models.ReadGroupSet.Builder other) {
    return new org.ga4gh.models.ReadGroupSet.Builder(other);
  }
  
  /** Creates a new ReadGroupSet RecordBuilder by copying an existing ReadGroupSet instance */
  public static org.ga4gh.models.ReadGroupSet.Builder newBuilder(org.ga4gh.models.ReadGroupSet other) {
    return new org.ga4gh.models.ReadGroupSet.Builder(other);
  }
  
  /**
   * RecordBuilder for ReadGroupSet instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReadGroupSet>
    implements org.apache.avro.data.RecordBuilder<ReadGroupSet> {

    private java.lang.String id;
    private java.lang.String datasetId;
    private java.lang.String name;
    private org.ga4gh.models.ReadStats stats;
    private java.util.List<org.ga4gh.models.ReadGroup> readGroups;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.ReadGroupSet.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.ReadGroupSet.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datasetId)) {
        this.datasetId = data().deepCopy(fields()[1].schema(), other.datasetId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stats)) {
        this.stats = data().deepCopy(fields()[3].schema(), other.stats);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.readGroups)) {
        this.readGroups = data().deepCopy(fields()[4].schema(), other.readGroups);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ReadGroupSet instance */
    private Builder(org.ga4gh.models.ReadGroupSet other) {
            super(org.ga4gh.models.ReadGroupSet.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datasetId)) {
        this.datasetId = data().deepCopy(fields()[1].schema(), other.datasetId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stats)) {
        this.stats = data().deepCopy(fields()[3].schema(), other.stats);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.readGroups)) {
        this.readGroups = data().deepCopy(fields()[4].schema(), other.readGroups);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.models.ReadGroupSet.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.models.ReadGroupSet.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'datasetId' field */
    public java.lang.String getDatasetId() {
      return datasetId;
    }
    
    /** Sets the value of the 'datasetId' field */
    public org.ga4gh.models.ReadGroupSet.Builder setDatasetId(java.lang.String value) {
      validate(fields()[1], value);
      this.datasetId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetId' field has been set */
    public boolean hasDatasetId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'datasetId' field */
    public org.ga4gh.models.ReadGroupSet.Builder clearDatasetId() {
      datasetId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.ga4gh.models.ReadGroupSet.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'name' field */
    public org.ga4gh.models.ReadGroupSet.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'stats' field */
    public org.ga4gh.models.ReadStats getStats() {
      return stats;
    }
    
    /** Sets the value of the 'stats' field */
    public org.ga4gh.models.ReadGroupSet.Builder setStats(org.ga4gh.models.ReadStats value) {
      validate(fields()[3], value);
      this.stats = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'stats' field has been set */
    public boolean hasStats() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'stats' field */
    public org.ga4gh.models.ReadGroupSet.Builder clearStats() {
      stats = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'readGroups' field */
    public java.util.List<org.ga4gh.models.ReadGroup> getReadGroups() {
      return readGroups;
    }
    
    /** Sets the value of the 'readGroups' field */
    public org.ga4gh.models.ReadGroupSet.Builder setReadGroups(java.util.List<org.ga4gh.models.ReadGroup> value) {
      validate(fields()[4], value);
      this.readGroups = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'readGroups' field has been set */
    public boolean hasReadGroups() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'readGroups' field */
    public org.ga4gh.models.ReadGroupSet.Builder clearReadGroups() {
      readGroups = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public ReadGroupSet build() {
      try {
        ReadGroupSet record = new ReadGroupSet();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.datasetId = fieldSetFlags()[1] ? this.datasetId : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.stats = fieldSetFlags()[3] ? this.stats : (org.ga4gh.models.ReadStats) defaultValue(fields()[3]);
        record.readGroups = fieldSetFlags()[4] ? this.readGroups : (java.util.List<org.ga4gh.models.ReadGroup>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
