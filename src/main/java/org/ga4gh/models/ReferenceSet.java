/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
/** A `ReferenceSet` is a set of `Reference`s which typically comprise a
reference assembly, such as `GRCh38`. A `ReferenceSet` defines a common
coordinate space for comparing reference-aligned experimental data. */
@org.apache.avro.specific.AvroGenerated
public class ReferenceSet extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReferenceSet\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A `ReferenceSet` is a set of `Reference`s which typically comprise a\\nreference assembly, such as `GRCh38`. A `ReferenceSet` defines a common\\ncoordinate space for comparing reference-aligned experimental data.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The reference set ID. Unique in the repository.\"},{\"name\":\"referenceIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"The IDs of the `Reference` objects that are part of this set.\\n\\n  This field should be left null if the set contains a very large number of\\n  `Reference`s. The `Reference`s in the set may also be obtained through a\\n  `searchReferences()` API call.\",\"default\":null},{\"name\":\"md5checksum\",\"type\":\"string\",\"doc\":\"Order-independent MD5 checksum which identifies this `ReferenceSet`. The\\n  checksum is computed by sorting all `reference.md5checksum` (for all\\n  `reference` in this set) in ascending lexicographic order, concatenating,\\n  and taking the MD5 of that value.\"},{\"name\":\"ncbiTaxonId\",\"type\":[\"null\",\"int\"],\"doc\":\"ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human) indicating\\n  the species which this assembly is intended to model. Note that contained\\n  `Reference`s may specify a different `ncbiTaxonId`, as assemblies may\\n  contain reference sequences which do not belong to the modeled species, e.g.\\n  EBV in a human reference genome.\",\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Optional free text description of this reference set.\",\"default\":null},{\"name\":\"assemblyId\",\"type\":[\"null\",\"string\"],\"doc\":\"Public id of this reference set, such as `GRCh37`.\",\"default\":null},{\"name\":\"sourceURI\",\"type\":[\"null\",\"string\"],\"doc\":\"Specifies a FASTA format file/string.\",\"default\":null},{\"name\":\"sourceAccessions\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally\\n  with a version number, e.g. `NC_000001.11`.\"},{\"name\":\"isDerived\",\"type\":\"boolean\",\"doc\":\"A reference set may be derived from a source if it contains\\n  additional sequences, or some of the sequences within it are derived\\n  (see the definition of `isDerived` in `Reference`).\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The reference set ID. Unique in the repository. */
   private java.lang.CharSequence id;
  /** The IDs of the `Reference` objects that are part of this set.

  This field should be left null if the set contains a very large number of
  `Reference`s. The `Reference`s in the set may also be obtained through a
  `searchReferences()` API call. */
   private java.util.List<java.lang.CharSequence> referenceIds;
  /** Order-independent MD5 checksum which identifies this `ReferenceSet`. The
  checksum is computed by sorting all `reference.md5checksum` (for all
  `reference` in this set) in ascending lexicographic order, concatenating,
  and taking the MD5 of that value. */
   private java.lang.CharSequence md5checksum;
  /** ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human) indicating
  the species which this assembly is intended to model. Note that contained
  `Reference`s may specify a different `ncbiTaxonId`, as assemblies may
  contain reference sequences which do not belong to the modeled species, e.g.
  EBV in a human reference genome. */
   private java.lang.Integer ncbiTaxonId;
  /** Optional free text description of this reference set. */
   private java.lang.CharSequence description;
  /** Public id of this reference set, such as `GRCh37`. */
   private java.lang.CharSequence assemblyId;
  /** Specifies a FASTA format file/string. */
   private java.lang.CharSequence sourceURI;
  /** All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `NC_000001.11`. */
   private java.util.List<java.lang.CharSequence> sourceAccessions;
  /** A reference set may be derived from a source if it contains
  additional sequences, or some of the sequences within it are derived
  (see the definition of `isDerived` in `Reference`). */
   private boolean isDerived;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ReferenceSet() {}

  /**
   * All-args constructor.
   */
  public ReferenceSet(java.lang.CharSequence id, java.util.List<java.lang.CharSequence> referenceIds, java.lang.CharSequence md5checksum, java.lang.Integer ncbiTaxonId, java.lang.CharSequence description, java.lang.CharSequence assemblyId, java.lang.CharSequence sourceURI, java.util.List<java.lang.CharSequence> sourceAccessions, java.lang.Boolean isDerived) {
    this.id = id;
    this.referenceIds = referenceIds;
    this.md5checksum = md5checksum;
    this.ncbiTaxonId = ncbiTaxonId;
    this.description = description;
    this.assemblyId = assemblyId;
    this.sourceURI = sourceURI;
    this.sourceAccessions = sourceAccessions;
    this.isDerived = isDerived;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return referenceIds;
    case 2: return md5checksum;
    case 3: return ncbiTaxonId;
    case 4: return description;
    case 5: return assemblyId;
    case 6: return sourceURI;
    case 7: return sourceAccessions;
    case 8: return isDerived;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: referenceIds = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: md5checksum = (java.lang.CharSequence)value$; break;
    case 3: ncbiTaxonId = (java.lang.Integer)value$; break;
    case 4: description = (java.lang.CharSequence)value$; break;
    case 5: assemblyId = (java.lang.CharSequence)value$; break;
    case 6: sourceURI = (java.lang.CharSequence)value$; break;
    case 7: sourceAccessions = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: isDerived = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * The reference set ID. Unique in the repository.   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The reference set ID. Unique in the repository.   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'referenceIds' field.
   * The IDs of the `Reference` objects that are part of this set.

  This field should be left null if the set contains a very large number of
  `Reference`s. The `Reference`s in the set may also be obtained through a
  `searchReferences()` API call.   */
  public java.util.List<java.lang.CharSequence> getReferenceIds() {
    return referenceIds;
  }

  /**
   * Sets the value of the 'referenceIds' field.
   * The IDs of the `Reference` objects that are part of this set.

  This field should be left null if the set contains a very large number of
  `Reference`s. The `Reference`s in the set may also be obtained through a
  `searchReferences()` API call.   * @param value the value to set.
   */
  public void setReferenceIds(java.util.List<java.lang.CharSequence> value) {
    this.referenceIds = value;
  }

  /**
   * Gets the value of the 'md5checksum' field.
   * Order-independent MD5 checksum which identifies this `ReferenceSet`. The
  checksum is computed by sorting all `reference.md5checksum` (for all
  `reference` in this set) in ascending lexicographic order, concatenating,
  and taking the MD5 of that value.   */
  public java.lang.CharSequence getMd5checksum() {
    return md5checksum;
  }

  /**
   * Sets the value of the 'md5checksum' field.
   * Order-independent MD5 checksum which identifies this `ReferenceSet`. The
  checksum is computed by sorting all `reference.md5checksum` (for all
  `reference` in this set) in ascending lexicographic order, concatenating,
  and taking the MD5 of that value.   * @param value the value to set.
   */
  public void setMd5checksum(java.lang.CharSequence value) {
    this.md5checksum = value;
  }

  /**
   * Gets the value of the 'ncbiTaxonId' field.
   * ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human) indicating
  the species which this assembly is intended to model. Note that contained
  `Reference`s may specify a different `ncbiTaxonId`, as assemblies may
  contain reference sequences which do not belong to the modeled species, e.g.
  EBV in a human reference genome.   */
  public java.lang.Integer getNcbiTaxonId() {
    return ncbiTaxonId;
  }

  /**
   * Sets the value of the 'ncbiTaxonId' field.
   * ID from http://www.ncbi.nlm.nih.gov/taxonomy (e.g. 9606->human) indicating
  the species which this assembly is intended to model. Note that contained
  `Reference`s may specify a different `ncbiTaxonId`, as assemblies may
  contain reference sequences which do not belong to the modeled species, e.g.
  EBV in a human reference genome.   * @param value the value to set.
   */
  public void setNcbiTaxonId(java.lang.Integer value) {
    this.ncbiTaxonId = value;
  }

  /**
   * Gets the value of the 'description' field.
   * Optional free text description of this reference set.   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Optional free text description of this reference set.   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'assemblyId' field.
   * Public id of this reference set, such as `GRCh37`.   */
  public java.lang.CharSequence getAssemblyId() {
    return assemblyId;
  }

  /**
   * Sets the value of the 'assemblyId' field.
   * Public id of this reference set, such as `GRCh37`.   * @param value the value to set.
   */
  public void setAssemblyId(java.lang.CharSequence value) {
    this.assemblyId = value;
  }

  /**
   * Gets the value of the 'sourceURI' field.
   * Specifies a FASTA format file/string.   */
  public java.lang.CharSequence getSourceURI() {
    return sourceURI;
  }

  /**
   * Sets the value of the 'sourceURI' field.
   * Specifies a FASTA format file/string.   * @param value the value to set.
   */
  public void setSourceURI(java.lang.CharSequence value) {
    this.sourceURI = value;
  }

  /**
   * Gets the value of the 'sourceAccessions' field.
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `NC_000001.11`.   */
  public java.util.List<java.lang.CharSequence> getSourceAccessions() {
    return sourceAccessions;
  }

  /**
   * Sets the value of the 'sourceAccessions' field.
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
  with a version number, e.g. `NC_000001.11`.   * @param value the value to set.
   */
  public void setSourceAccessions(java.util.List<java.lang.CharSequence> value) {
    this.sourceAccessions = value;
  }

  /**
   * Gets the value of the 'isDerived' field.
   * A reference set may be derived from a source if it contains
  additional sequences, or some of the sequences within it are derived
  (see the definition of `isDerived` in `Reference`).   */
  public java.lang.Boolean getIsDerived() {
    return isDerived;
  }

  /**
   * Sets the value of the 'isDerived' field.
   * A reference set may be derived from a source if it contains
  additional sequences, or some of the sequences within it are derived
  (see the definition of `isDerived` in `Reference`).   * @param value the value to set.
   */
  public void setIsDerived(java.lang.Boolean value) {
    this.isDerived = value;
  }

  /** Creates a new ReferenceSet RecordBuilder */
  public static org.ga4gh.models.ReferenceSet.Builder newBuilder() {
    return new org.ga4gh.models.ReferenceSet.Builder();
  }
  
  /** Creates a new ReferenceSet RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.ReferenceSet.Builder newBuilder(org.ga4gh.models.ReferenceSet.Builder other) {
    return new org.ga4gh.models.ReferenceSet.Builder(other);
  }
  
  /** Creates a new ReferenceSet RecordBuilder by copying an existing ReferenceSet instance */
  public static org.ga4gh.models.ReferenceSet.Builder newBuilder(org.ga4gh.models.ReferenceSet other) {
    return new org.ga4gh.models.ReferenceSet.Builder(other);
  }
  
  /**
   * RecordBuilder for ReferenceSet instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReferenceSet>
    implements org.apache.avro.data.RecordBuilder<ReferenceSet> {

    private java.lang.CharSequence id;
    private java.util.List<java.lang.CharSequence> referenceIds;
    private java.lang.CharSequence md5checksum;
    private java.lang.Integer ncbiTaxonId;
    private java.lang.CharSequence description;
    private java.lang.CharSequence assemblyId;
    private java.lang.CharSequence sourceURI;
    private java.util.List<java.lang.CharSequence> sourceAccessions;
    private boolean isDerived;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.ReferenceSet.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.ReferenceSet.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.referenceIds)) {
        this.referenceIds = data().deepCopy(fields()[1].schema(), other.referenceIds);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.md5checksum)) {
        this.md5checksum = data().deepCopy(fields()[2].schema(), other.md5checksum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ncbiTaxonId)) {
        this.ncbiTaxonId = data().deepCopy(fields()[3].schema(), other.ncbiTaxonId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assemblyId)) {
        this.assemblyId = data().deepCopy(fields()[5].schema(), other.assemblyId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sourceURI)) {
        this.sourceURI = data().deepCopy(fields()[6].schema(), other.sourceURI);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sourceAccessions)) {
        this.sourceAccessions = data().deepCopy(fields()[7].schema(), other.sourceAccessions);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isDerived)) {
        this.isDerived = data().deepCopy(fields()[8].schema(), other.isDerived);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ReferenceSet instance */
    private Builder(org.ga4gh.models.ReferenceSet other) {
            super(org.ga4gh.models.ReferenceSet.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.referenceIds)) {
        this.referenceIds = data().deepCopy(fields()[1].schema(), other.referenceIds);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.md5checksum)) {
        this.md5checksum = data().deepCopy(fields()[2].schema(), other.md5checksum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ncbiTaxonId)) {
        this.ncbiTaxonId = data().deepCopy(fields()[3].schema(), other.ncbiTaxonId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assemblyId)) {
        this.assemblyId = data().deepCopy(fields()[5].schema(), other.assemblyId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sourceURI)) {
        this.sourceURI = data().deepCopy(fields()[6].schema(), other.sourceURI);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sourceAccessions)) {
        this.sourceAccessions = data().deepCopy(fields()[7].schema(), other.sourceAccessions);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isDerived)) {
        this.isDerived = data().deepCopy(fields()[8].schema(), other.isDerived);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.models.ReferenceSet.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.models.ReferenceSet.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'referenceIds' field */
    public java.util.List<java.lang.CharSequence> getReferenceIds() {
      return referenceIds;
    }
    
    /** Sets the value of the 'referenceIds' field */
    public org.ga4gh.models.ReferenceSet.Builder setReferenceIds(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.referenceIds = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'referenceIds' field has been set */
    public boolean hasReferenceIds() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'referenceIds' field */
    public org.ga4gh.models.ReferenceSet.Builder clearReferenceIds() {
      referenceIds = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'md5checksum' field */
    public java.lang.CharSequence getMd5checksum() {
      return md5checksum;
    }
    
    /** Sets the value of the 'md5checksum' field */
    public org.ga4gh.models.ReferenceSet.Builder setMd5checksum(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.md5checksum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'md5checksum' field has been set */
    public boolean hasMd5checksum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'md5checksum' field */
    public org.ga4gh.models.ReferenceSet.Builder clearMd5checksum() {
      md5checksum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'ncbiTaxonId' field */
    public java.lang.Integer getNcbiTaxonId() {
      return ncbiTaxonId;
    }
    
    /** Sets the value of the 'ncbiTaxonId' field */
    public org.ga4gh.models.ReferenceSet.Builder setNcbiTaxonId(java.lang.Integer value) {
      validate(fields()[3], value);
      this.ncbiTaxonId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'ncbiTaxonId' field has been set */
    public boolean hasNcbiTaxonId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'ncbiTaxonId' field */
    public org.ga4gh.models.ReferenceSet.Builder clearNcbiTaxonId() {
      ncbiTaxonId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public org.ga4gh.models.ReferenceSet.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.description = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'description' field */
    public org.ga4gh.models.ReferenceSet.Builder clearDescription() {
      description = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'assemblyId' field */
    public java.lang.CharSequence getAssemblyId() {
      return assemblyId;
    }
    
    /** Sets the value of the 'assemblyId' field */
    public org.ga4gh.models.ReferenceSet.Builder setAssemblyId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.assemblyId = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'assemblyId' field has been set */
    public boolean hasAssemblyId() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'assemblyId' field */
    public org.ga4gh.models.ReferenceSet.Builder clearAssemblyId() {
      assemblyId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'sourceURI' field */
    public java.lang.CharSequence getSourceURI() {
      return sourceURI;
    }
    
    /** Sets the value of the 'sourceURI' field */
    public org.ga4gh.models.ReferenceSet.Builder setSourceURI(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.sourceURI = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'sourceURI' field has been set */
    public boolean hasSourceURI() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'sourceURI' field */
    public org.ga4gh.models.ReferenceSet.Builder clearSourceURI() {
      sourceURI = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'sourceAccessions' field */
    public java.util.List<java.lang.CharSequence> getSourceAccessions() {
      return sourceAccessions;
    }
    
    /** Sets the value of the 'sourceAccessions' field */
    public org.ga4gh.models.ReferenceSet.Builder setSourceAccessions(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.sourceAccessions = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'sourceAccessions' field has been set */
    public boolean hasSourceAccessions() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'sourceAccessions' field */
    public org.ga4gh.models.ReferenceSet.Builder clearSourceAccessions() {
      sourceAccessions = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'isDerived' field */
    public java.lang.Boolean getIsDerived() {
      return isDerived;
    }
    
    /** Sets the value of the 'isDerived' field */
    public org.ga4gh.models.ReferenceSet.Builder setIsDerived(boolean value) {
      validate(fields()[8], value);
      this.isDerived = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'isDerived' field has been set */
    public boolean hasIsDerived() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'isDerived' field */
    public org.ga4gh.models.ReferenceSet.Builder clearIsDerived() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public ReferenceSet build() {
      try {
        ReferenceSet record = new ReferenceSet();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.referenceIds = fieldSetFlags()[1] ? this.referenceIds : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record.md5checksum = fieldSetFlags()[2] ? this.md5checksum : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.ncbiTaxonId = fieldSetFlags()[3] ? this.ncbiTaxonId : (java.lang.Integer) defaultValue(fields()[3]);
        record.description = fieldSetFlags()[4] ? this.description : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.assemblyId = fieldSetFlags()[5] ? this.assemblyId : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.sourceURI = fieldSetFlags()[6] ? this.sourceURI : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.sourceAccessions = fieldSetFlags()[7] ? this.sourceAccessions : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.isDerived = fieldSetFlags()[8] ? this.isDerived : (java.lang.Boolean) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
