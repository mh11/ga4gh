/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.ga4gh.models;  
@SuppressWarnings("all")
/** A `VariantAnnotation` record represents the result of comparing a variant
to a set of reference data. */
@org.apache.avro.specific.AvroGenerated
public class VariantAnnotation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VariantAnnotation\",\"namespace\":\"org.ga4gh.models\",\"doc\":\"A `VariantAnnotation` record represents the result of comparing a variant\\nto a set of reference data.\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of this VariantAnnotation.\"},{\"name\":\"variantId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The variant ID.\"},{\"name\":\"variantAnnotationSetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the variant annotation set this record belongs to.\"},{\"name\":\"createDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The :ref:`ISO 8601 <metadata_date_time>` time at which this record was created.\",\"default\":null},{\"name\":\"transcriptEffects\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TranscriptEffect\",\"doc\":\"A transcript effect record is a set of information describing the\\neffect of an allele on a transcript\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the transcript effect record\"},{\"name\":\"featureId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The id of the transcript feature the annotation is relative to\"},{\"name\":\"alternateBases\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Alternate allele - a variant may have more than one alternate allele,\\n  each of which will have distinct annotation.\",\"default\":null},{\"name\":\"effects\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OntologyTerm\",\"doc\":\"An ontology term describing an attribute. (e.g. the phenotype attribute\\n  'polydactyly' from HPO)\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Ontology source identifier - the identifier, a CURIE (preferred) or\\n  PURL for an ontology source e.g. http://purl.obolibrary.org/obo/hp.obo\\n  It differs from the standard GA4GH schema's :ref:`id <apidesign_object_ids>`\\n  in that it is a URI pointing to an information resource outside of the scope\\n  of the schema or its resource implementation.\"},{\"name\":\"term\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Ontology term - the representation the id is pointing to.\",\"default\":null},{\"name\":\"sourceName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Ontology source name - the name of ontology from which the term is obtained\\n  e.g. 'Human Phenotype Ontology'\",\"default\":null},{\"name\":\"sourceVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Ontology source version - the version of the ontology from which the\\n  OntologyTerm is obtained; e.g. 2.6.1.\\n  There is no standard for ontology versioning and some frequently\\n  released ontologies may use a datestamp, or build number.\",\"default\":null}]}},\"doc\":\"Effect of variant on this feature\"},{\"name\":\"hgvsAnnotation\",\"type\":{\"type\":\"record\",\"name\":\"HGVSAnnotation\",\"doc\":\"A HGVSAnnotation record holds Human Genome Variation Society descriptions\\nof the sequence change with respect to genomic, transcript and protein\\nsequences. See: http://www.hgvs.org/mutnomen/recs.html.\\nDescriptions should be provided at genomic level. Descriptions at transcript\\nlevel should be provided when the allele lies within a transcript. Descriptions\\nat protein level should be provided when the allele lies within the translated\\nsequence or stop codon.\",\"fields\":[{\"name\":\"genomic\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transcript\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"protein\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"doc\":\"Human Genome Variation Society variant descriptions\"},{\"name\":\"cDNALocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AlleleLocation\",\"doc\":\"An allele location record holds the location of an allele relative to a\\nnon-genomic coordinate system such as a CDS or protein and holds the\\nreference and alternate sequence where appropriate\",\"fields\":[{\"name\":\"start\",\"type\":\"int\",\"doc\":\"Relative start position of the allele in this coordinate system\"},{\"name\":\"end\",\"type\":[\"null\",\"int\"],\"doc\":\"Relative end position of the allele in this coordinate system\",\"default\":null},{\"name\":\"referenceSequence\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Reference sequence in feature (this should be the codon at CDS level)\",\"default\":null},{\"name\":\"alternateSequence\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Alternate sequence in feature (this should be the codon at CDS level)\",\"default\":null}]}],\"doc\":\"Change relative to cDNA\",\"default\":null},{\"name\":\"CDSLocation\",\"type\":[\"null\",\"AlleleLocation\"],\"default\":null},{\"name\":\"proteinLocation\",\"type\":[\"null\",\"AlleleLocation\"],\"doc\":\"Change relative to protein\",\"default\":null},{\"name\":\"analysisResults\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AnalysisResult\",\"doc\":\"An AnalysisResult record holds the output of a prediction package such\\nas SIFT on a specific allele.\",\"fields\":[{\"name\":\"analysisId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the analysis record for this result\"},{\"name\":\"result\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The text-based result for this analysis\"},{\"name\":\"score\",\"type\":[\"null\",\"int\"],\"doc\":\"The numeric score for this analysis\"}]}},\"doc\":\"Output from prediction packages such as SIFT\"}]}},\"doc\":\"The transcript effect annotation for the alleles of this variant. Each one\\n  represents the effect of a single allele on a single transcript.\",\"default\":[]},{\"name\":\"info\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"doc\":\"Additional annotation data in key-value pairs.\",\"default\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The ID of this VariantAnnotation. */
   private java.lang.String id;
  /** The variant ID. */
   private java.lang.String variantId;
  /** The ID of the variant annotation set this record belongs to. */
   private java.lang.String variantAnnotationSetId;
  /** The :ref:`ISO 8601 <metadata_date_time>` time at which this record was created. */
   private java.lang.String createDateTime;
  /** The transcript effect annotation for the alleles of this variant. Each one
  represents the effect of a single allele on a single transcript. */
   private java.util.List<org.ga4gh.models.TranscriptEffect> transcriptEffects;
  /** Additional annotation data in key-value pairs. */
   private java.util.Map<java.lang.String,java.util.List<java.lang.String>> info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public VariantAnnotation() {}

  /**
   * All-args constructor.
   */
  public VariantAnnotation(java.lang.String id, java.lang.String variantId, java.lang.String variantAnnotationSetId, java.lang.String createDateTime, java.util.List<org.ga4gh.models.TranscriptEffect> transcriptEffects, java.util.Map<java.lang.String,java.util.List<java.lang.String>> info) {
    this.id = id;
    this.variantId = variantId;
    this.variantAnnotationSetId = variantAnnotationSetId;
    this.createDateTime = createDateTime;
    this.transcriptEffects = transcriptEffects;
    this.info = info;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return variantId;
    case 2: return variantAnnotationSetId;
    case 3: return createDateTime;
    case 4: return transcriptEffects;
    case 5: return info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: variantId = (java.lang.String)value$; break;
    case 2: variantAnnotationSetId = (java.lang.String)value$; break;
    case 3: createDateTime = (java.lang.String)value$; break;
    case 4: transcriptEffects = (java.util.List<org.ga4gh.models.TranscriptEffect>)value$; break;
    case 5: info = (java.util.Map<java.lang.String,java.util.List<java.lang.String>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * The ID of this VariantAnnotation.   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The ID of this VariantAnnotation.   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'variantId' field.
   * The variant ID.   */
  public java.lang.String getVariantId() {
    return variantId;
  }

  /**
   * Sets the value of the 'variantId' field.
   * The variant ID.   * @param value the value to set.
   */
  public void setVariantId(java.lang.String value) {
    this.variantId = value;
  }

  /**
   * Gets the value of the 'variantAnnotationSetId' field.
   * The ID of the variant annotation set this record belongs to.   */
  public java.lang.String getVariantAnnotationSetId() {
    return variantAnnotationSetId;
  }

  /**
   * Sets the value of the 'variantAnnotationSetId' field.
   * The ID of the variant annotation set this record belongs to.   * @param value the value to set.
   */
  public void setVariantAnnotationSetId(java.lang.String value) {
    this.variantAnnotationSetId = value;
  }

  /**
   * Gets the value of the 'createDateTime' field.
   * The :ref:`ISO 8601 <metadata_date_time>` time at which this record was created.   */
  public java.lang.String getCreateDateTime() {
    return createDateTime;
  }

  /**
   * Sets the value of the 'createDateTime' field.
   * The :ref:`ISO 8601 <metadata_date_time>` time at which this record was created.   * @param value the value to set.
   */
  public void setCreateDateTime(java.lang.String value) {
    this.createDateTime = value;
  }

  /**
   * Gets the value of the 'transcriptEffects' field.
   * The transcript effect annotation for the alleles of this variant. Each one
  represents the effect of a single allele on a single transcript.   */
  public java.util.List<org.ga4gh.models.TranscriptEffect> getTranscriptEffects() {
    return transcriptEffects;
  }

  /**
   * Sets the value of the 'transcriptEffects' field.
   * The transcript effect annotation for the alleles of this variant. Each one
  represents the effect of a single allele on a single transcript.   * @param value the value to set.
   */
  public void setTranscriptEffects(java.util.List<org.ga4gh.models.TranscriptEffect> value) {
    this.transcriptEffects = value;
  }

  /**
   * Gets the value of the 'info' field.
   * Additional annotation data in key-value pairs.   */
  public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getInfo() {
    return info;
  }

  /**
   * Sets the value of the 'info' field.
   * Additional annotation data in key-value pairs.   * @param value the value to set.
   */
  public void setInfo(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
    this.info = value;
  }

  /** Creates a new VariantAnnotation RecordBuilder */
  public static org.ga4gh.models.VariantAnnotation.Builder newBuilder() {
    return new org.ga4gh.models.VariantAnnotation.Builder();
  }
  
  /** Creates a new VariantAnnotation RecordBuilder by copying an existing Builder */
  public static org.ga4gh.models.VariantAnnotation.Builder newBuilder(org.ga4gh.models.VariantAnnotation.Builder other) {
    return new org.ga4gh.models.VariantAnnotation.Builder(other);
  }
  
  /** Creates a new VariantAnnotation RecordBuilder by copying an existing VariantAnnotation instance */
  public static org.ga4gh.models.VariantAnnotation.Builder newBuilder(org.ga4gh.models.VariantAnnotation other) {
    return new org.ga4gh.models.VariantAnnotation.Builder(other);
  }
  
  /**
   * RecordBuilder for VariantAnnotation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VariantAnnotation>
    implements org.apache.avro.data.RecordBuilder<VariantAnnotation> {

    private java.lang.String id;
    private java.lang.String variantId;
    private java.lang.String variantAnnotationSetId;
    private java.lang.String createDateTime;
    private java.util.List<org.ga4gh.models.TranscriptEffect> transcriptEffects;
    private java.util.Map<java.lang.String,java.util.List<java.lang.String>> info;

    /** Creates a new Builder */
    private Builder() {
      super(org.ga4gh.models.VariantAnnotation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.ga4gh.models.VariantAnnotation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.variantId)) {
        this.variantId = data().deepCopy(fields()[1].schema(), other.variantId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.variantAnnotationSetId)) {
        this.variantAnnotationSetId = data().deepCopy(fields()[2].schema(), other.variantAnnotationSetId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[3].schema(), other.createDateTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.transcriptEffects)) {
        this.transcriptEffects = data().deepCopy(fields()[4].schema(), other.transcriptEffects);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.info)) {
        this.info = data().deepCopy(fields()[5].schema(), other.info);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing VariantAnnotation instance */
    private Builder(org.ga4gh.models.VariantAnnotation other) {
            super(org.ga4gh.models.VariantAnnotation.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.variantId)) {
        this.variantId = data().deepCopy(fields()[1].schema(), other.variantId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.variantAnnotationSetId)) {
        this.variantAnnotationSetId = data().deepCopy(fields()[2].schema(), other.variantAnnotationSetId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[3].schema(), other.createDateTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.transcriptEffects)) {
        this.transcriptEffects = data().deepCopy(fields()[4].schema(), other.transcriptEffects);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.info)) {
        this.info = data().deepCopy(fields()[5].schema(), other.info);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.ga4gh.models.VariantAnnotation.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.ga4gh.models.VariantAnnotation.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'variantId' field */
    public java.lang.String getVariantId() {
      return variantId;
    }
    
    /** Sets the value of the 'variantId' field */
    public org.ga4gh.models.VariantAnnotation.Builder setVariantId(java.lang.String value) {
      validate(fields()[1], value);
      this.variantId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'variantId' field has been set */
    public boolean hasVariantId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'variantId' field */
    public org.ga4gh.models.VariantAnnotation.Builder clearVariantId() {
      variantId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'variantAnnotationSetId' field */
    public java.lang.String getVariantAnnotationSetId() {
      return variantAnnotationSetId;
    }
    
    /** Sets the value of the 'variantAnnotationSetId' field */
    public org.ga4gh.models.VariantAnnotation.Builder setVariantAnnotationSetId(java.lang.String value) {
      validate(fields()[2], value);
      this.variantAnnotationSetId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'variantAnnotationSetId' field has been set */
    public boolean hasVariantAnnotationSetId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'variantAnnotationSetId' field */
    public org.ga4gh.models.VariantAnnotation.Builder clearVariantAnnotationSetId() {
      variantAnnotationSetId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'createDateTime' field */
    public java.lang.String getCreateDateTime() {
      return createDateTime;
    }
    
    /** Sets the value of the 'createDateTime' field */
    public org.ga4gh.models.VariantAnnotation.Builder setCreateDateTime(java.lang.String value) {
      validate(fields()[3], value);
      this.createDateTime = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'createDateTime' field has been set */
    public boolean hasCreateDateTime() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'createDateTime' field */
    public org.ga4gh.models.VariantAnnotation.Builder clearCreateDateTime() {
      createDateTime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'transcriptEffects' field */
    public java.util.List<org.ga4gh.models.TranscriptEffect> getTranscriptEffects() {
      return transcriptEffects;
    }
    
    /** Sets the value of the 'transcriptEffects' field */
    public org.ga4gh.models.VariantAnnotation.Builder setTranscriptEffects(java.util.List<org.ga4gh.models.TranscriptEffect> value) {
      validate(fields()[4], value);
      this.transcriptEffects = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'transcriptEffects' field has been set */
    public boolean hasTranscriptEffects() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'transcriptEffects' field */
    public org.ga4gh.models.VariantAnnotation.Builder clearTranscriptEffects() {
      transcriptEffects = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'info' field */
    public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getInfo() {
      return info;
    }
    
    /** Sets the value of the 'info' field */
    public org.ga4gh.models.VariantAnnotation.Builder setInfo(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
      validate(fields()[5], value);
      this.info = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'info' field has been set */
    public boolean hasInfo() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'info' field */
    public org.ga4gh.models.VariantAnnotation.Builder clearInfo() {
      info = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public VariantAnnotation build() {
      try {
        VariantAnnotation record = new VariantAnnotation();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.variantId = fieldSetFlags()[1] ? this.variantId : (java.lang.String) defaultValue(fields()[1]);
        record.variantAnnotationSetId = fieldSetFlags()[2] ? this.variantAnnotationSetId : (java.lang.String) defaultValue(fields()[2]);
        record.createDateTime = fieldSetFlags()[3] ? this.createDateTime : (java.lang.String) defaultValue(fields()[3]);
        record.transcriptEffects = fieldSetFlags()[4] ? this.transcriptEffects : (java.util.List<org.ga4gh.models.TranscriptEffect>) defaultValue(fields()[4]);
        record.info = fieldSetFlags()[5] ? this.info : (java.util.Map<java.lang.String,java.util.List<java.lang.String>>) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
