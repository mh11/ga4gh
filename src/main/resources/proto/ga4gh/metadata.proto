syntax = "proto3";

package org.ga4gh.protobuf;

import "proto/google/protobuf/struct.proto";

// An experimental preparation of a `Sample`.
message Experiment {
  // The experiment UUID. This is globally unique.
  string id = 1;

  // The name of the experiment.
  string name = 2;

  // A description of the experiment.
  string description = 3;

  // The time at which this message was created.
  // Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
  string message_create_time = 4;

  // The time at which this message was last updated.
  // Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
  string message_update_time = 5;

  // The time at which this experiment was performed.
  // Granularity here is variable (e.g. date only).
  // Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
  string run_time = 6;

  // The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
  string molecule = 7;

  // The experiment technique or strategy applied to the sample.
  // (e.g. whole genome sequencing, RNA-seq, RIP-seq)
  string strategy = 8;

  // The method used to enrich the target. (e.g. immunoprecipitation, size
  // fractionation, MNase digestion)
  string selection = 9;

  // The name of the library used as part of this experiment.
  string library = 10;

  // The configuration of sequenced reads. (e.g. Single or Paired).
  string library_layout = 11;

  // The instrument model used as part of this experiment.
  // This maps to sequencing technology in BAM.
  string instrument_model = 12;

  // The data file generated by the instrument.
  // TODO: This isn't actually a file is it?
  // Should this be `instrumentData` instead?
  string instrument_data_file = 13;

  // The sequencing center used as part of this experiment.
  string sequencing_center = 14;

  // The platform unit used as part of this experiment. This is a
  // flowcell-barcode
  // or slide unique identifier.
  string platform_unit = 15;

  // A map of additional experiment information.
  map<string, google.protobuf.ListValue> info = 16;
}

// NOTE: there's ongoing discussion about changing the role of Dataset, possibly
// as follows:
//
// Represents a group of contextually related data objects of (e.g. all
// Individuals, Samples, Experiments associated with a particular feature; or
// e.g. a trio in genetic diagnostics). This concept may be expanded in the
// future (ontology for describing the type of dataset ...).
//
// TODO: Determination of scope, structure, specific attributes, e.g. limiting
// to single message type - see http://purl.obolibrary.org/obo/IAO_0000100 - and
// providing alternative mechanism for heterogeneous data with external
// contextualization, e.g. all messages of different types associated with a
// clinical study.

// A Dataset is a data-provider-specified collection of related data of multiple
// types. Logically, it's akin to a folder -- it's up to the provider what goes
// into the folder.
// For server implementors, they're a useful level of granularity for
// implementing administrative features such as access control (e.g. Dataset X
// is public; Dataset Y is only available to lab Z's collaborators) and billing
// (e.g. the costs of hosting Dataset Y should be charged to lab Z).
//
// For data curators, they're 'the simplest thing that could possibly work' for
// grouping data (e.g. Dataset X has all the reads, variants, and expression
// levels for a particular research project; Dataset Y has all the work product
// from a particular grant).
//
// For data accessors, they're a simple way to scope exploration and analysis
// (e.g. are there any supporting examples in 1000genomes? what's the
// distribution of that result in the data from our project?)
message Dataset {
  // The dataset's id, (at least) locally unique.
  string id = 1;

  // The name of the dataset.
  string name = 2;

  // Additional, human-readable information on the dataset.
  string description = 3;
}
